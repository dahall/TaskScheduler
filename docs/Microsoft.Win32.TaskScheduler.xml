<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Win32.TaskScheduler</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.TaskScheduler.Action">
      <summary>
            Abstract base class that provides the common properties that are inherited by all action objects. An action object is created by the
            <see cref="M:Microsoft.Win32.TaskScheduler.ActionCollection.AddNew(Microsoft.Win32.TaskScheduler.TaskActionType)" /> method.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Action.ActionType">
      <summary>Gets the type of the action.</summary>
      <value>The type of the action.</value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Action.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Action.CompareTo(Microsoft.Win32.TaskScheduler.Action)">
      <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current
            instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
      <param name="obj">An object to compare with this instance.</param>
      <returns>A value that indicates the relative order of the objects being compared.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Action.CreateAction(Microsoft.Win32.TaskScheduler.TaskActionType)">
      <summary>Creates the specified action.</summary>
      <param name="actionType">Type of the action to instantiate.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> of specified type.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Action.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Action.Equals(Microsoft.Win32.TaskScheduler.Action)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <c>true</c> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Action.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Action.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Action.Id">
      <summary>Gets or sets the identifier of the action.</summary>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.Action.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Action.ToString">
      <summary>Returns the action Id.</summary>
      <returns>String representation of action.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Action.ToString(System.Globalization.CultureInfo)">
      <summary>Returns a <see cref="T:System.String" /> that represents this action.</summary>
      <param name="culture">The culture.</param>
      <returns>String representation of action.</returns>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.Action.unboundValues">
      <summary>List of unbound values when working with Actions not associated with a registered task.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.ActionCollection">
      <summary>Collection that contains the actions that are performed by the task.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.Add(System.String,System.String,System.String)">
      <summary>Adds an <see cref="T:Microsoft.Win32.TaskScheduler.ExecAction" /> to the task.</summary>
      <param name="path">Path to an executable file.</param>
      <param name="arguments">Arguments associated with the command-line operation. This value can be null.</param>
      <param name="workingDirectory">
            Directory that contains either the executable file or the files that are used by the executable file. This value can be null.
            </param>
      <returns>The bound <see cref="T:Microsoft.Win32.TaskScheduler.ExecAction" /> that was added to the collection.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.Add``1(``0)">
      <summary>Adds an action to the task.</summary>
      <param name="action">A derived <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> class.</param>
      <typeparam name="TAction">A type derived from <see cref="T:Microsoft.Win32.TaskScheduler.Action" />.</typeparam>
      <returns>The bound <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> that was added to the collection.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.AddNew(Microsoft.Win32.TaskScheduler.TaskActionType)">
      <summary>Adds a new <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> instance to the task.</summary>
      <param name="actionType">Type of task to be created</param>
      <returns>Specialized <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.AddRange(System.Collections.Generic.IEnumerable{Microsoft.Win32.TaskScheduler.Action})">
      <summary>Adds a collection of actions to the end of the <see cref="T:Microsoft.Win32.TaskScheduler.ActionCollection" />.</summary>
      <param name="actions">
            The actions to be added to the end of the <see cref="T:Microsoft.Win32.TaskScheduler.ActionCollection" />. The collection itself cannot be <c>null</c> and cannot
            contain <c>null</c> elements.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actions" /> is <c>null</c>.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.Clear">
      <summary>Clears all actions from the task.</summary>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.ActionCollection.CollectionChanged">
      <summary>Occurs when a collection changes.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.Contains(Microsoft.Win32.TaskScheduler.Action)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.ContainsType(System.Type)">
      <summary>Determines whether the specified action type is contained in this collection.</summary>
      <param name="actionType">Type of the action.</param>
      <returns>
        <c>true</c> if the specified action type is contained in this collection; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ActionCollection.Context">
      <summary>Gets or sets the identifier of the principal for the task.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.CopyTo(Microsoft.Win32.TaskScheduler.Action[],System.Int32)">
      <summary>
            Copies the elements of the <see cref="T:Microsoft.Win32.TaskScheduler.ActionCollection" /> to an array of <see cref="T:Microsoft.Win32.TaskScheduler.Action" />, starting at a particular index.
            </summary>
      <param name="array">
            The <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> array that is the destination of the elements copied from <see cref="T:Microsoft.Win32.TaskScheduler.ActionCollection" />. The <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> array must have zero-based indexing.
            </param>
      <param name="arrayIndex">The zero-based index in <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> array at which copying begins.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.CopyTo(System.Int32,Microsoft.Win32.TaskScheduler.Action[],System.Int32,System.Int32)">
      <summary>
            Copies the elements of the <see cref="T:Microsoft.Win32.TaskScheduler.ActionCollection" /> to an <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> array, starting at a particular <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> array index.
            </summary>
      <param name="index">The zero-based index in the source at which copying begins.</param>
      <param name="array">
            The <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> array that is the destination of the elements copied from <see cref="T:Microsoft.Win32.TaskScheduler.ActionCollection" />. The <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> array must have zero-based indexing.
            </param>
      <param name="arrayIndex">The zero-based index in <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> array at which copying begins.</param>
      <param name="count">The number of elements to copy.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:Microsoft.Win32.TaskScheduler.ActionCollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.
            </exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ActionCollection.Count">
      <summary>Gets the number of actions in the collection.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.Find(System.Predicate{Microsoft.Win32.TaskScheduler.Action})">
      <summary>
            Searches for an <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> that matches the conditions defined by the specified predicate, and returns the first
            occurrence within the entire collection.
            </summary>
      <param name="match">
            The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> to search for.
            </param>
      <returns>
            The first <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> that matches the conditions defined by the specified predicate, if found; otherwise, <c>null</c>.
            </returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.FindIndexOf(System.Int32,System.Int32,System.Predicate{Microsoft.Win32.TaskScheduler.Action})">
      <summary>
            Searches for an <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> that matches the conditions defined by the specified predicate, and returns the zero-based
            index of the first occurrence within the collection that starts at the specified index and contains the specified number of elements.
            </summary>
      <param name="startIndex">The zero-based starting index of the search.</param>
      <param name="count">The number of elements in the collection to search.</param>
      <param name="match">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</param>
      <returns>
            The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.
            </returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.FindIndexOf(System.Predicate{Microsoft.Win32.TaskScheduler.Action})">
      <summary>
            Searches for an <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> that matches the conditions defined by the specified predicate, and returns the zero-based
            index of the first occurrence within the collection.
            </summary>
      <param name="match">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</param>
      <returns>
            The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.
            </returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.GetEnumerator">
      <summary>Retrieves an enumeration of each of the actions.</summary>
      <returns>
            Returns an object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and that can iterate through the <see cref="T:Microsoft.Win32.TaskScheduler.Action" />
            objects within the <see cref="T:Microsoft.Win32.TaskScheduler.ActionCollection" />.
            </returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.IndexOf(Microsoft.Win32.TaskScheduler.Action)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <returns>The index of <paramref name="item" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.IndexOf(System.String)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.</summary>
      <param name="actionId">The id ( <see cref="P:Microsoft.Win32.TaskScheduler.Action.Id" />) of the action to be retrieved.</param>
      <returns>The index of <paramref name="actionId" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.Insert(System.Int32,Microsoft.Win32.TaskScheduler.Action)">
      <summary>Inserts an action at the specified index.</summary>
      <param name="index">The zero-based index at which action should be inserted.</param>
      <param name="action">The action to insert into the list.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ActionCollection.Item(System.Int32)">
      <summary>Gets or sets a an action at the specified index.</summary>
      <value>The zero-based index of the action to get or set.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ActionCollection.Item(System.String)">
      <summary>Gets or sets a specified action from the collection.</summary>
      <param name="actionId">The id ( <see cref="P:Microsoft.Win32.TaskScheduler.Action.Id" />) of the action to be retrieved.</param>
      <returns>Specialized <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> instance.</returns>
      <value>The <see cref="T:Microsoft.Win32.TaskScheduler.Action" />.</value>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.ArgumentOutOfRangeException"></exception>
      <exception cref="T:System.NullReferenceException"></exception>
      <exception cref="T:System.InvalidOperationException">Mismatching Id for action and lookup.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ActionCollection.PowerShellConversion">
      <summary>
            Gets or sets the systems under which unsupported actions will be converted to PowerShell <see cref="T:Microsoft.Win32.TaskScheduler.ExecAction" /> instances.
            </summary>
      <value>The PowerShell platform options.</value>
      <remarks>
            This property will affect how many actions are physically stored in the system and is tied to the version of Task Scheduler.
            <para>
            If set to <see cref="F:Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption.Never" />, then no actions will ever be converted to PowerShell. This will
            force exceptions to be thrown when unsupported actions our action quantities are found.
            </para><para>
            If set to <see cref="F:Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption.Version1" />, then actions will be converted only under Version 1 of the
            library (Windows XP or Windows Server 2003 and earlier). This option supports multiple actions of all types. If not specified,
            only a single <see cref="T:Microsoft.Win32.TaskScheduler.ExecAction" /> is supported. Developer must ensure that PowerShell v2 or higher is installed on the
            target computer.
            </para><para>
            If set to <see cref="F:Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption.Version2" /> (which is the default value), then <see cref="T:Microsoft.Win32.TaskScheduler.ShowMessageAction" /> and <see cref="T:Microsoft.Win32.TaskScheduler.EmailAction" /> references will be converted to their PowerShell equivalents on systems
            on or after Windows 8 / Server 2012.
            </para><para>
            If set to <see cref="F:Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption.All" />, then any actions not supported by the Task Scheduler version will be
            converted to PowerShell.
            </para></remarks>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.ActionCollection.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.Remove(Microsoft.Win32.TaskScheduler.Action)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method
            also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.RemoveAt(System.Int32)">
      <summary>Removes the action at a specified index.</summary>
      <param name="index">Index of action to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Index out of range.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.ToArray">
      <summary>Copies the elements of the <see cref="T:Microsoft.Win32.TaskScheduler.ActionCollection" /> to a new array.</summary>
      <returns>An array containing copies of the elements of the <see cref="T:Microsoft.Win32.TaskScheduler.ActionCollection" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ActionCollection.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the actions in this collection.</summary>
      <returns>A <see cref="T:System.String" /> that represents the actions in this collection.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ActionCollection.XmlText">
      <summary>Gets or sets an XML-formatted version of the collection.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.BootTrigger">
      <summary>Represents a trigger that starts a task when the system is booted.</summary>
      <remarks>
             A BootTrigger will fire when the system starts. It can only be delayed. All triggers that support a delay implement the
             ITriggerDelay interface.
             </remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.BootTrigger.#ctor">
      <summary>Creates an unbound instance of a <see cref="T:Microsoft.Win32.TaskScheduler.BootTrigger" />.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.BootTrigger.Delay">
      <summary>Gets or sets a value that indicates the amount of time between when the system is booted and when the task is started.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.BootTrigger.V2GetTriggerString">
      <summary>Gets the non-localized trigger string for V2 triggers.</summary>
      <returns>String describing the trigger.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.ComHandlerAction">
      <summary>
             Represents an action that fires a handler. Only available on Task Scheduler 2.0. <note>Only available for Task Scheduler 2.0 on
             Windows Vista or Windows Server 2003 and later.</note></summary>
      <remarks>
             This action is the most complex. It allows the task to execute and In-Proc COM server object that implements the ITaskHandler
             interface. There is a sample project that shows how to do this in the Downloads section.
             </remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ComHandlerAction.#ctor">
      <summary>Creates an unbound instance of <see cref="T:Microsoft.Win32.TaskScheduler.ComHandlerAction" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ComHandlerAction.#ctor(System.Guid,System.String)">
      <summary>Creates an unbound instance of <see cref="T:Microsoft.Win32.TaskScheduler.ComHandlerAction" />.</summary>
      <param name="classId">Identifier of the handler class.</param>
      <param name="data">Addition data associated with the handler.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ComHandlerAction.ClassId">
      <summary>Gets or sets the identifier of the handler class.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ComHandlerAction.ClassName">
      <summary>Gets the name of the object referred to by <see cref="P:Microsoft.Win32.TaskScheduler.ComHandlerAction.ClassId" />.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ComHandlerAction.Data">
      <summary>Gets or sets additional data that is associated with the handler.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ComHandlerAction.Equals(Microsoft.Win32.TaskScheduler.Action)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <c>true</c> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ComHandlerAction.ToString">
      <summary>Gets a string representation of the <see cref="T:Microsoft.Win32.TaskScheduler.ComHandlerAction" />.</summary>
      <returns>String representation of this action.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.CustomTrigger">
      <summary>
            Represents a custom trigger. This class is based on undocumented features and may change. <note>This type of trigger is only
            available for reading custom triggers. It cannot be used to create custom triggers.</note></summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.CustomTrigger.Clone">
      <summary>Clones this instance.</summary>
      <returns>This method will always throw an exception.</returns>
      <exception cref="T:System.InvalidOperationException">CustomTrigger cannot be cloned due to OS restrictions.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.CustomTrigger.Delay">
      <summary>Gets a value that indicates the amount of time between the trigger events and when the task is started.</summary>
      <exception cref="T:System.NotImplementedException">This value cannot be set.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.CustomTrigger.Name">
      <summary>Gets the name of the custom trigger type.</summary>
      <value>The name of the XML element representing this custom trigger.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.CustomTrigger.Properties">
      <summary>Gets the properties from the XML definition if possible.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.CustomTrigger.V2GetTriggerString">
      <summary>Gets the non-localized trigger string for V2 triggers.</summary>
      <returns>String describing the trigger.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.DailyTrigger">
      <summary>
             Represents a trigger that starts a task based on a daily schedule. For example, the task starts at a specific time every day, every
             other day, every third day, and so on.
             </summary>
      <remarks>A DailyTrigger will fire at a specified time every day or interval of days.</remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.DailyTrigger.#ctor(System.Int16)">
      <summary>Creates an unbound instance of a <see cref="T:Microsoft.Win32.TaskScheduler.DailyTrigger" />.</summary>
      <param name="daysInterval">Interval between the days in the schedule.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.DailyTrigger.CopyProperties(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>
            Copies the properties from another <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> the current instance. This will not copy any properties associated with
            any derived triggers except those supporting the <see cref="T:Microsoft.Win32.TaskScheduler.ITriggerDelay" /> interface.
            </summary>
      <param name="sourceTrigger">The source <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" />.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.DailyTrigger.DaysInterval">
      <summary>Sets or retrieves the interval between the days in the schedule.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.DailyTrigger.Equals(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.DailyTrigger.RandomDelay">
      <summary>Gets or sets a delay time that is randomly added to the start time of the trigger.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.DailyTrigger.V2GetTriggerString">
      <summary>Gets the non-localized trigger string for V2 triggers.</summary>
      <returns>String describing the trigger.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.DaysOfTheWeek">
      <summary>Values for days of the week (Monday, Tuesday, etc.)</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.DaysOfTheWeek.Sunday">
      <summary>Sunday</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.DaysOfTheWeek.Monday">
      <summary>Monday</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.DaysOfTheWeek.Tuesday">
      <summary>Tuesday</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.DaysOfTheWeek.Wednesday">
      <summary>Wednesday</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.DaysOfTheWeek.Thursday">
      <summary>Thursday</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.DaysOfTheWeek.Friday">
      <summary>Friday</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.DaysOfTheWeek.Saturday">
      <summary>Saturday</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.DaysOfTheWeek.AllDays">
      <summary>All days</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.EmailAction">
      <summary>
             Represents an action that sends an e-mail. <note>Only available for Task Scheduler 2.0 on Windows Vista or Windows Server 2003 and
             later.</note><note type="warning">This action has been deprecated in Windows 8 and later. However, this library is able to mimic its
             functionality using PowerShell if the <see cref="P:Microsoft.Win32.TaskScheduler.ActionCollection.PowerShellConversion" /> property is set to <see cref="F:Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption.All" />. To disable this conversion, set the value to <see cref="F:Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption.Never" />.</note></summary>
      <remarks>The EmailAction allows for an email to be sent when the task is triggered.</remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.EmailAction.#ctor">
      <summary>Creates an unbound instance of <see cref="T:Microsoft.Win32.TaskScheduler.EmailAction" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.EmailAction.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>Creates an unbound instance of <see cref="T:Microsoft.Win32.TaskScheduler.EmailAction" />.</summary>
      <param name="subject">Subject of the e-mail.</param>
      <param name="from">E-mail address that you want to send the e-mail from.</param>
      <param name="to">E-mail address or addresses that you want to send the e-mail to.</param>
      <param name="body">Body of the e-mail that contains the e-mail message.</param>
      <param name="mailServer">Name of the server that you use to send e-mail from.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.EmailAction.Attachments">
      <summary>
            Gets or sets an array of file paths to be sent as attachments with the e-mail. Each item must be a <see cref="T:System.String" /> value
            containing a path to file.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.EmailAction.Bcc">
      <summary>Gets or sets the e-mail address or addresses that you want to Bcc in the e-mail.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.EmailAction.Body">
      <summary>Gets or sets the body of the e-mail that contains the e-mail message.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.EmailAction.Cc">
      <summary>Gets or sets the e-mail address or addresses that you want to Cc in the e-mail.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.EmailAction.Equals(Microsoft.Win32.TaskScheduler.Action)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <c>true</c> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.EmailAction.From">
      <summary>Gets or sets the e-mail address that you want to send the e-mail from.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.EmailAction.HeaderFields">
      <summary>Gets or sets the header information in the e-mail message to send.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.EmailAction.Priority">
      <summary>Gets or sets the priority of the e-mail message.</summary>
      <value>A <see cref="T:System.Net.Mail.MailPriority" /> that contains the priority of this message.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.EmailAction.ReplyTo">
      <summary>Gets or sets the e-mail address that you want to reply to.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.EmailAction.Server">
      <summary>Gets or sets the name of the server that you use to send e-mail from.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.EmailAction.Subject">
      <summary>Gets or sets the subject of the e-mail.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.EmailAction.To">
      <summary>Gets or sets the e-mail address or addresses that you want to send the e-mail to.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.EmailAction.ToString">
      <summary>Gets a string representation of the <see cref="T:Microsoft.Win32.TaskScheduler.EmailAction" />.</summary>
      <returns>String representation of this action.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.EventTrigger">
      <summary>
             Represents a trigger that starts a task when a system event occurs. <note>Only available for Task Scheduler 2.0 on Windows Vista or
             Windows Server 2003 and later.</note></summary>
      <remarks>The EventTrigger runs when a system event fires.</remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.EventTrigger.#ctor">
      <summary>Creates an unbound instance of a <see cref="T:Microsoft.Win32.TaskScheduler.EventTrigger" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.EventTrigger.#ctor(System.String,System.String,System.Nullable{System.Int32})">
      <summary>Initializes an unbound instance of the <see cref="T:Microsoft.Win32.TaskScheduler.EventTrigger" /> class and sets a basic event.</summary>
      <param name="log">The event's log.</param>
      <param name="source">The event's source. Can be <c>null</c>.</param>
      <param name="eventId">The event's id. Can be <c>null</c>.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.EventTrigger.BuildQuery(System.String,System.String,System.Nullable{System.Int32})">
      <summary>Builds an event log XML query string based on the input parameters.</summary>
      <param name="log">The event's log.</param>
      <param name="source">The event's source. Can be <c>null</c>.</param>
      <param name="eventId">The event's id. Can be <c>null</c>.</param>
      <returns>XML query string.</returns>
      <exception cref="T:System.ArgumentNullException">log</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.EventTrigger.CopyProperties(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>
            Copies the properties from another <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> the current instance. This will not copy any properties associated with
            any derived triggers except those supporting the <see cref="T:Microsoft.Win32.TaskScheduler.ITriggerDelay" /> interface.
            </summary>
      <param name="sourceTrigger">The source <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" />.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.EventTrigger.Delay">
      <summary>Gets or sets a value that indicates the amount of time between when the system is booted and when the task is started.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.EventTrigger.Equals(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.EventTrigger.GetBasic(System.String@,System.String@,System.Nullable{System.Int32}@)">
      <summary>Gets basic event information.</summary>
      <param name="log">The event's log.</param>
      <param name="source">The event's source. Can be <c>null</c>.</param>
      <param name="eventId">The event's id. Can be <c>null</c>.</param>
      <returns>
        <c>true</c> if subscription represents a basic event, <c>false</c> if not.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.EventTrigger.SetBasic(System.String,System.String,System.Nullable{System.Int32})">
      <summary>
            Sets the subscription for a basic event. This will replace the contents of the <see cref="P:Microsoft.Win32.TaskScheduler.EventTrigger.Subscription" /> property and clear all
            entries in the <see cref="P:Microsoft.Win32.TaskScheduler.EventTrigger.ValueQueries" /> property.
            </summary>
      <param name="log">The event's log.</param>
      <param name="source">The event's source. Can be <c>null</c>.</param>
      <param name="eventId">The event's id. Can be <c>null</c>.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.EventTrigger.Subscription">
      <summary>Gets or sets the XPath query string that identifies the event that fires the trigger.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.EventTrigger.V2GetTriggerString">
      <summary>Gets the non-localized trigger string for V2 triggers.</summary>
      <returns>String describing the trigger.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.EventTrigger.ValueQueries">
      <summary>
            Gets a collection of named XPath queries. Each query in the collection is applied to the last matching event XML returned from
            the subscription query specified in the Subscription property. The name of the query can be used as a variable in the message of
            a <see cref="T:Microsoft.Win32.TaskScheduler.ShowMessageAction" /> action.
            </summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.ExecAction">
      <summary>Represents an action that executes a command-line operation.</summary>
      <remarks>
             All versions of the base library support the ExecAction. It only has three properties that allow it to run an executable with parameters.
             </remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ExecAction.#ctor">
      <summary>Creates a new instance of an <see cref="T:Microsoft.Win32.TaskScheduler.ExecAction" /> that can be added to <see cref="P:Microsoft.Win32.TaskScheduler.TaskDefinition.Actions" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ExecAction.#ctor(System.String,System.String,System.String)">
      <summary>Creates a new instance of an <see cref="T:Microsoft.Win32.TaskScheduler.ExecAction" /> that can be added to <see cref="P:Microsoft.Win32.TaskScheduler.TaskDefinition.Actions" />.</summary>
      <param name="path">Path to an executable file.</param>
      <param name="arguments">Arguments associated with the command-line operation. This value can be null.</param>
      <param name="workingDirectory">
            Directory that contains either the executable file or the files that are used by the executable file. This value can be null.
            </param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ExecAction.Arguments">
      <summary>Gets or sets the arguments associated with the command-line operation.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ExecAction.Equals(Microsoft.Win32.TaskScheduler.Action)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <c>true</c> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ExecAction.IsValidPath(System.String,System.Boolean,System.Boolean)">
      <summary>Determines whether the specified path is a valid filename and, optionally, if it exists.</summary>
      <param name="path">The path.</param>
      <param name="checkIfExists">if set to <c>true</c> check if file exists.</param>
      <param name="throwOnException">if set to <c>true</c> throw exception on error.</param>
      <returns>
        <c>true</c> if the specified path is a valid filename; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ExecAction.Path">
      <summary>Gets or sets the path to an executable file.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ExecAction.SetValidatedPath(System.String,System.Boolean)">
      <summary>
            Validates the input as a valid filename and optionally checks for its existence. If valid, the <see cref="P:Microsoft.Win32.TaskScheduler.ExecAction.Path" /> property is
            set to the validated absolute file path.
            </summary>
      <param name="path">The file path to validate.</param>
      <param name="checkIfExists">if set to <c>true</c> check if the file exists.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ExecAction.ToString">
      <summary>Gets a string representation of the <see cref="T:Microsoft.Win32.TaskScheduler.ExecAction" />.</summary>
      <returns>String representation of this action.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ExecAction.WorkingDirectory">
      <summary>
            Gets or sets the directory that contains either the executable file or the files that are used by the executable file.
            </summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.ICalendarTrigger">
      <summary>Interface that categorizes the trigger as a calendar trigger.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.IdleSettings">
      <summary>
            Specifies how the Task Scheduler performs tasks when the computer is in an idle condition. For information about idle conditions,
            see Task Idle Conditions.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.IdleSettings.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.IdleSettings.IdleDuration">
      <summary>
            Gets or sets a value that indicates the amount of time that the computer must be in an idle state before the task is run.
            </summary>
      <value>
            A value that indicates the amount of time that the computer must be in an idle state before the task is run. The minimum value
            is one minute. If this value is <c>TimeSpan.Zero</c>, then the delay will be set to the default of 10 minutes.
            </value>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.IdleSettings.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.IdleSettings.RestartOnIdle">
      <summary>
            Gets or sets a Boolean value that indicates whether the task is restarted when the computer cycles into an idle condition more
            than once.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.IdleSettings.StopOnIdleEnd">
      <summary>
            Gets or sets a Boolean value that indicates that the Task Scheduler will terminate the task if the idle condition ends before
            the task is completed.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.IdleSettings.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.IdleSettings.WaitTimeout">
      <summary>
            Gets or sets a value that indicates the amount of time that the Task Scheduler will wait for an idle condition to occur. If no
            value is specified for this property, then the Task Scheduler service will wait indefinitely for an idle condition to occur.
            </summary>
      <value>
            A value that indicates the amount of time that the Task Scheduler will wait for an idle condition to occur. The minimum time
            allowed is 1 minute. If this value is <c>TimeSpan.Zero</c>, then the delay will be the equivalent of "Do not wait".
            </value>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.IdleTrigger">
      <summary>
             Represents a trigger that starts a task when the computer goes into an idle state. For information about idle conditions, see Task
             Idle Conditions.
             </summary>
      <remarks>
             An IdleTrigger will fire when the system becomes idle. It is generally a good practice to set a limit on how long it can run using
             the ExecutionTimeLimit property.
             </remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.IdleTrigger.#ctor">
      <summary>Creates an unbound instance of a <see cref="T:Microsoft.Win32.TaskScheduler.IdleTrigger" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.IdleTrigger.V2GetTriggerString">
      <summary>Gets the non-localized trigger string for V2 triggers.</summary>
      <returns>String describing the trigger.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.ITaskHandler">
      <summary>
            Defines the methods that are called by the Task Scheduler service to manage a COM handler.
            </summary>
      <remarks>
            This interface must be implemented for a task to perform a COM handler action. When the Task Scheduler performs a COM handler action, it creates and activates the handler and calls the methods of this interface as needed. For information on specifying a COM handler action, see the <see cref="T:Microsoft.Win32.TaskScheduler.ComHandlerAction" /> class.
            </remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ITaskHandler.Pause">
      <summary>
            Called to pause the COM handler. This method is optional and should only be implemented to give the Task Scheduler the ability to pause and restart the handler.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ITaskHandler.Resume">
      <summary>
            Called to resume the COM handler. This method is optional and should only be implemented to give the Task Scheduler the ability to resume the handler.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ITaskHandler.Start(System.Object,System.String)">
      <summary>
            Called to start the COM handler. This method must be implemented by the handler.
            </summary>
      <param name="pHandlerServices">An <c>IUnkown</c> interface that is used to communicate back with the Task Scheduler.</param>
      <param name="data">The arguments that are required by the handler. These arguments are defined in the <see cref="P:Microsoft.Win32.TaskScheduler.ComHandlerAction.Data" /> property of the COM handler action.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ITaskHandler.Stop(System.Int32@)">
      <summary>
            Called to stop the COM handler. This method must be implemented by the handler.
            </summary>
      <param name="pRetCode">The return code that the Task Schedule will raise as an event when the COM handler action is completed.</param>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.ITaskHandlerStatus">
      <summary>
            Provides the methods that are used by COM handlers to notify the Task Scheduler about the status of the handler.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ITaskHandlerStatus.TaskCompleted(System.Int32)">
      <summary>
            Tells the Task Scheduler that the COM handler is completed.
            </summary>
      <param name="taskErrCode">The error code that the Task Scheduler will raise as an event.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ITaskHandlerStatus.UpdateStatus(System.Int16,System.String)">
      <summary>
            Tells the Task Scheduler about the percentage of completion of the COM handler.
            </summary>
      <param name="percentComplete">A value that indicates the percentage of completion for the COM handler.</param>
      <param name="statusMessage">The message that is displayed in the Task Scheduler UI.</param>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.ITriggerDelay">
      <summary>Interface for triggers that support a delay.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ITriggerDelay.Delay">
      <summary>Gets or sets a value that indicates the amount of time before the task is started.</summary>
      <value>The delay duration.</value>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.ITriggerUserId">
      <summary>Interface for triggers that support a user identifier.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ITriggerUserId.UserId">
      <summary>Gets or sets the user for the <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" />.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.LogonTrigger">
      <summary>
             Represents a trigger that starts a task when a user logs on. When the Task Scheduler service starts, all logged-on users are
             enumerated and any tasks registered with logon triggers that match the logged on user are run. Not available on Task Scheduler 1.0.
             </summary>
      <remarks>
             A LogonTrigger will fire after a user logs on. It can only be delayed. Under V2, you can specify which user it applies to.
             </remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.LogonTrigger.#ctor">
      <summary>Creates an unbound instance of a <see cref="T:Microsoft.Win32.TaskScheduler.LogonTrigger" />.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.LogonTrigger.Delay">
      <summary>Gets or sets a value that indicates the amount of time between when the system is booted and when the task is started.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.LogonTrigger.UserId">
      <summary>
        <para>Gets or sets The identifier of the user. For example, "MyDomain\MyName" or for a local account, "Administrator".</para>
        <para>This property can be in one of the following formats:</para>
        <para>• User name or SID: The task is started when the user logs on to the computer.</para>
        <para>• NULL: The task is started when any user logs on to the computer.</para>
      </summary>
      <remarks>
            If you want a task to be triggered when any member of a group logs on to the computer rather than when a specific user logs on,
            then do not assign a value to the LogonTrigger.UserId property. Instead, create a logon trigger with an empty
            LogonTrigger.UserId property and assign a value to the principal for the task using the Principal.GroupId property.
            </remarks>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.LogonTrigger.V2GetTriggerString">
      <summary>Gets the non-localized trigger string for V2 triggers.</summary>
      <returns>String describing the trigger.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.MaintenanceSettings">
      <summary>Specifies the task settings the Task scheduler will use to start task during Automatic maintenance.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.MaintenanceSettings.Deadline">
      <summary>
            Gets or sets the amount of time after which the Task scheduler attempts to run the task during emergency Automatic maintenance,
            if the task failed to complete during regular Automatic maintenance. The minimum value is one day. The value of the <see cref="P:Microsoft.Win32.TaskScheduler.MaintenanceSettings.Deadline" /> property should be greater than the value of the <see cref="P:Microsoft.Win32.TaskScheduler.MaintenanceSettings.Period" /> property. If the deadline is not
            specified the task will not be started during emergency Automatic maintenance.
            </summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotSupportedPriorToException">Property set for a task on a Task Scheduler version prior to 2.2.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.MaintenanceSettings.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.MaintenanceSettings.Exclusive">
      <summary>
            Gets or sets a value indicating whether the Task Scheduler must start the task during the Automatic maintenance in exclusive
            mode. The exclusivity is guaranteed only between other maintenance tasks and doesn't grant any ordering priority of the task. If
            exclusivity is not specified, the task is started in parallel with other maintenance tasks.
            </summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotSupportedPriorToException">Property set for a task on a Task Scheduler version prior to 2.2.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.MaintenanceSettings.Period">
      <summary>
            Gets or sets the amount of time the task needs to be started during Automatic maintenance. The minimum value is one minute.
            </summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotSupportedPriorToException">Property set for a task on a Task Scheduler version prior to 2.2.</exception>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.MaintenanceSettings.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.MaintenanceSettings.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.MonthlyDOWTrigger">
      <summary>
            Represents a trigger that starts a task on a monthly day-of-week schedule. For example, the task starts on every first Thursday, May
            through October.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.MonthlyDOWTrigger.#ctor(Microsoft.Win32.TaskScheduler.DaysOfTheWeek,Microsoft.Win32.TaskScheduler.MonthsOfTheYear,Microsoft.Win32.TaskScheduler.WhichWeek)">
      <summary>Creates an unbound instance of a <see cref="T:Microsoft.Win32.TaskScheduler.MonthlyDOWTrigger" />.</summary>
      <param name="daysOfWeek">The days of the week.</param>
      <param name="monthsOfYear">The months of the year.</param>
      <param name="weeksOfMonth">The weeks of the month.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.MonthlyDOWTrigger.CopyProperties(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>
            Copies the properties from another <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> the current instance. This will not copy any properties associated with
            any derived triggers except those supporting the <see cref="T:Microsoft.Win32.TaskScheduler.ITriggerDelay" /> interface.
            </summary>
      <param name="sourceTrigger">The source <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" />.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.MonthlyDOWTrigger.DaysOfWeek">
      <summary>Gets or sets the days of the week during which the task runs.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.MonthlyDOWTrigger.Equals(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.MonthlyDOWTrigger.MonthsOfYear">
      <summary>Gets or sets the months of the year during which the task runs.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.MonthlyDOWTrigger.RandomDelay">
      <summary>Gets or sets a delay time that is randomly added to the start time of the trigger.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.MonthlyDOWTrigger.RunOnLastWeekOfMonth">
      <summary>Gets or sets a Boolean value that indicates that the task runs on the last week of the month.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.MonthlyDOWTrigger.V2GetTriggerString">
      <summary>Gets the non-localized trigger string for V2 triggers.</summary>
      <returns>String describing the trigger.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.MonthlyDOWTrigger.WeeksOfMonth">
      <summary>Gets or sets the weeks of the month during which the task runs.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.MonthlyTrigger">
      <summary>
            Represents a trigger that starts a job based on a monthly schedule. For example, the task starts on specific days of specific months.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.MonthlyTrigger.#ctor(System.Int32,Microsoft.Win32.TaskScheduler.MonthsOfTheYear)">
      <summary>Creates an unbound instance of a <see cref="T:Microsoft.Win32.TaskScheduler.MonthlyTrigger" />.</summary>
      <param name="dayOfMonth">
            The day of the month. This must be a value between 1 and 32. If this value is set to 32, then the <see cref="P:Microsoft.Win32.TaskScheduler.MonthlyTrigger.RunOnLastDayOfMonth" /> value will be set and no days will be added regardless of the month.
            </param>
      <param name="monthsOfYear">The months of the year.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.MonthlyTrigger.CopyProperties(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>
            Copies the properties from another <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> the current instance. This will not copy any properties associated with
            any derived triggers except those supporting the <see cref="T:Microsoft.Win32.TaskScheduler.ITriggerDelay" /> interface.
            </summary>
      <param name="sourceTrigger">The source <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" />.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.MonthlyTrigger.DaysOfMonth">
      <summary>Gets or sets the days of the month during which the task runs.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.MonthlyTrigger.Equals(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.MonthlyTrigger.MonthsOfYear">
      <summary>Gets or sets the months of the year during which the task runs.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.MonthlyTrigger.RandomDelay">
      <summary>Gets or sets a delay time that is randomly added to the start time of the trigger.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.MonthlyTrigger.RunOnLastDayOfMonth">
      <summary>Gets or sets a Boolean value that indicates that the task runs on the last day of the month.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.MonthlyTrigger.V2GetTriggerString">
      <summary>Gets the non-localized trigger string for V2 triggers.</summary>
      <returns>String describing the trigger.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.MonthsOfTheYear">
      <summary>Values for months of the year (January, February, etc.)</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.MonthsOfTheYear.January">
      <summary>January</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.MonthsOfTheYear.February">
      <summary>February</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.MonthsOfTheYear.March">
      <summary>March</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.MonthsOfTheYear.April">
      <summary>April</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.MonthsOfTheYear.May">
      <summary>May</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.MonthsOfTheYear.June">
      <summary>June</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.MonthsOfTheYear.July">
      <summary>July</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.MonthsOfTheYear.August">
      <summary>August</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.MonthsOfTheYear.September">
      <summary>September</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.MonthsOfTheYear.October">
      <summary>October</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.MonthsOfTheYear.November">
      <summary>November</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.MonthsOfTheYear.December">
      <summary>December</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.MonthsOfTheYear.AllMonths">
      <summary>All months</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.NamedValueCollection">
      <summary>
            Contains a collection of name-value pairs.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NamedValueCollection.Add(Microsoft.Win32.TaskScheduler.NameValuePair)">
      <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NamedValueCollection.Add(System.String,System.String)">
      <summary>
            Adds a name-value pair to the collection.
            </summary>
      <param name="name">The name associated with a value in a name-value pair.</param>
      <param name="value">The value associated with a name in a name-value pair.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NamedValueCollection.AddRange(System.Collections.Generic.IEnumerable{Microsoft.Win32.TaskScheduler.NameValuePair})">
      <summary>
            Adds the elements of the specified collection to the end of <see cref="T:Microsoft.Win32.TaskScheduler.NamedValueCollection" />.
            </summary>
      <param name="items">The collection of whose elements should be added to the end of <see cref="T:Microsoft.Win32.TaskScheduler.NamedValueCollection" />.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NamedValueCollection.Clear">
      <summary>
            Clears the entire collection of name-value pairs.
            </summary>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.NamedValueCollection.CollectionChanged">
      <summary>
            Occurs when the collection has changed.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NamedValueCollection.CopyTo(Microsoft.Win32.TaskScheduler.NamedValueCollection)">
      <summary>
            Copies current <see cref="T:Microsoft.Win32.TaskScheduler.NamedValueCollection" /> to another.
            </summary>
      <param name="destCollection">The destination collection.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.NamedValueCollection.Count">
      <summary>
            Gets the number of items in the collection.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NamedValueCollection.Dispose">
      <summary>
            Releases all resources used by this class.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NamedValueCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.NamedValueCollection.Item(System.Int32)">
      <summary>
            Gets the value of the item at the specified index.
            </summary>
      <param name="index">The index of the item being requested.</param>
      <returns>The value of the name-value pair at the specified index.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.NamedValueCollection.Item(System.String)">
      <summary>
            Gets the value of the item with the specified name.
            </summary>
      <param name="name">Name to get the value for.</param>
      <returns>Value for the name, or null if not found.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.NamedValueCollection.Names">
      <summary>
            Gets a collection of the names.
            </summary>
      <value>
            The names.
            </value>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.NamedValueCollection.PropertyChanged">
      <summary>
            Occurs when a property has changed.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NamedValueCollection.Remove(System.String)">
      <summary>
            Removes the name-value pair with the specified key from the collection.
            </summary>
      <param name="name">The name associated with a value in a name-value pair.</param>
      <returns>
        <c>true</c> if item successfully removed; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NamedValueCollection.RemoveAt(System.Int32)">
      <summary>
            Removes a selected name-value pair from the collection.
            </summary>
      <param name="index">Index of the pair to remove.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NamedValueCollection.TryGetValue(System.String,System.String@)">
      <summary>
            Gets the value associated with the specified name.
            </summary>
      <param name="name">The name whose value to get.</param>
      <param name="value">When this method returns, the value associated with the specified name, if the name is found; otherwise, <c>null</c>. This parameter is passed uninitialized.</param>
      <returns>
        <c>true</c> if the collection contains an element with the specified name; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.NamedValueCollection.Values">
      <summary>
            Gets a collection of the values.
            </summary>
      <value>
            The values.
            </value>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.NameValuePair">
      <summary>
            Pair of name and value.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NameValuePair.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.NameValuePair" /> class.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NameValuePair.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A copy of an unbound <see cref="T:Microsoft.Win32.TaskScheduler.NameValuePair" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NameValuePair.Equals(Microsoft.Win32.TaskScheduler.NameValuePair)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NameValuePair.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NameValuePair.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.NameValuePair.Name">
      <summary>
            Gets or sets the name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NameValuePair.op_Implicit(System.Collections.Generic.KeyValuePair{System.String,System.String})~Microsoft.Win32.TaskScheduler.NameValuePair">
      <summary>
            Implements the operator implicit NameValuePair.
            </summary>
      <param name="kvp">The KeyValuePair.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.NameValuePair.PropertyChanged">
      <summary>
            Occurs when a property has changed.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NameValuePair.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.NameValuePair.Value">
      <summary>
            Gets or sets the value.
            </summary>
      <value>
            The value.
            </value>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.NetworkSettings">
      <summary>Provides the settings that the Task Scheduler service uses to obtain a network profile.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NetworkSettings.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.NetworkSettings.Id">
      <summary>Gets or sets a GUID value that identifies a network profile.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.NetworkSettings.Name">
      <summary>Gets or sets the name of a network profile. The name is used for display purposes.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.NetworkSettings.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NetworkSettings.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.NotSupportedPriorToException">
      <summary>
            Thrown when the calling method is not supported by Task Scheduler versions prior to the one specified.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NotSupportedPriorToException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException" /> class.
            </summary>
      <param name="serializationInfo">The serialization information.</param>
      <param name="streamingContext">The streaming context.</param>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">
      <summary>
            Thrown when the calling method is not supported by Task Scheduler 1.0.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NotV1SupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException" /> class.
            </summary>
      <param name="serializationInfo">The serialization information.</param>
      <param name="streamingContext">The streaming context.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NotV1SupportedException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException" /> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.NotV2SupportedException">
      <summary>
            Thrown when the calling method is not supported by Task Scheduler 2.0.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.NotV2SupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException" /> class.
            </summary>
      <param name="serializationInfo">The serialization information.</param>
      <param name="streamingContext">The streaming context.</param>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption">
      <summary>Options for when to convert actions to PowerShell equivalents.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption.Never">
      <summary>
            Never convert any actions to PowerShell. This will force exceptions to be thrown when unsupported actions our action quantities
            are found.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption.Version1">
      <summary>
            Convert actions under Version 1 of the library (Windows XP or Windows Server 2003 and earlier). This option supports multiple
            actions of all types. If not specified, only a single <see cref="T:Microsoft.Win32.TaskScheduler.ExecAction" /> is supported. Developer must ensure that
            PowerShell v2 or higher is installed on the target computer.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption.Version2">
      <summary>
            Convert all <see cref="T:Microsoft.Win32.TaskScheduler.ShowMessageAction" /> and <see cref="T:Microsoft.Win32.TaskScheduler.EmailAction" /> references to their PowerShell equivalents on systems
            on or after Windows 8 / Server 2012.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption.All">
      <summary>Convert all actions regardless of version or operating system.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.QuickTriggerType">
      <summary>
            Quick simple trigger types for the
            <see cref="M:Microsoft.Win32.TaskScheduler.TaskService.AddTask(System.String,Microsoft.Win32.TaskScheduler.Trigger,Microsoft.Win32.TaskScheduler.Action,System.String,System.String,Microsoft.Win32.TaskScheduler.TaskLogonType,System.String)" /> method.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.QuickTriggerType.Boot">
      <summary>At boot.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.QuickTriggerType.Idle">
      <summary>On system idle.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.QuickTriggerType.Logon">
      <summary>At logon of any user.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.QuickTriggerType.TaskRegistration">
      <summary>When the task is registered.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.QuickTriggerType.Hourly">
      <summary>Hourly, starting now.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.QuickTriggerType.Daily">
      <summary>Daily, starting now.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.QuickTriggerType.Weekly">
      <summary>Weekly, starting now.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.QuickTriggerType.Monthly">
      <summary>Monthly, starting now.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.RegistrationTrigger">
      <summary>
             Represents a trigger that starts a task when the task is registered or updated. Not available on Task Scheduler 1.0. <note>Only
             available for Task Scheduler 2.0 on Windows Vista or Windows Server 2003 and later.</note></summary>
      <remarks>The RegistrationTrigger will fire after the task is registered (saved). It is advisable to put in a delay.</remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.RegistrationTrigger.#ctor">
      <summary>Creates an unbound instance of a <see cref="T:Microsoft.Win32.TaskScheduler.RegistrationTrigger" />.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.RegistrationTrigger.Delay">
      <summary>Gets or sets a value that indicates the amount of time between when the system is booted and when the task is started.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.RegistrationTrigger.V2GetTriggerString">
      <summary>Gets the non-localized trigger string for V2 triggers.</summary>
      <returns>String describing the trigger.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.RepetitionPattern">
      <summary>Defines how often the task is run and how long the repetition pattern is repeated after the task is started.</summary>
      <remarks>This can be used directly or by assignment for a <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" />.</remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.RepetitionPattern.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.RepetitionPattern" /> class.</summary>
      <param name="interval">
            The amount of time between each restart of the task. The maximum time allowed is 31 days, and the minimum time allowed is 1 minute.
            </param>
      <param name="duration">
            The duration of how long the pattern is repeated. The minimum time allowed is one minute. If <c>TimeSpan.Zero</c> is specified,
            the pattern is repeated indefinitely.
            </param>
      <param name="stopAtDurationEnd">
            If set to <c>true</c> the running instance of the task is stopped at the end of repetition pattern duration.
            </param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.RepetitionPattern.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.RepetitionPattern.Duration">
      <summary>Gets or sets how long the pattern is repeated.</summary>
      <value>
            The duration that the pattern is repeated. The minimum time allowed is one minute. If <c>TimeSpan.Zero</c> is specified, the
            pattern is repeated indefinitely.
            </value>
      <remarks>If you specify a repetition duration for a task, you must also specify the repetition interval.</remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.RepetitionPattern.Equals(Microsoft.Win32.TaskScheduler.RepetitionPattern)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.RepetitionPattern.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.RepetitionPattern.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.RepetitionPattern.Interval">
      <summary>Gets or sets the amount of time between each restart of the task.</summary>
      <value>
            The amount of time between each restart of the task. The maximum time allowed is 31 days, and the minimum time allowed is 1 minute.
            </value>
      <remarks>If you specify a repetition duration for a task, you must also specify the repetition interval.</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The maximum time allowed is 31 days, and the minimum time allowed is 1 minute.
            </exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.RepetitionPattern.IsSet">
      <summary>Determines whether any properties for this <see cref="T:Microsoft.Win32.TaskScheduler.RepetitionPattern" /> have been set.</summary>
      <returns>
        <c>true</c> if properties have been set; otherwise, <c>false</c>.</returns>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.RepetitionPattern.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.RepetitionPattern.StopAtDurationEnd">
      <summary>
            Gets or sets a Boolean value that indicates if a running instance of the task is stopped at the end of repetition pattern duration.
            </summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.ResourceReferenceValue">
      <summary>
            Some string values of <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" /> properties can be set to retrieve their value from existing DLLs as a resource. This class facilitates creating those reference strings.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ResourceReferenceValue.#ctor(System.String,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.ResourceReferenceValue" /> class.
            </summary>
      <param name="dllPath">The DLL path.</param>
      <param name="resourceId">The resource identifier.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ResourceReferenceValue.GetResolvedString">
      <summary>
            Gets the result of pulling the string from the resource file using the identifier.
            </summary>
      <returns>
        <see cref="T:System.String" /> from resource file.</returns>
      <exception cref="T:System.IO.FileNotFoundException">
        <see cref="P:Microsoft.Win32.TaskScheduler.ResourceReferenceValue.ResourceFilePath" /> cannot be found.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Unable to load <see cref="P:Microsoft.Win32.TaskScheduler.ResourceReferenceValue.ResourceFilePath" /> or string identified by <see cref="P:Microsoft.Win32.TaskScheduler.ResourceReferenceValue.ResourceIdentifier" />.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ResourceReferenceValue.op_Implicit(Microsoft.Win32.TaskScheduler.ResourceReferenceValue)~System.String">
      <summary>
            Performs an implicit conversion from <see cref="T:Microsoft.Win32.TaskScheduler.ResourceReferenceValue" /> to <see cref="T:System.String" />.
            </summary>
      <param name="value">The value.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ResourceReferenceValue.Parse(System.String)">
      <summary>
            Parses the input string. String must be in the format "$(@ [Dll], [ResourceID])".
            </summary>
      <param name="value">The input string value.</param>
      <returns>A new <see cref="T:Microsoft.Win32.TaskScheduler.ResourceReferenceValue" /> instance on success or <c>null</c> on failure.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <c>null</c></exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in the format "$(@ [Dll], [ResourceID])"</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ResourceReferenceValue.ResourceFilePath">
      <summary>
            Gets or sets the resource file path. This can be a relative path, full path or lookup path (e.g. %SystemRoot%\System32\ResourceName.dll).
            </summary>
      <value>
            The resource file path.
            </value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ResourceReferenceValue.ResourceIdentifier">
      <summary>
            Gets or sets the resource identifier.
            </summary>
      <value>The resource identifier.</value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ResourceReferenceValue.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> in the format required by the Task Scheduler to reference a string in a DLL.
            </summary>
      <returns>A formatted <see cref="T:System.String" /> in the format $(@ [Dll], [ResourceID]).</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ResourceReferenceValue.TryParse(System.String,Microsoft.Win32.TaskScheduler.ResourceReferenceValue@)">
      <summary>
            Tries to parse to input string. String must be in the format "$(@ [Dll], [ResourceID])".
            </summary>
      <param name="value">The input string value.</param>
      <param name="resourceRef">The resource reference to be returned. On failure, this value equals <c>null</c>.</param>
      <returns>A new <see cref="T:Microsoft.Win32.TaskScheduler.ResourceReferenceValue" /> instance on success or <c>null</c> on failure.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.RunningTask">
      <summary>Provides the methods to get information from and control a running task.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.RunningTask.CurrentAction">
      <summary>Gets the name of the current action that the running task is performing.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.RunningTask.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.RunningTask.EnginePID">
      <summary>Gets the process ID for the engine (process) which is running the task.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.RunningTask.InstanceGuid">
      <summary>Gets the GUID identifier for this instance of the task.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.RunningTask.Refresh">
      <summary>Refreshes all of the local instance variables of the task.</summary>
      <exception cref="T:System.InvalidOperationException">Thrown if task is no longer running.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.RunningTask.State">
      <summary>Gets the operational state of the running task.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.RunningTaskCollection">
      <summary>
            Collection of running tasks in a <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" />. This class has no public constructor and can only be accessed via the
            properties and functions within <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" />.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.RunningTaskCollection.Count">
      <summary>Gets the number of registered tasks in the collection.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.RunningTaskCollection.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.RunningTaskCollection.GetEnumerator">
      <summary>Gets an IEnumerator instance for this collection.</summary>
      <returns>An enumerator.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.RunningTaskCollection.Item(System.Int32)">
      <summary>Gets the specified running task from the collection.</summary>
      <param name="index">The index of the running task to be retrieved.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.RunningTask" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.RunningTaskCollection.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.SessionStateChangeTrigger">
      <summary>
             Triggers tasks for console connect or disconnect, remote connect or disconnect, or workstation lock or unlock notifications.
             <note>Only available for Task Scheduler 2.0 on Windows Vista or Windows Server 2003 and later.</note></summary>
      <remarks>
             The SessionStateChangeTrigger will fire after six different system events: connecting or disconnecting locally or remotely, or
             locking or unlocking the session.
             </remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.SessionStateChangeTrigger.#ctor">
      <summary>Creates an unbound instance of a <see cref="T:Microsoft.Win32.TaskScheduler.SessionStateChangeTrigger" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.SessionStateChangeTrigger.#ctor(Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.SessionStateChangeTrigger" /> class.</summary>
      <param name="stateChange">The state change.</param>
      <param name="userId">The user identifier.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.SessionStateChangeTrigger.CopyProperties(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>
            Copies the properties from another <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> the current instance. This will not copy any properties associated with
            any derived triggers except those supporting the <see cref="T:Microsoft.Win32.TaskScheduler.ITriggerDelay" /> interface.
            </summary>
      <param name="sourceTrigger">The source <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" />.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.SessionStateChangeTrigger.Delay">
      <summary>Gets or sets a value that indicates the amount of time between when the system is booted and when the task is started.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.SessionStateChangeTrigger.Equals(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.SessionStateChangeTrigger.StateChange">
      <summary>Gets or sets the kind of Terminal Server session change that would trigger a task launch.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.SessionStateChangeTrigger.UserId">
      <summary>
            Gets or sets the user for the Terminal Server session. When a session state change is detected for this user, a task is started.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.SessionStateChangeTrigger.V2GetTriggerString">
      <summary>Gets the non-localized trigger string for V2 triggers.</summary>
      <returns>String describing the trigger.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.ShowMessageAction">
      <summary>
             Represents an action that shows a message box when a task is activated. <note>Only available for Task Scheduler 2.0 on Windows Vista
             or Windows Server 2003 and later.</note><note type="warning">This action has been deprecated in Windows 8 and later. However, this
             library is able to mimic its functionality using PowerShell if the <see cref="P:Microsoft.Win32.TaskScheduler.ActionCollection.PowerShellConversion" /> property is
             set to <see cref="F:Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption.All" />. To disable this conversion, set the value to <see cref="F:Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption.Never" />.</note></summary>
      <remarks>Display a message when the trigger fires using the ShowMessageAction.</remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ShowMessageAction.#ctor">
      <summary>Creates a new unbound instance of <see cref="T:Microsoft.Win32.TaskScheduler.ShowMessageAction" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ShowMessageAction.#ctor(System.String,System.String)">
      <summary>Creates a new unbound instance of <see cref="T:Microsoft.Win32.TaskScheduler.ShowMessageAction" />.</summary>
      <param name="messageBody">Message text that is displayed in the body of the message box.</param>
      <param name="title">Title of the message box.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ShowMessageAction.Equals(Microsoft.Win32.TaskScheduler.Action)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <c>true</c> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ShowMessageAction.MessageBody">
      <summary>Gets or sets the message text that is displayed in the body of the message box.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.ShowMessageAction.Title">
      <summary>Gets or sets the title of the message box.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.ShowMessageAction.ToString">
      <summary>Gets a string representation of the <see cref="T:Microsoft.Win32.TaskScheduler.ShowMessageAction" />.</summary>
      <returns>String representation of this action.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.SnapshotItem">
      <summary>Abstract class representing a secured item for storage in a <see cref="T:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot" />.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.SnapshotItem.Path">
      <summary>Gets the path to the item.</summary>
      <value>The path to the item.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.SnapshotItem.Sddl">
      <summary>Gets the SDDL for the item.</summary>
      <value>The SDDL for the item.</value>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.StandardTaskEventId">
      <summary>
            Changes to tasks and the engine that cause events.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.JobStart">
      <summary>Task Scheduler started an instance of a task for a user.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.JobStartFailed">
      <summary>Task Scheduler failed to start a task for a user.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.JobSuccess">
      <summary>Task Scheduler successfully finished an instance of a task for a user.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.JobFailure">
      <summary>Task Scheduler failed to start an instance of a task for a user.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.LogonFailure">
      <summary>Task Scheduler failed to log on the user.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ImpersonationFailure">
      <summary>Task Scheduler failed to impersonate a user.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.JobRegistered">
      <summary>The a user registered the Task Scheduler a task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.TimeTrigger">
      <summary>Task Scheduler launched an instance of a task due to a time trigger.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.EventTrigger">
      <summary>Task Scheduler launched an instance of a task due to an event trigger.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ImmediateTrigger">
      <summary>Task Scheduler launched an instance of a task due to a registration trigger.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.Run">
      <summary>Task Scheduler launched an instance of a task for a user.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.JobTermination">
      <summary>Task Scheduler terminated an instance of a task due to exceeding the time allocated for execution, as configured in the task definition.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.JobNoStartWithoutNetwork">
      <summary>Task Scheduler could not start a task because the network was unavailable. Ensure the computer is connected to the required network as specified in the task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.TaskRegisteredWithoutSomeTriggers">
      <summary>The Task Scheduler registered the a task, but not all the specified triggers will start the task. Ensure all the task triggers are valid.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.MissedTaskLaunched">
      <summary>Task Scheduler could not launch a task as scheduled. Instance is started now as required by the configuration option to start the task when available, if the scheduled time is missed.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.TransactionRollbackFailure">
      <summary>Task Scheduler failed to roll back a transaction when updating or deleting a task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.TaskRegisteredWithoutCredentials">
      <summary>Task Scheduler saved the configuration for a task, but the credentials used to run the task could not be stored.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.IdleTrigger">
      <summary>Task Scheduler launched an instance of a task due to an idle condition.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.BootTrigger">
      <summary>Task Scheduler launched an instance of a task due to system startup.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.LogonTrigger">
      <summary>Task Scheduler launched an instance of a task due to a user logon.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ConsoleConnectTrigger">
      <summary>Task Scheduler launched an instance of a task due to a user connecting to the console.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ConsoleDisconnectTrigger">
      <summary>Task Scheduler launched an instance of a task due to a user disconnecting from the console.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.RemoteConnectTrigger">
      <summary>Task Scheduler launched an instance of a task due to a user remotely connecting.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.RemoteDisconnectTrigger">
      <summary>Task Scheduler launched an instance of a task due to a user remotely disconnecting.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionLockTrigger">
      <summary>Task Scheduler launched an instance of a task due to a user locking the computer.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionUnlockTrigger">
      <summary>Task Scheduler launched an instance of a task due to a user unlocking the computer.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.FailedTaskRestart">
      <summary>Task Scheduler failed to execute a task. Task Scheduler is attempting to restart the task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.RejectedTaskRestart">
      <summary>Task Scheduler failed to execute a task due to a shutdown race condition. Task Scheduler is attempting to restart the task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.IgnoredTaskStart">
      <summary>Task Scheduler did not launch a task because the current time exceeds the configured task end time.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CreatedTaskProcess">
      <summary>Task Scheduler launched an instance of a task in a new process.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.TaskNotRunServiceBusy">
      <summary>The Task Scheduler service failed to start a task due to the service being busy.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.TaskNotStartedTaskQueueQuotaExceeded">
      <summary>Task Scheduler failed to start a task because the number of tasks in the task queue exceeds the quota currently configured.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.TaskQueueQuotaApproaching">
      <summary>The Task Scheduler task launching queue quota is approaching its preset limit of tasks currently configured.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.TaskNotStartedEngineQuotaExceeded">
      <summary>Task Scheduler failed to start a task in the task engine for a user.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.EngineQuotaApproaching">
      <summary>Task Engine for a user is approaching its preset limit of tasks.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.NotStartedWithoutIdle">
      <summary>Task Scheduler did not launch a task because launch condition not met, machine not idle.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.TaskUpdated">
      <summary>A user updated Task Scheduler a task</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.TaskDeleted">
      <summary>A user deleted Task Scheduler a task</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.TaskDisabled">
      <summary>A user disabled Task Scheduler a task</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.TaskStartedOnComputerWakeup">
      <summary>Task Scheduler woke up the computer to run a task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.TaskEventSubscriptionFailed">
      <summary>Task Scheduler failed to subscribe the event trigger for a task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ActionStart">
      <summary>Task Scheduler launched an action in an instance of a task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ActionSuccess">
      <summary>Task Scheduler successfully completed a task instance and action.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ActionFailure">
      <summary>Task Scheduler failed to complete an instance of a task with an action.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ActionLaunchFailure">
      <summary>Task Scheduler failed to launch an action in a task instance.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.EventRenderFailed">
      <summary>Task Scheduler failed to retrieve the event triggering values for a task . The event will be ignored.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.EventAggregateFailed">
      <summary>Task Scheduler failed to match the pattern of events for a task. The events will be ignored.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionExit">
      <summary>Task Scheduler is shutting down the a task engine.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionError">
      <summary>Task Scheduler is shutting down the a task engine due to an error. </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionSentJob">
      <summary>Task Scheduler sent a task to a task engine.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionSentJobFailed">
      <summary>Task Scheduler did not send a task to a task engine.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionFailedToProcessMessage">
      <summary>For a Task Scheduler task engine, the thread pool failed to process the message.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionManagerConnectFailed">
      <summary>The Task Scheduler service failed to connect to a task engine process.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionConnected">
      <summary>Task Scheduler connected to a task engine process.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionJobsOrphaned">
      <summary>There are Task Scheduler tasks orphaned during a task engine shutdown.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionProcessStarted">
      <summary>Task Scheduler started a task engine process.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionProcessLaunchFailed">
      <summary>Task Scheduler failed to start a task engine process due to an error.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionWin32ObjectCreated">
      <summary>Task Scheduler created the Win32 job object for a task engine.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionChannelReady">
      <summary>The Task Scheduler channel is ready to send and receive messages.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionIdle">
      <summary>Task Scheduler has no tasks running for a task engine, and the idle timer has started.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionProcessConnectFailed">
      <summary>A task engine process failed to connect to the Task Scheduler service.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionMessageSendFailed">
      <summary>A task engine failed to send a message to the Task Scheduler service.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionProcessMainStarted">
      <summary>Task Scheduler started a task engine process.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionProcessMainShutdown">
      <summary>Task Scheduler shut down a task engine process.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionProcessReceivedStartJob">
      <summary>A task engine received a message from the Task Scheduler service requesting to launch a task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.SessionProcessReceivedStopJob">
      <summary>A task engine received a message from the Task Scheduler service requesting to stop a task instance.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.NewInstanceIgnored">
      <summary>Task Scheduler did not launch a task because an instance of the same task is already running.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.RunningInstanceStopped">
      <summary>Task Scheduler stopped an instance of a task in order to launch a new instance.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.NewInstanceQueued">
      <summary>Task Scheduler queued an instance of a task and will launch it as soon as another instance completes.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.InstanceQueued">
      <summary>Task Scheduler queued an instance of a task that will launch immediately.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.NoStartOnBatteries">
      <summary>Task Scheduler did not launch a task because the computer is running on batteries. If launching the task on batteries is required, change the respective flag in the task configuration.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.StoppingOnBatteries">
      <summary>Task Scheduler stopped an instance of a task because the computer is switching to battery power.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.StoppingOffIdle">
      <summary>Task Scheduler stopped an instance of a task because the computer is no longer idle.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.StoppingOnTimeout">
      <summary>Task Scheduler stopped an instance of a task because the task timed out.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.StoppingOnRequest">
      <summary>Task Scheduler stopped an instance of a task as request by a user .</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.TimeoutWontWork">
      <summary>Task Scheduler will continue to execute an instance of a task even after the designated timeout, due to a failure to create the timeout mechanism.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.NoStartUserNotLoggedOn">
      <summary>Task Scheduler did not launch a task because a user was not logged on when the launching conditions were met. Ensure the user is logged on or change the task definition to allow the task to launch when the user is logged off.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ScheduleServiceStart">
      <summary>The Task Scheduler service has started.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ScheduleServiceStartFailed">
      <summary>The Task Scheduler service failed to start due to an error.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ScheduleServiceStop">
      <summary>Task Scheduler service is shutting down.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ScheduleServiceError">
      <summary>The Task Scheduler service has encountered an error.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ScheduleServiceRpcInitError">
      <summary>The Task Scheduler service has encountered an RPC initialization error.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ScheduleServiceComInitError">
      <summary>The Task Scheduler service has failed to initialize COM.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ScheduleServiceCredStoreInitError">
      <summary>The Task Scheduler service failed to initialize the credentials store.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ScheduleServiceLsaInitError">
      <summary>Task Scheduler service failed to initialize LSA.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ScheduleServiceIdleServiceInitError">
      <summary>Task Scheduler service failed to initialize idle state detection module. Idle tasks may not be started as required.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ScheduleServiceTimeChangeInitError">
      <summary>The Task Scheduler service failed to initialize a time change notification. System time updates may not be picked by the service and task schedules may not be updated.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ScheduleServiceTimeChangeSignaled">
      <summary>Task Scheduler service received a time system change notification.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.ScheduleServiceRunBootJobsFailed">
      <summary>Task Scheduler service failed to launch tasks triggered by computer startup. Restart the Task Scheduler service.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatStart">
      <summary>Task Scheduler service started Task Compatibility module.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatStartFailed">
      <summary>Task Scheduler service failed to start Task Compatibility module. Tasks may not be able to register on previous Window versions.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatStartRpcFailed">
      <summary>Task Scheduler failed to initialize the RPC server for starting the Task Compatibility module. Tasks may not be able to register on previous Window versions.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatStartNetscheduleFailed">
      <summary>Task Scheduler failed to initialize Net Schedule API for starting the Task Compatibility module. Tasks may not be able to register on previous Window versions.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatStartLsaFailed">
      <summary>Task Scheduler failed to initialize LSA for starting the Task Compatibility module. Tasks may not be able to register on previous Window versions.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatDirectoryMonitorFailed">
      <summary>Task Scheduler failed to start directory monitoring for the Task Compatibility module.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatTaskStatusUpdateFailed">
      <summary>Task Compatibility module failed to update a task to the required status.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatTaskDeleteFailed">
      <summary>Task Compatibility module failed to delete a task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatTaskSetSdFailed">
      <summary>Task Compatibility module failed to set a security descriptor for a task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatTaskUpdateFailed">
      <summary>Task Compatibility module failed to update a task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatUpgradeStartFailed">
      <summary>Task Compatibility module failed to upgrade existing tasks. Upgrade will be attempted again next time 'Task Scheduler' service starts.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatUpgradeNsAccountFailed">
      <summary>Task Compatibility module failed to upgrade NetSchedule account.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatUpgradeStoreEnumFailed">
      <summary>Task Compatibility module failed to read existing store to upgrade tasks.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatUpgradeTaskLoadFailed">
      <summary>Task Compatibility module failed to load a task for upgrade.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatUpgradeTaskRegistrationFailed">
      <summary>Task Compatibility module failed to register a task for upgrade.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatUpgradeLsaCleanupFailed">
      <summary>Task Compatibility module failed to delete LSA store for upgrade.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatUpgradeFailed">
      <summary>Task Compatibility module failed to upgrade existing scheduled tasks.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.CompatUpgradeNeedNotDetermined">
      <summary>Task Compatibility module failed to determine if upgrade is needed.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.VistaBeta2CredstoreUpgradeFailed">
      <summary>Task scheduler was unable to upgrade the credential store from the Beta 2 version. You may need to re-register any tasks that require passwords.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.Unknown">
      <summary>A unknown value.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.Task">
      <summary>
            Provides the methods that are used to run the task immediately, get any running instances of the task, get or set the credentials
            that are used to register the task, and the properties that describe the task.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.CompareTo(Microsoft.Win32.TaskScheduler.Task)">
      <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current
            instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
      <param name="other">An object to compare with this instance.</param>
      <returns>A value that indicates the relative order of the objects being compared.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Task.Definition">
      <summary>Gets the definition of the task.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Task.Enabled">
      <summary>Gets or sets a Boolean value that indicates if the registered task is enabled.</summary>
      <remarks>
            As of version 1.8.1, under V1 systems (prior to Vista), this property will immediately update the Disabled state and re-save the
            current task. If changes have been made to the <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" />, then those changes will be saved.
            </remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.Export(System.String)">
      <summary>Exports the task to the specified file in XML.</summary>
      <param name="outputFileName">Name of the output file.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Task.Folder">
      <summary>Gets an instance of the parent folder.</summary>
      <value>A <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolder" /> object representing the parent folder of this task.</value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.GetAccessControl">
      <summary>
            Gets a <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the task
            described by the current <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> object.
            </summary>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> object that encapsulates the access control rules for the current task.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
      <summary>
            Gets a <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the task
            described by the current <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> object.
            </summary>
      <param name="includeSections">
            One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies which group of access control
            entries to retrieve.
            </param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> object that encapsulates the access control rules for the current task.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.GetInstances">
      <summary>Gets all instances of the currently running registered task.</summary>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.RunningTaskCollection" /> with all instances of current task.</returns>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.GetLastRegistrationTime">
      <summary>
            Gets the last registration time, looking first at the <see cref="P:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo.Date" /> value and then looking for the
            most recent registration event in the Event Log.
            </summary>
      <returns>
        <see cref="T:System.DateTime" /> of the last registration or <see cref="F:System.DateTime.MinValue" /> if no value can be found.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.GetRunTimes(System.DateTime,System.DateTime,System.UInt32)">
      <summary>Gets the times that the registered task is scheduled to run during a specified time.</summary>
      <param name="start">The starting time for the query.</param>
      <param name="end">The ending time for the query.</param>
      <param name="count">The requested number of runs. A value of 0 will return all times requested.</param>
      <returns>The scheduled times that the task will run.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.GetSecurityDescriptorSddlForm(System.Security.AccessControl.SecurityInfos)">
      <summary>Gets the security descriptor for the task. Not available to Task Scheduler 1.0.</summary>
      <param name="includeSections">Section(s) of the security descriptor to return.</param>
      <returns>The security descriptor for the task.</returns>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Task.IsActive">
      <summary>Gets a value indicating whether this task instance is active.</summary>
      <value>
        <c>true</c> if this task instance is active; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Task.LastRunTime">
      <summary>Gets the time the registered task was last run.</summary>
      <value>Returns <see cref="F:System.DateTime.MinValue" /> if there are no prior run times.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Task.LastTaskResult">
      <summary>Gets the results that were returned the last time the registered task was run.</summary>
      <remarks>The value returned is the last exit code of the last program run via an <see cref="T:Microsoft.Win32.TaskScheduler.ExecAction" />.</remarks>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Task.Name">
      <summary>Gets the name of the registered task.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Task.NextRunTime">
      <summary>Gets the time when the registered task is next scheduled to run.</summary>
      <value>Returns <see cref="F:System.DateTime.MinValue" /> if there are no future run times.</value>
      <remarks>
            Potentially breaking change in release 1.8.2. For Task Scheduler 2.0, the return value prior to 1.8.2 would be Dec 30, 1899 if
            there were no future run times. For 1.0, that value would have been <c>DateTime.MinValue</c>. In release 1.8.2 and later, all
            versions will return <c>DateTime.MinValue</c> if there are no future run times. While this is different from the native 2.0
            library, it was deemed more appropriate to have consistency between the two libraries and with other .NET libraries.
            </remarks>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Task.NumberOfMissedRuns">
      <summary>Gets the number of times the registered task has missed a scheduled run.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.OnNotifyPropertyChanged(System.String)">
      <summary>Called when a property has changed to notify any attached elements.</summary>
      <param name="propertyName">Name of the property.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Task.Path">
      <summary>Gets the path to where the registered task is stored.</summary>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.Task.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Task.ReadOnly">
      <summary>
            Gets a value indicating whether this task is read only. Only available if <see cref="P:Microsoft.Win32.TaskScheduler.TaskService.AllowReadOnlyTasks" /> is <c>true</c>.
            </summary>
      <value>
        <c>true</c> if read only; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.RegisterChanges">
      <summary>
            Updates the task with any changes made to the <see cref="P:Microsoft.Win32.TaskScheduler.Task.Definition" /> by calling <see cref="M:Microsoft.Win32.TaskScheduler.TaskFolder.RegisterTaskDefinition(System.String,Microsoft.Win32.TaskScheduler.TaskDefinition)" /> from the currently registered folder using the currently
            registered name.
            </summary>
      <exception cref="T:System.Security.SecurityException">Thrown if task was previously registered with a password.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.Run(System.String[])">
      <summary>Runs the registered task immediately.</summary>
      <param name="parameters">
        <para>
             The parameters used as values in the task actions. A maximum of 32 parameters can be supplied. To run a task with no parameters,
             call this method without any values (e.g.
             <code>Run()</code>
             ).
             </para>
        <para>
             The string values that you specify are paired with names and stored as name-value pairs. If you specify a single string value,
             then Arg0 will be the name assigned to the value. The value can be used in the task action where the $(Arg0) variable is used in
             the action properties.
             </para>
        <para>
             If you pass in values such as "0", "100", and "250" as an array of string values, then "0" will replace the $(Arg0) variables,
             "100" will replace the $(Arg1) variables, and "250" will replace the $(Arg2) variables used in the action properties.
             </para>
        <para>
             For more information and a list of action properties that can use $(Arg0), $(Arg1), ..., $(Arg32) variables in their values, see
             <a href="https://docs.microsoft.com/en-us/windows/desktop/taskschd/task-actions#using-variables-in-action-properties">Task Actions</a>.
             </para>
      </param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.RunningTask" /> instance that defines the new instance of the task.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.RunEx(Microsoft.Win32.TaskScheduler.TaskRunFlags,System.Int32,System.String,System.String[])">
      <summary>Runs the registered task immediately using specified flags and a session identifier.</summary>
      <param name="flags">Defines how the task is run.</param>
      <param name="sessionID">
        <para>The terminal server session in which you want to start the task.</para>
        <para>
             If the <see cref="F:Microsoft.Win32.TaskScheduler.TaskRunFlags.UseSessionId" /> value is not passed into the <paramref name="flags" /> parameter, then the value
             specified in this parameter is ignored.If the <see cref="F:Microsoft.Win32.TaskScheduler.TaskRunFlags.UseSessionId" /> value is passed into the flags parameter
             and the sessionID value is less than or equal to 0, then an invalid argument error will be returned.
             </para>
        <para>
             If the <see cref="F:Microsoft.Win32.TaskScheduler.TaskRunFlags.UseSessionId" /> value is passed into the <paramref name="flags" /> parameter and the sessionID
             value is a valid session ID greater than 0 and if no value is specified for the user parameter, then the Task Scheduler service
             will try to start the task interactively as the user who is logged on to the specified session.
             </para>
        <para>
             If the <see cref="F:Microsoft.Win32.TaskScheduler.TaskRunFlags.UseSessionId" /> value is passed into the <paramref name="flags" /> parameter and the sessionID
             value is a valid session ID greater than 0 and if a user is specified in the user parameter, then the Task Scheduler service
             will try to start the task interactively as the user who is specified in the user parameter.
             </para>
      </param>
      <param name="user">The user for which the task runs.</param>
      <param name="parameters">
        <para>
             The parameters used as values in the task actions. A maximum of 32 parameters can be supplied. To run a task with no parameters,
             call this method without any values (e.g.
             <code>RunEx(0, 0, "MyUserName")</code>
             ).
             </para>
        <para>
             The string values that you specify are paired with names and stored as name-value pairs. If you specify a single string value,
             then Arg0 will be the name assigned to the value. The value can be used in the task action where the $(Arg0) variable is used in
             the action properties.
             </para>
        <para>
             If you pass in values such as "0", "100", and "250" as an array of string values, then "0" will replace the $(Arg0) variables,
             "100" will replace the $(Arg1) variables, and "250" will replace the $(Arg2) variables used in the action properties.
             </para>
        <para>
             For more information and a list of action properties that can use $(Arg0), $(Arg1), ..., $(Arg32) variables in their values, see
             <a href="https://docs.microsoft.com/en-us/windows/desktop/taskschd/task-actions#using-variables-in-action-properties">Task Actions</a>.
             </para>
      </param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.RunningTask" /> instance that defines the new instance of the task.</returns>
      <remarks>
        <para>
             This method will return without error, but the task will not run if the AllowDemandStart property of ITaskSettings is set to
             false for the task.
             </para>
        <para>If RunEx is invoked from a disabled task, it will return <c>null</c> and the task will not be run.</para>
      </remarks>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Task.SecurityDescriptor">
      <summary>Gets or sets the security descriptor for the task.</summary>
      <value>The security descriptor.</value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.SetAccessControl(Microsoft.Win32.TaskScheduler.TaskSecurity)">
      <summary>
             Applies access control list (ACL) entries described by a <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> object to the file described by the current
             <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> object.
             </summary>
      <param name="taskSecurity">
             A <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> object that describes an access control list (ACL) entry to apply to the current task.
             </param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.SetSecurityDescriptorSddlForm(System.String,Microsoft.Win32.TaskScheduler.TaskSetSecurityOptions)">
      <summary>Sets the security descriptor for the task. Not available to Task Scheduler 1.0.</summary>
      <param name="sddlForm">The security descriptor for the task.</param>
      <param name="options">Flags that specify how to set the security descriptor.</param>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.ShowEditor">
      <summary>Dynamically tries to load the assembly for the editor and displays it as editable for this task.</summary>
      <returns>
        <c>true</c> if editor returns with OK response; <c>false</c> otherwise.</returns>
      <remarks>
            The Microsoft.Win32.TaskSchedulerEditor.dll assembly must reside in the same directory as the Microsoft.Win32.TaskScheduler.dll
            or in the GAC.
            </remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.ShowPropertyPage">
      <summary>Shows the property page for the task (v1.0 only).</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Task.State">
      <summary>Gets the operational state of the registered task.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.Stop">
      <summary>Stops the registered task immediately.</summary>
      <remarks>
        <para>The <c>Stop</c> method stops all instances of the task.</para>
        <para>
            System account users can stop a task, users with Administrator group privileges can stop a task, and if a user has rights to
            execute and read a task, then the user can stop the task. A user can stop the task instances that are running under the same
            credentials as the user account. In all other cases, the user is denied access to stop the task.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Task.TaskService">
      <summary>Gets or sets the <see cref="P:Microsoft.Win32.TaskScheduler.Task.TaskService" /> that manages this task.</summary>
      <value>The task service.</value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Task.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Task.Xml">
      <summary>Gets the XML-formatted registration information for the registered task.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskAccessRule">
      <summary>
            Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskAccessRule.#ctor(System.Security.Principal.IdentityReference,Microsoft.Win32.TaskScheduler.TaskRights,System.Security.AccessControl.AccessControlType)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.
            </summary>
      <param name="identity">The user or group the rule applies to. Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">A bitwise combination of <see cref="P:Microsoft.Win32.TaskScheduler.TaskAccessRule.TaskRights" /> values specifying the rights allowed or denied.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskAccessRule.#ctor(System.String,Microsoft.Win32.TaskScheduler.TaskRights,System.Security.AccessControl.AccessControlType)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.
            </summary>
      <param name="identity">The name of the user or group the rule applies to.</param>
      <param name="eventRights">A bitwise combination of <see cref="P:Microsoft.Win32.TaskScheduler.TaskAccessRule.TaskRights" /> values specifying the rights allowed or denied.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskAccessRule.TaskRights">
      <summary>
            Gets the rights allowed or denied by the access rule.
            </summary>
      <value>
            A bitwise combination of <see cref="P:Microsoft.Win32.TaskScheduler.TaskAccessRule.TaskRights" /> values indicating the rights allowed or denied by the access rule.
            </value>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskActionType">
      <summary>Defines the type of actions a task can perform.</summary>
      <remarks>The action type is defined when the action is created and cannot be changed later. See <see cref="M:Microsoft.Win32.TaskScheduler.ActionCollection.AddNew(Microsoft.Win32.TaskScheduler.TaskActionType)" />.</remarks>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskActionType.Execute">
      <summary>
            This action performs a command-line operation. For example, the action can run a script, launch an executable, or, if the name
            of a document is provided, find its associated application and launch the application with the document.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskActionType.ComHandler">
      <summary>This action fires a handler.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskActionType.SendEmail">
      <summary>This action sends and e-mail.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskActionType.ShowMessage">
      <summary>This action shows a message box.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskAuditRule">
      <summary>
            Represents a set of access rights to be audited for a user or group. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskAuditRule.#ctor(System.Security.Principal.IdentityReference,Microsoft.Win32.TaskScheduler.TaskRights,System.Security.AccessControl.AuditFlags)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskAuditRule" /> class, specifying the user or group to audit, the rights to audit, and whether to audit success, failure, or both.
            </summary>
      <param name="identity">The user or group the rule applies to. Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">A bitwise combination of <see cref="P:Microsoft.Win32.TaskScheduler.TaskAuditRule.TaskRights" /> values specifying the kinds of access to audit.</param>
      <param name="flags">The audit flags.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskAuditRule.TaskRights">
      <summary>
            Gets the access rights affected by the audit rule.
            </summary>
      <value>
            A bitwise combination of <see cref="P:Microsoft.Win32.TaskScheduler.TaskAuditRule.TaskRights" /> values that indicates the rights affected by the audit rule.
            </value>
      <remarks>
        <see cref="T:Microsoft.Win32.TaskScheduler.TaskAuditRule" /> objects are immutable. You can create a new audit rule representing a different user, different rights, or a different combination of AuditFlags values, but you cannot modify an existing audit rule.</remarks>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskCollection">
      <summary>
             Contains all the tasks that are registered within a <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolder" />. This class has no public constructor and can only be
             accessed via the properties and functions within <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolder" />.
             </summary>
      <remarks>
             Potentially breaking change in 1.6.2 and later where under V1 the list previously included the '.job' extension on the task name.
             This has been removed so that it is consistent with V2.
             </remarks>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskCollection.Count">
      <summary>Gets the number of registered tasks in the collection.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskCollection.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskCollection.Exists(System.String)">
      <summary>Determines whether the specified task exists.</summary>
      <param name="taskName">The name of the task.</param>
      <returns>true if task exists; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskCollection.GetEnumerator">
      <summary>Gets the collection enumerator for the register task collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for this collection.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskCollection.Item(System.Int32)">
      <summary>Gets the specified registered task from the collection.</summary>
      <param name="index">The index of the registered task to be retrieved.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instance that contains the requested context.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskCollection.Item(System.String)">
      <summary>Gets the named registered task from the collection.</summary>
      <param name="name">The name of the registered task to be retrieved.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instance that contains the requested context.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskCollection.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskCompatibility">
      <summary>Defines what versions of Task Scheduler or the AT command that the task is compatible with.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskCompatibility.AT">
      <summary>The task is compatible with the AT command.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskCompatibility.V1">
      <summary>
            The task is compatible with Task Scheduler 1.0 (Windows Server™ 2003, Windows® XP, or Windows® 2000).
            <para>Items not available when compared to V2:</para><list type="bullet"><item>TaskDefinition.Principal.GroupId - All account information can be retrieved via the UserId property.</item><item>TaskLogonType values Group, None and S4U are not supported.</item><item>TaskDefinition.Principal.RunLevel == TaskRunLevel.Highest is not supported.</item><item>
            Assigning access security to a task is not supported using TaskDefinition.RegistrationInfo.SecurityDescriptorSddlForm or in RegisterTaskDefinition.
            </item><item>
            TaskDefinition.RegistrationInfo.Documentation, Source, URI and Version properties are only supported using this library. See
            details in the remarks for <see cref="P:Microsoft.Win32.TaskScheduler.TaskDefinition.Data" />.
            </item><item>TaskDefinition.Settings.AllowDemandStart cannot be false.</item><item>TaskDefinition.Settings.AllowHardTerminate cannot be false.</item><item>TaskDefinition.Settings.MultipleInstances can only be IgnoreNew.</item><item>TaskDefinition.Settings.NetworkSettings cannot have any values.</item><item>TaskDefinition.Settings.RestartCount can only be 0.</item><item>TaskDefinition.Settings.StartWhenAvailable can only be false.</item><item>
            TaskDefinition.Actions can only contain ExecAction instances unless the TaskDefinition.Actions.PowerShellConversion property has
            the Version1 flag set.
            </item><item>TaskDefinition.Triggers cannot contain CustomTrigger, EventTrigger, SessionStateChangeTrigger, or RegistrationTrigger instances.</item><item>TaskDefinition.Triggers cannot contain instances with delays set.</item><item>TaskDefinition.Triggers cannot contain instances with ExecutionTimeLimit or Id properties set.</item><item>TaskDefinition.Triggers cannot contain LogonTriggers instances with the UserId property set.</item><item>TaskDefinition.Triggers cannot contain MonthlyDOWTrigger instances with the RunOnLastWeekOfMonth property set to <c>true</c>.</item><item>TaskDefinition.Triggers cannot contain MonthlyTrigger instances with the RunOnDayWeekOfMonth property set to <c>true</c>.</item></list></summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskCompatibility.V2">
      <summary>
            The task is compatible with Task Scheduler 2.0 (Windows Vista™, Windows Server™ 2008).
            <para>
            This version is the baseline for the new, non-file based Task Scheduler. See <see cref="F:Microsoft.Win32.TaskScheduler.TaskCompatibility.V1" /> remarks for
            functionality that was not forward-compatible.
            </para></summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskCompatibility.V2_1">
      <summary>
            The task is compatible with Task Scheduler 2.1 (Windows® 7, Windows Server™ 2008 R2).
            <para>Changes from V2:</para><list type="bullet"><item>TaskDefinition.Principal.ProcessTokenSidType can be defined as a value other than Default.</item><item>
            TaskDefinition.Actions may not contain EmailAction or ShowMessageAction instances unless the
            TaskDefinition.Actions.PowerShellConversion property has the Version2 flag set.
            </item><item>TaskDefinition.Principal.RequiredPrivileges can have privilege values assigned.</item><item>TaskDefinition.Settings.DisallowStartOnRemoteAppSession can be set to true.</item><item>TaskDefinition.UseUnifiedSchedulingEngine can be set to true.</item></list></summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskCompatibility.V2_2">
      <summary>
            The task is compatible with Task Scheduler 2.2 (Windows® 8.x, Windows Server™ 2012).
            <para>Changes from V2_1:</para><list type="bullet"><item>
            TaskDefinition.Settings.MaintenanceSettings can have Period or Deadline be values other than TimeSpan.Zero or the Exclusive
            property set to true.
            </item><item>TaskDefinition.Settings.Volatile can be set to true.</item></list></summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskCompatibility.V2_3">
      <summary>
            The task is compatible with Task Scheduler 2.3 (Windows® 10, Windows Server™ 2016).
            <para>Changes from V2_2:</para><list type="bullet"><item>None published.</item></list></summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskCompatibilityEntry">
      <summary>Contains information about the compatibility of the current configuration with a specified version.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskCompatibilityEntry.CompatibilityLevel">
      <summary>Gets the compatibility level.</summary>
      <value>The compatibility level.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskCompatibilityEntry.Property">
      <summary>Gets the property name with the incompatibility.</summary>
      <value>The property name.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskCompatibilityEntry.Reason">
      <summary>Gets the reason for the incompatibility.</summary>
      <value>The reason.</value>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskCreation">
      <summary>Defines how the Task Scheduler service creates, updates, or disables the task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskCreation.Create">
      <summary>The Task Scheduler service registers the task as a new task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskCreation.CreateOrUpdate">
      <summary>
            The Task Scheduler service either registers the task as a new task or as an updated version if the task already exists.
            Equivalent to Create | Update.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskCreation.Disable">
      <summary>
            The Task Scheduler service registers the disabled task. A disabled task cannot run until it is enabled. For more information,
            see Enabled Property of TaskSettings and Enabled Property of RegisteredTask.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskCreation.DontAddPrincipalAce">
      <summary>
            The Task Scheduler service is prevented from adding the allow access-control entry (ACE) for the context principal. When the
            TaskFolder.RegisterTaskDefinition or TaskFolder.RegisterTask functions are called with this flag to update a task, the Task
            Scheduler service does not add the ACE for the new context principal and does not remove the ACE from the old context principal.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskCreation.IgnoreRegistrationTriggers">
      <summary>
            The Task Scheduler service creates the task, but ignores the registration triggers in the task. By ignoring the registration
            triggers, the task will not execute when it is registered unless a time-based trigger causes it to execute on registration.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskCreation.Update">
      <summary>
            The Task Scheduler service registers the task as an updated version of an existing task. When a task with a registration trigger
            is updated, the task will execute after the update occurs.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskCreation.ValidateOnly">
      <summary>
            The Task Scheduler service checks the syntax of the XML that describes the task but does not register the task. This constant
            cannot be combined with the Create, Update, or CreateOrUpdate values.
            </summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskDefinition">
      <summary>Defines all the components of a task, such as the task settings, triggers, actions, and registration information.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskDefinition.Actions">
      <summary>Gets a collection of actions that are performed by the task.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskDefinition.CanUseUnifiedSchedulingEngine(System.Boolean,System.Version)">
      <summary>
            Determines whether this <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" /> can use the Unified Scheduling Engine or if it contains unsupported properties.
            </summary>
      <param name="throwExceptionWithDetails">
            if set to <c>true</c> throws an <see cref="T:System.InvalidOperationException" /> with details about unsupported properties in the Data
            property of the exception.
            </param>
      <param name="taskSchedulerVersion"></param>
      <returns>
        <c>true</c> if this <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" /> can use the Unified Scheduling Engine; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskDefinition.Data">
      <summary>
            Gets or sets the data that is associated with the task. This data is ignored by the Task Scheduler service, but is used by
            third-parties who wish to extend the task format.
            </summary>
      <remarks>
            For V1 tasks, this library makes special use of the SetWorkItemData and GetWorkItemData methods and does not expose that data
            stream directly. Instead, it uses that data stream to hold a dictionary of properties that are not supported under V1, but can
            have values under V2. An example of this is the <see cref="P:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo.URI" /> value which is stored in the data stream.
            <para>
            The library does not provide direct access to the V1 work item data. If using V2 properties with a V1 task, programmatic access
            to the task using the native API will retrieve unreadable results from GetWorkItemData and will eliminate those property values
            if SetWorkItemData is used.
            </para></remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskDefinition.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskDefinition.GetV1SchemaFile(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets the XML Schema file for V1 tasks.</summary>
      <param name="xs">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> for V1 tasks.</param>
      <returns>An object containing the XML Schema for V1 tasks.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskDefinition.LowestSupportedVersion">
      <summary>Gets the lowest supported version that supports the settings for this <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskDefinition.op_Addition(Microsoft.Win32.TaskScheduler.TaskDefinition,Microsoft.Win32.TaskScheduler.Action)">
      <summary>Implements the operator + for actions on a definition, effectively adding the action to the definition.</summary>
      <param name="definition">The definition to which the action is to be added.</param>
      <param name="action">The action to add.</param>
      <returns>The definition with the added action.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskDefinition.op_Addition(Microsoft.Win32.TaskScheduler.TaskDefinition,Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>Implements the operator + for triggers on a definition, effectively adding the trigger to the definition.</summary>
      <param name="definition">The definition to which the trigger is to be added.</param>
      <param name="trigger">The trigger to add.</param>
      <returns>The definition with the added trigger.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskDefinition.Principal">
      <summary>Gets the principal for the task that provides the security credentials for the task.</summary>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.TaskDefinition.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskDefinition.RegistrationInfo">
      <summary>
            Gets a class instance of registration information that is used to describe a task, such as the description of the task, the
            author of the task, and the date the task is registered.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskDefinition.Settings">
      <summary>Gets the settings that define how the Task Scheduler service performs the task.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskDefinition.Triggers">
      <summary>Gets a collection of triggers that are used to start a task.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskDefinition.Validate(System.Boolean)">
      <summary>Validates the current <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" />.</summary>
      <param name="throwException">
            if set to <c>true</c> throw a <see cref="T:System.InvalidOperationException" /> with details about invalid properties.
            </param>
      <returns>
        <c>true</c> if current <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" /> is valid; <c>false</c> if not.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskDefinition.XmlText">
      <summary>Gets or sets the XML-formatted definition of the task.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskEnumGlobalizer">
      <summary>
            Functions to provide localized strings for enumerated types and values.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEnumGlobalizer.GetString(System.Object)">
      <summary>
            Gets a string representing the localized value of the provided enum.
            </summary>
      <param name="enumValue">The enum value.</param>
      <returns>A localized string, if available.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskEvent">
      <summary>
            Historical event information for a task. This class wraps and extends the <see cref="P:Microsoft.Win32.TaskScheduler.TaskEvent.EventRecord" /> class.
            </summary>
      <remarks>
            For events on systems prior to Windows Vista, this class will only have information for the TaskPath, TimeCreated and EventId properties.
            </remarks>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEvent.ActivityId">
      <summary>
            Gets the activity id. This value is <c>null</c> for V1 events.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEvent.CompareTo(Microsoft.Win32.TaskScheduler.TaskEvent)">
      <summary>
            Compares the current object with another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the other parameter.Zero This object is equal to other. Greater than zero This object is greater than other.
            </returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEvent.DataValues">
      <summary>
            An indexer that gets the value of each of the data item values. This value is <c>null</c> for V1 events.
            </summary>
      <value>
            The data values.
            </value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEvent.EventId">
      <summary>
            Gets the event id.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEvent.EventRecord">
      <summary>
            Gets the underlying <see cref="P:Microsoft.Win32.TaskScheduler.TaskEvent.EventRecord" />. This value is <c>null</c> for V1 events.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEvent.GetDataValue(System.String)">
      <summary>
            Gets the data value from the task specific event data item list.
            </summary>
      <param name="name">The name of the data element.</param>
      <returns>Contents of the requested data element if found. <c>null</c> if no value found.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEvent.Level">
      <summary>
            Gets the level. This value is <c>null</c> for V1 events.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEvent.OpCode">
      <summary>
            Gets the op code. This value is <c>null</c> for V1 events.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEvent.ProcessId">
      <summary>
            Gets the process id. This value is <c>null</c> for V1 events.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEvent.RecordId">
      <summary>
            Gets the record id. This value is <c>null</c> for V1 events.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEvent.StandardEventId">
      <summary>
            Gets the <see cref="T:Microsoft.Win32.TaskScheduler.StandardTaskEventId" /> from the <see cref="P:Microsoft.Win32.TaskScheduler.TaskEvent.EventId" />.
            </summary>
      <value>
            The <see cref="T:Microsoft.Win32.TaskScheduler.StandardTaskEventId" />. If not found, returns <see cref="F:Microsoft.Win32.TaskScheduler.StandardTaskEventId.Unknown" />.
            </value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEvent.TaskCategory">
      <summary>
            Gets the task category. This value is <c>null</c> for V1 events.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEvent.TaskPath">
      <summary>
            Gets the task path.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEvent.TimeCreated">
      <summary>
            Gets the time created.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEvent.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEvent.UserId">
      <summary>
            Gets the user id. This value is <c>null</c> for V1 events.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEvent.Version">
      <summary>
            Gets the version. This value is <c>null</c> for V1 events.
            </summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskEvent.EventDataValues">
      <summary>
            Get indexer class for <see cref="T:System.Diagnostics.Eventing.Reader.EventLogRecord" /> data values.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEvent.EventDataValues.Item(System.String)">
      <summary>
            Gets the <see cref="T:System.String" /> value of the specified property name.
            </summary>
      <param name="propertyName">Name of the property.</param>
      <returns>Value of the specified property name. <c>null</c> if property does not exist.</returns>
      <value>
            The value.
            </value>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskEventArgs">
      <summary>
            Information about the task event.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventArgs.Task">
      <summary>
            If possible, gets the task associated with this event.
            </summary>
      <value>
            The task or <c>null</c> if unable to retrieve.
            </value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventArgs.TaskEvent">
      <summary>
            Gets the <see cref="P:Microsoft.Win32.TaskScheduler.TaskEventArgs.TaskEvent" />.
            </summary>
      <value>
            The TaskEvent.
            </value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventArgs.TaskName">
      <summary>
            Gets the task name.
            </summary>
      <value>
            The task name.
            </value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventArgs.TaskPath">
      <summary>
            Gets the task path.
            </summary>
      <value>
            The task path.
            </value>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskEventEnumerator">
      <summary>
            An enumerator over a task's history of events.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventEnumerator.Current">
      <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
      <returns>
            The element in the collection at the current position of the enumerator.
              </returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventEnumerator.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventEnumerator.MoveNext">
      <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
      <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
              </exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventEnumerator.Reset">
      <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
              </exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventEnumerator.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)">
      <summary>
            Seeks the specified bookmark.
            </summary>
      <param name="bookmark">The bookmark.</param>
      <param name="offset">The offset.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventEnumerator.Seek(System.IO.SeekOrigin,System.Int64)">
      <summary>
            Seeks the specified origin.
            </summary>
      <param name="origin">The origin.</param>
      <param name="offset">The offset.</param>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskEventLog">
      <summary>
            Historical event log for a task. Only available for Windows Vista and Windows Server 2008 and later systems.
            </summary>
      <remarks>Many applications have the need to audit the execution of the tasks they supply. To enable this, the library provides the TaskEventLog class that allows for TaskEvent instances to be enumerated. This can be done for single tasks or the entire system. It can also be filtered by specific events or criticality.</remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventLog.#ctor(System.DateTime,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventLog" /> class that looks at all task events from a specified time.
            </summary>
      <param name="startTime">The start time.</param>
      <param name="taskName">Name of the task.</param>
      <param name="machineName">Name of the machine (optional).</param>
      <param name="domain">The domain.</param>
      <param name="user">The user.</param>
      <param name="password">The password.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventLog.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventLog" /> class.
            </summary>
      <param name="taskPath">The task path. This can be retrieved using the <see cref="P:Microsoft.Win32.TaskScheduler.Task.Path" /> property.</param>
      <exception cref="T:System.NotSupportedException">Thrown when instantiated on an OS prior to Windows Vista.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventLog.#ctor(System.String,System.Int32[],System.Int32[],System.Nullable{System.DateTime},System.String,System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventLog" /> class.
            </summary>
      <param name="taskName">Name of the task.</param>
      <param name="eventIDs">The event ids.</param>
      <param name="levels">The levels.</param>
      <param name="startTime">The start time.</param>
      <param name="machineName">Name of the machine (optional).</param>
      <param name="domain">The domain.</param>
      <param name="user">The user.</param>
      <param name="password">The password.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventLog.#ctor(System.String,System.Int32[],System.Nullable{System.DateTime},System.String,System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventLog" /> class.
            </summary>
      <param name="taskName">Name of the task.</param>
      <param name="eventIDs">The event ids.</param>
      <param name="startTime">The start time.</param>
      <param name="machineName">Name of the machine (optional).</param>
      <param name="domain">The domain.</param>
      <param name="user">The user.</param>
      <param name="password">The password.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventLog.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventLog" /> class.
            </summary>
      <param name="machineName">Name of the machine.</param>
      <param name="taskPath">The task path. This can be retrieved using the <see cref="P:Microsoft.Win32.TaskScheduler.Task.Path" /> property.</param>
      <param name="domain">The domain.</param>
      <param name="user">The user.</param>
      <param name="password">The password.</param>
      <exception cref="T:System.NotSupportedException">Thrown when instantiated on an OS prior to Windows Vista.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventLog.Count">
      <summary>
            Gets the total number of events for this task.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventLog.Enabled">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventLog" /> is enabled.
            </summary>
      <value>
        <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventLog.EnumerateInReverse">
      <summary>
            Gets or sets a value indicating whether to enumerate in reverse when calling the default enumerator (typically with foreach statement).
            </summary>
      <value>
        <c>true</c> if enumerates in reverse (newest to oldest) by default; otherwise, <c>false</c> to enumerate oldest to newest.
            </value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventLog.GetEnumerator(System.Boolean)">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <param name="reverse">if set to <c>true</c> reverse.</param>
      <returns>
            A <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventEnumerator" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskEventWatcher">
      <summary>
            Watches system events related to tasks and issues a <see cref="E:Microsoft.Win32.TaskScheduler.TaskEventWatcher.EventRecorded" /> event when the filtered conditions are met.
            <note>Only available for Task Scheduler 2.0 on Windows Vista or Windows Server 2003 and later.</note></summary>
      <remarks>Sometimes, a developer will need to know about events as they occur. In this case, they can use the TaskEventWatcher component that enables the developer to watch a task, a folder, or the entire system for filtered events.</remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventWatcher.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventWatcher" /> class. If other
            properties are not set, this will watch for all events for all tasks on the local machine.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventWatcher.#ctor(Microsoft.Win32.TaskScheduler.Task)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventWatcher" /> class watching only
            those events for the specified task.
            </summary>
      <param name="task">The task to watch.</param>
      <exception cref="T:System.ArgumentNullException">Occurs if the <paramref name="task" /> is <c>null</c>.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventWatcher.#ctor(Microsoft.Win32.TaskScheduler.TaskFolder,System.String,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventWatcher" /> class watching only those events for
            the tasks whose name matches the <paramref name="taskFilter" /> in the specified <paramref name="taskFolder" />
            and optionally all subfolders.
            </summary>
      <param name="taskFolder">The task folder to watch.</param>
      <param name="taskFilter">The filter for task names using standard file system wildcards. Use "*" to include all tasks.</param>
      <param name="includeSubfolders">if set to <c>true</c> include events from tasks subfolders.</param>
      <exception cref="T:System.ArgumentNullException">Occurs if the <paramref name="taskFolder" /> is <c>null</c>.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventWatcher.#ctor(System.String,Microsoft.Win32.TaskScheduler.TaskService)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventWatcher" /> class watching only
            those events for the task with the provided path on the local machine.
            </summary>
      <param name="taskPath">The full path (folders and name) of the task to watch.</param>
      <param name="taskService">The task service.</param>
      <exception cref="T:System.ArgumentException">$Invalid task name: {taskPath}</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventWatcher.#ctor(System.String,System.String,System.Boolean,Microsoft.Win32.TaskScheduler.TaskService)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventWatcher" /> class.
            </summary>
      <param name="folder">The task folder to watch.</param>
      <param name="taskFilter">The filter for task names using standard file system wildcards. Use "*" to include all tasks.</param>
      <param name="includeSubfolders">if set to <c>true</c> include events from tasks subfolders.</param>
      <param name="taskService">The task service.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventWatcher.#ctor(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventWatcher" /> class on a remote machine.
            </summary>
      <param name="machineName">Name of the remote machine.</param>
      <param name="folder">The task folder to watch.</param>
      <param name="taskFilter">The filter for task names using standard file system wildcards. Use "*" to include all tasks.</param>
      <param name="includeSubfolders">if set to <c>true</c> include events from tasks subfolders.</param>
      <param name="domain">The domain of the user account.</param>
      <param name="user">The user name with permissions on the remote machine.</param>
      <param name="password">The password for the user.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventWatcher.#ctor(System.String,System.String,System.String,System.String,System.Security.SecureString)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventWatcher" /> class on a remote machine.
            </summary>
      <param name="machineName">Name of the remote machine.</param>
      <param name="taskPath">The task path.</param>
      <param name="domain">The domain of the user account.</param>
      <param name="user">The user name with permissions on the remote machine.</param>
      <param name="securePassword">The password for the user as a secure string.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventWatcher.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventWatcher" /> class on a remote machine.
            </summary>
      <param name="machineName">Name of the remote machine.</param>
      <param name="taskPath">The task path.</param>
      <param name="domain">The domain of the user account.</param>
      <param name="user">The user name with permissions on the remote machine.</param>
      <param name="password">The password for the user.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventWatcher.BeginInit">
      <summary>
            Signals the object that initialization is starting.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventWatcher.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the FileSystemWatcher and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.Enabled">
      <summary>
            Gets or sets a value indicating whether the component is enabled.
            </summary>
      <value>
        <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventWatcher.EndInit">
      <summary>
            Signals the object that initialization is complete.
            </summary>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.TaskEventWatcher.EventRecorded">
      <summary>
            Occurs when a task or the task engine records an event.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.Filter">
      <summary>
            Gets the filter for this <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventWatcher" />.
            </summary>
      <value>
            The filter.
            </value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.Folder">
      <summary>
            Gets or sets the folder to watch.
            </summary>
      <value>
            The folder path to watch. This value should include the leading "\" to indicate the root folder.
            </value>
      <exception cref="T:System.ArgumentException">Thrown if the folder specified does not exist or contains invalid characters.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.IncludeSubfolders">
      <summary>
            Gets or sets a value indicating whether to include events from subfolders when the
            <see cref="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.Folder" /> property is set. If the <see cref="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.EventFilter.TaskName" /> property is set,
            this property is ignored.
            </summary>
      <value>
        <c>true</c> if include events from subfolders; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventWatcher.OnEventRecorded(System.Object,Microsoft.Win32.TaskScheduler.TaskEventArgs)">
      <summary>
            Fires the <see cref="E:Microsoft.Win32.TaskScheduler.TaskEventWatcher.EventRecorded" /> event.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.SynchronizingObject">
      <summary>
            Gets or sets the synchronizing object.
            </summary>
      <value>
            The synchronizing object.
            </value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.TargetServer">
      <summary>
            Gets or sets the name of the computer that is running the Task Scheduler service that the user is connected to.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.TaskService">
      <summary>
            Gets or sets the <see cref="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.TaskService" /> instance associated with this event watcher. Setting this value
            will override any values set for <see cref="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.TargetServer" />, <see cref="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.UserAccountDomain" />,
            <see cref="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.UserName" />, and <see cref="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.UserPassword" /> and set them to those values in the supplied
            <see cref="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.TaskService" /> instance.
            </summary>
      <value>The TaskService.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.UserAccountDomain">
      <summary>
            Gets or sets the user account domain to be used when connecting to the <see cref="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.TargetServer" />.
            </summary>
      <value>The user account domain.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.UserName">
      <summary>
            Gets or sets the user name to be used when connecting to the <see cref="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.TargetServer" />.
            </summary>
      <value>The user name.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.UserPassword">
      <summary>
            Gets or sets the user password to be used when connecting to the <see cref="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.TargetServer" />.
            </summary>
      <value>The user password.</value>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskEventWatcher.EventFilter">
      <summary>
            Holds filter information for a <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventWatcher" />.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.EventFilter.EventIds">
      <summary>
            Gets or sets an optional array of event identifiers to use when filtering those events that will fire a <see cref="E:Microsoft.Win32.TaskScheduler.TaskEventWatcher.EventRecorded" /> event.
            </summary>
      <value>
            The array of event identifier filters. All know task event identifiers are declared in the <see cref="T:Microsoft.Win32.TaskScheduler.StandardTaskEventId" /> enumeration.
            </value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.EventFilter.EventLevels">
      <summary>
            Gets or sets an optional array of event levels to use when filtering those events that will fire a <see cref="E:Microsoft.Win32.TaskScheduler.TaskEventWatcher.EventRecorded" /> event.
            </summary>
      <value>
            The array of event levels. While event providers can define custom levels, most will use integers defined in the System.Diagnostics.Eventing.Reader.StandardEventLevel enumeration.
            </value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskEventWatcher.EventFilter.TaskName">
      <summary>
            Gets or sets the task name, which can utilize wildcards, to look for when watching a folder.
            </summary>
      <value>A task name or wildcard.</value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskEventWatcher.EventFilter.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskFolder">
      <summary>
            Provides the methods that are used to register (create) tasks in the folder, remove tasks from the folder, and create or remove subfolders from the folder.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskFolder.AllTasks">
      <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerator`1" /> which enumerates all the tasks in this and all subfolders.
            </summary>
      <value>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> for all <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instances.
            </value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.CreateFolder(System.String,Microsoft.Win32.TaskScheduler.TaskSecurity)">
      <summary>
            Creates a folder for related tasks. Not available to Task Scheduler 1.0.
            </summary>
      <param name="subFolderName">The name used to identify the folder. If "FolderName\SubFolder1\SubFolder2" is specified, the entire folder tree will be created if the folders do not exist. This parameter can be a relative path to the current <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolder" /> instance. The root task folder is specified with a backslash (\). An example of a task folder path, under the root task folder, is \MyTaskFolder. The '.' character cannot be used to specify the current task folder and the '..' characters cannot be used to specify the parent task folder in the path.</param>
      <param name="folderSecurity">The task security associated with the folder.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolder" /> instance that represents the new subfolder.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.CreateFolder(System.String,System.Security.AccessControl.GenericSecurityDescriptor)">
      <summary>
            Creates a folder for related tasks. Not available to Task Scheduler 1.0.
            </summary>
      <param name="subFolderName">The name used to identify the folder. If "FolderName\SubFolder1\SubFolder2" is specified, the entire folder tree will be created if the folders do not exist. This parameter can be a relative path to the current <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolder" /> instance. The root task folder is specified with a backslash (\). An example of a task folder path, under the root task folder, is \MyTaskFolder. The '.' character cannot be used to specify the current task folder and the '..' characters cannot be used to specify the parent task folder in the path.</param>
      <param name="sd">The security descriptor associated with the folder.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolder" /> instance that represents the new subfolder.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.CreateFolder(System.String,System.String,System.Boolean)">
      <summary>
            Creates a folder for related tasks. Not available to Task Scheduler 1.0.
            </summary>
      <param name="subFolderName">The name used to identify the folder. If "FolderName\SubFolder1\SubFolder2" is specified, the entire folder tree will be created if the folders do not exist. This parameter can be a relative path to the current <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolder" /> instance. The root task folder is specified with a backslash (\). An example of a task folder path, under the root task folder, is \MyTaskFolder. The '.' character cannot be used to specify the current task folder and the '..' characters cannot be used to specify the parent task folder in the path.</param>
      <param name="sddlForm">The security descriptor associated with the folder.</param>
      <param name="exceptionOnExists">Set this value to false to avoid having an exception called if the folder already exists.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolder" /> instance that represents the new subfolder.</returns>
      <exception cref="T:System.Security.SecurityException">Security descriptor mismatch between specified credentials and credentials on existing folder by same name.</exception>
      <exception cref="T:System.ArgumentException">Invalid SDDL form.</exception>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.DeleteFolder(System.String,System.Boolean)">
      <summary>
            Deletes a subfolder from the parent folder. Not available to Task Scheduler 1.0.
            </summary>
      <param name="subFolderName">The name of the subfolder to be removed. The root task folder is specified with a backslash (\). This parameter can be a relative path to the folder you want to delete. An example of a task folder path, under the root task folder, is \MyTaskFolder. The '.' character cannot be used to specify the current task folder and the '..' characters cannot be used to specify the parent task folder in the path.</param>
      <param name="exceptionOnNotExists">Set this value to false to avoid having an exception called if the folder does not exist.</param>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.DeleteTask(System.String,System.Boolean)">
      <summary>Deletes a task from the folder.</summary>
      <param name="name">
            The name of the task that is specified when the task was registered. The '.' character cannot be used to specify the current task folder and the '..'
            characters cannot be used to specify the parent task folder in the path.
            </param>
      <param name="exceptionOnNotExists">Set this value to false to avoid having an exception called if the task does not exist.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.Dispose">
      <summary>
            Releases all resources used by this class.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.EnumerateFolders(System.Predicate{Microsoft.Win32.TaskScheduler.TaskFolder},System.Boolean)">
      <summary>Returns an enumerable collection of folders that matches a specified filter and recursion option.</summary>
      <param name="filter">An optional predicate used to filter the returned <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolder" /> instances.</param>
      <param name="recurse">Specifies whether the enumeration should include all subfolders.</param>
      <returns>
        <para>An enumerable collection of folders that matches <paramref name="filter" />.</para>
        <note type="note">If a filter is supplied and filters out a folder, none of its subfolders will be processed, regardless of them
            matching the filter.</note>
      </returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.EnumerateTasks(System.Predicate{Microsoft.Win32.TaskScheduler.Task},System.Boolean)">
      <summary>Returns an enumerable collection of tasks that matches a specified filter and recursion option.</summary>
      <param name="filter">An optional predicate used to filter the returned <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instances.</param>
      <param name="recurse">Specifies whether the enumeration should include tasks in any subfolders.</param>
      <returns>An enumerable collection of directories that matches <paramref name="filter" /> and <paramref name="recurse" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.GetAccessControl">
      <summary>
            Gets a <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the task described by the
            current <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolder" /> object.
            </summary>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> object that encapsulates the access control rules for the current folder.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
      <summary>
            Gets a <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the task folder described by
            the current <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolder" /> object.
            </summary>
      <param name="includeSections">
            One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies which group of access control entries to retrieve.
            </param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> object that encapsulates the access control rules for the current folder.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.GetSecurityDescriptor(System.Security.AccessControl.SecurityInfos)">
      <summary>Gets the security descriptor for the folder. Not available to Task Scheduler 1.0.</summary>
      <param name="includeSections">Section(s) of the security descriptor to return.</param>
      <returns>The security descriptor for the folder.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.GetSecurityDescriptorSddlForm(System.Security.AccessControl.SecurityInfos)">
      <summary>
            Gets the security descriptor for the folder. Not available to Task Scheduler 1.0.
            </summary>
      <param name="includeSections">Section(s) of the security descriptor to return.</param>
      <returns>The security descriptor for the folder.</returns>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.GetTasks(System.Text.RegularExpressions.Regex)">
      <summary>
            Gets a collection of all the tasks in the folder whose name matches the optional <paramref name="filter" />.
            </summary>
      <param name="filter">The optional name filter expression.</param>
      <returns>Collection of all matching tasks.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.ImportTask(System.String,System.String,System.Boolean)">
      <summary>Imports a <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> from an XML file.</summary>
      <param name="path">The task name. If this value is NULL, the task will be registered in the root task folder and the task name will be a GUID value that is created by the Task Scheduler service. A task name cannot begin or end with a space character. The '.' character cannot be used to specify the current task folder and the '..' characters cannot be used to specify the parent task folder in the path.</param>
      <param name="xmlFile">The file containing the XML-formatted definition of the task.</param>
      <param name="overwriteExisting">If set to <see langword="true" />, overwrites any existing task with the same name.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instance that represents the new task.</returns>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Importing from an XML file is only supported under Task Scheduler 2.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskFolder.Name">
      <summary>
            Gets the name that is used to identify the folder that contains a task.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskFolder.Parent">
      <summary>
            Gets the parent folder of this folder.
            </summary>
      <value>
            The parent folder, or <c>null</c> if this folder is the root folder.
            </value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskFolder.Path">
      <summary>
            Gets the path to where the folder is stored.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.RegisterTask(System.String,System.String,Microsoft.Win32.TaskScheduler.TaskCreation,System.String,System.String,Microsoft.Win32.TaskScheduler.TaskLogonType,System.String)">
      <summary>
            Registers (creates) a new task in the folder using XML to define the task.
            </summary>
      <param name="path">The task name. If this value is NULL, the task will be registered in the root task folder and the task name will be a GUID value that is created by the Task Scheduler service. A task name cannot begin or end with a space character. The '.' character cannot be used to specify the current task folder and the '..' characters cannot be used to specify the parent task folder in the path.</param>
      <param name="xmlText">An XML-formatted definition of the task.</param>
      <param name="createType">A union of <see cref="T:Microsoft.Win32.TaskScheduler.TaskCreation" /> flags.</param>
      <param name="userId">The user credentials used to register the task.</param>
      <param name="password">The password for the userId used to register the task.</param>
      <param name="logonType">A <see cref="T:Microsoft.Win32.TaskScheduler.TaskLogonType" /> value that defines what logon technique is used to run the registered task.</param>
      <param name="sddl">The security descriptor associated with the registered task. You can specify the access control list (ACL) in the security descriptor for a task in order to allow or deny certain users and groups access to a task.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instance that represents the new task.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.RegisterTaskDefinition(System.String,Microsoft.Win32.TaskScheduler.TaskDefinition)">
      <summary>
            Registers (creates) a task in a specified location using a <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" /> instance to define a task.
            </summary>
      <param name="path">The task name. If this value is NULL, the task will be registered in the root task folder and the task name will be a GUID value that is created by the Task Scheduler service. A task name cannot begin or end with a space character. The '.' character cannot be used to specify the current task folder and the '..' characters cannot be used to specify the parent task folder in the path.</param>
      <param name="definition">The <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" /> of the registered task.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instance that represents the new task.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.RegisterTaskDefinition(System.String,Microsoft.Win32.TaskScheduler.TaskDefinition,Microsoft.Win32.TaskScheduler.TaskCreation,System.String,System.String,Microsoft.Win32.TaskScheduler.TaskLogonType,System.String)">
      <summary>
            Registers (creates) a task in a specified location using a <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" /> instance to define a task.
            </summary>
      <param name="path">The task name. If this value is NULL, the task will be registered in the root task folder and the task name will be a GUID value that is created by the Task Scheduler service. A task name cannot begin or end with a space character. The '.' character cannot be used to specify the current task folder and the '..' characters cannot be used to specify the parent task folder in the path.</param>
      <param name="definition">The <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" /> of the registered task.</param>
      <param name="createType">A union of <see cref="T:Microsoft.Win32.TaskScheduler.TaskCreation" /> flags.</param>
      <param name="userId">The user credentials used to register the task.</param>
      <param name="password">The password for the userId used to register the task.</param>
      <param name="logonType">A <see cref="T:Microsoft.Win32.TaskScheduler.TaskLogonType" /> value that defines what logon technique is used to run the registered task.</param>
      <param name="sddl">The security descriptor associated with the registered task. You can specify the access control list (ACL) in the security descriptor for a task in order to allow or deny certain users and groups access to a task.</param>
      <returns>
            A <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instance that represents the new task. This will return <c>null</c> if <paramref name="createType" /> is set to <c>ValidateOnly</c> and there are no validation errors.
            </returns>
      <remarks>This method is effectively the "Save" method for tasks. It takes a modified <c>TaskDefinition</c> instance and registers it in the folder defined by this <c>TaskFolder</c> instance. Optionally, you can use this method to override the user, password and logon type defined in the definition and supply security against the task.</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Task names may not include any characters which are invalid for file names.
            or
            Task names ending with a period followed by three or fewer characters cannot be retrieved due to a bug in the native library.
            </exception>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">This LogonType is not supported on Task Scheduler 1.0.
            or
            Security settings are not available on Task Scheduler 1.0.
            or
            Registration triggers are not available on Task Scheduler 1.0.
            or
            XML validation not available on Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskFolder.SecurityDescriptor">
      <summary>
            Gets or sets the security descriptor of the task.
            </summary>
      <value>The security descriptor.</value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.SetAccessControl(Microsoft.Win32.TaskScheduler.TaskSecurity)">
      <summary>
            Applies access control list (ACL) entries described by a <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> object to the file described by the current <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolder" /> object.
            </summary>
      <param name="taskSecurity">A <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> object that describes an access control list (ACL) entry to apply to the current folder.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.SetSecurityDescriptor(System.Security.AccessControl.GenericSecurityDescriptor,System.Security.AccessControl.SecurityInfos)">
      <summary>
            Sets the security descriptor for the folder. Not available to Task Scheduler 1.0.
            </summary>
      <param name="sd">The security descriptor for the folder.</param>
      <param name="includeSections">Section(s) of the security descriptor to set.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.SetSecurityDescriptorSddlForm(System.String,Microsoft.Win32.TaskScheduler.TaskSetSecurityOptions)">
      <summary>
            Sets the security descriptor for the folder. Not available to Task Scheduler 1.0.
            </summary>
      <param name="sddlForm">The security descriptor for the folder.</param>
      <param name="options">Flags that specify how to set the security descriptor.</param>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskFolder.SubFolders">
      <summary>
            Gets all the subfolders in the folder.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskFolder.Tasks">
      <summary>
            Gets a collection of all the tasks in the folder.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskFolder.TaskService">
      <summary>
            Gets or sets the <see cref="P:Microsoft.Win32.TaskScheduler.TaskFolder.TaskService" /> that manages this task.
            </summary>
      <value>The task service.</value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolder.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskFolderCollection">
      <summary>Provides information and control for a collection of folders that contain tasks.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolderCollection.Add(Microsoft.Win32.TaskScheduler.TaskFolder)">
      <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotImplementedException">
            This action is technically unfeasible due to limitations of the underlying library. Use the <see cref="M:Microsoft.Win32.TaskScheduler.TaskFolder.CreateFolder(System.String,System.String,System.Boolean)" /> instead.
            </exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolderCollection.Clear">
      <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.TaskFolderCollection.CollectionChanged">
      <summary>Occurs when a collection changes.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolderCollection.Contains(Microsoft.Win32.TaskScheduler.TaskFolder)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolderCollection.CopyTo(Microsoft.Win32.TaskScheduler.TaskFolder[],System.Int32)">
      <summary>Copies the elements of the ICollection to an Array, starting at a particular Array index.</summary>
      <param name="array">
            The one-dimensional Array that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The Array must have
            zero-based indexing.
            </param>
      <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskFolderCollection.Count">
      <summary>Gets the number of items in the collection.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolderCollection.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolderCollection.Exists(System.String)">
      <summary>Determines whether the specified folder exists.</summary>
      <param name="path">The path of the folder.</param>
      <returns>true if folder exists; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolderCollection.GetEnumerator">
      <summary>Gets a list of items in a collection.</summary>
      <returns>Enumerated list of items in the collection.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskFolderCollection.Item(System.Int32)">
      <summary>Gets the specified folder from the collection.</summary>
      <param name="index">The index of the folder to be retrieved.</param>
      <returns>A TaskFolder instance that represents the requested folder.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskFolderCollection.Item(System.String)">
      <summary>Gets the specified folder from the collection.</summary>
      <param name="path">The path of the folder to be retrieved.</param>
      <returns>A TaskFolder instance that represents the requested folder.</returns>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.TaskFolderCollection.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskFolderCollection.Remove(Microsoft.Win32.TaskScheduler.TaskFolder)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method
            also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskFolderSnapshot">
      <summary>Represents a <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolder" /> instance and captures its name and security.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskInstancesPolicy">
      <summary>Defines how the Task Scheduler handles existing instances of the task when it starts a new instance of the task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskInstancesPolicy.Parallel">
      <summary>Starts new instance while an existing instance is running.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskInstancesPolicy.Queue">
      <summary>Starts a new instance of the task after all other instances of the task are complete.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskInstancesPolicy.IgnoreNew">
      <summary>Does not start a new instance if an existing instance of the task is running.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskInstancesPolicy.StopExisting">
      <summary>Stops an existing instance of the task before it starts a new instance.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskLogonType">
      <summary>Defines what logon technique is required to run a task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskLogonType.None">
      <summary>The logon method is not specified. Used for non-NT credentials.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskLogonType.Password">
      <summary>Use a password for logging on the user. The password must be supplied at registration time.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskLogonType.S4U">
      <summary>
            Use an existing interactive token to run a task. The user must log on using a service for user (S4U) logon. When an S4U logon is
            used, no password is stored by the system and there is no access to either the network or to encrypted files.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskLogonType.InteractiveToken">
      <summary>User must already be logged on. The task will be run only in an existing interactive session.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskLogonType.Group">
      <summary>Group activation. The groupId field specifies the group.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskLogonType.ServiceAccount">
      <summary>
            Indicates that a Local System, Local Service, or Network Service account is being used as a security context to run the task.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskLogonType.InteractiveTokenOrPassword">
      <summary>
            First use the interactive token. If the user is not logged on (no interactive token is available), then the password is used.
            The password must be specified when a task is registered. This flag is not recommended for new tasks because it is less reliable
            than Password.
            </summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskPrincipal">
      <summary>
            Provides the security credentials for a principal. These security credentials define the security context for the tasks that are
            associated with the principal.
            </summary>
      <remarks>
            This class can only be accessed via <see cref="P:Microsoft.Win32.TaskScheduler.TaskDefinition.Principal" />. It is used to set properties related to the principal
            (account) that will run a task.
            </remarks>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskPrincipal.Account">
      <summary>
            Gets the account associated with this principal. This value is pulled from the TaskDefinition's XMLText property if set.
            </summary>
      <value>The account.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskPrincipal.DisplayName">
      <summary>Gets or sets the name of the principal that is displayed in the Task Scheduler UI.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskPrincipal.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskPrincipal.GroupId">
      <summary>
            Gets or sets the identifier of the user group that is required to run the tasks that are associated with the principal. Setting
            this property to something other than a null or empty string, will set the <see cref="P:Microsoft.Win32.TaskScheduler.TaskPrincipal.UserId" /> property to NULL and will set
            the <see cref="P:Microsoft.Win32.TaskScheduler.TaskPrincipal.LogonType" /> property to TaskLogonType.Group;
            </summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskPrincipal.Id">
      <summary>Gets or sets the identifier of the principal.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskPrincipal.LogonType">
      <summary>Gets or sets the security logon method that is required to run the tasks that are associated with the principal.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">
            TaskLogonType values of Group, None, or S4UNot are not supported under Task Scheduler 1.0.
            </exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskPrincipal.ProcessTokenSidType">
      <summary>Gets or sets the task process security identifier (SID) type.</summary>
      <value>One of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskProcessTokenSidType" /> enumeration constants.</value>
      <remarks>Setting this value appears to break the Task Scheduler MMC and does not output in XML. Removed to prevent problems.</remarks>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotSupportedPriorToException">Not supported under Task Scheduler versions prior to 2.1.</exception>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.TaskPrincipal.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskPrincipal.RequiredPrivileges">
      <summary>
            Gets the security credentials for a principal. These security credentials define the security context for the tasks that are
            associated with the principal.
            </summary>
      <remarks>Setting this value appears to break the Task Scheduler MMC and does not output in XML. Removed to prevent problems.</remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskPrincipal.RequiresPassword">
      <summary>Gets a value indicating whether current Principal settings require a password to be provided.</summary>
      <value>
        <c>true</c> if settings requires a password to be provided; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskPrincipal.RunLevel">
      <summary>
            Gets or sets the identifier that is used to specify the privilege level that is required to run the tasks that are associated
            with the principal.
            </summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskPrincipal.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskPrincipal.UserId">
      <summary>
            Gets or sets the user identifier that is required to run the tasks that are associated with the principal. Setting this property
            to something other than a null or empty string, will set the <see cref="P:Microsoft.Win32.TaskScheduler.TaskPrincipal.GroupId" /> property to NULL;
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskPrincipal.ValidateAccountForSidType(System.String,Microsoft.Win32.TaskScheduler.TaskProcessTokenSidType)">
      <summary>Validates the supplied account against the supplied <see cref="T:Microsoft.Win32.TaskScheduler.TaskProcessTokenSidType" />.</summary>
      <param name="acct">The user or group account name.</param>
      <param name="sidType">The SID type for the process.</param>
      <returns>
        <c>true</c> if supplied account can be used for the supplied SID type.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege">
      <summary>Defines which privileges must be required for a secured task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeCreateTokenPrivilege">
      <summary>Required to create a primary token. User Right: Create a token object.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeAssignPrimaryTokenPrivilege">
      <summary>Required to assign the primary token of a process. User Right: Replace a process-level token.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeLockMemoryPrivilege">
      <summary>Required to lock physical pages in memory. User Right: Lock pages in memory.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeIncreaseQuotaPrivilege">
      <summary>Required to increase the quota assigned to a process. User Right: Adjust memory quotas for a process.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeUnsolicitedInputPrivilege">
      <summary>Required to read unsolicited input from a terminal device. User Right: Not applicable.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeMachineAccountPrivilege">
      <summary>Required to create a computer account. User Right: Add workstations to domain.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeTcbPrivilege">
      <summary>
            This privilege identifies its holder as part of the trusted computer base. Some trusted protected subsystems are granted this
            privilege. User Right: Act as part of the operating system.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeSecurityPrivilege">
      <summary>
            Required to perform a number of security-related functions, such as controlling and viewing audit messages. This privilege
            identifies its holder as a security operator. User Right: Manage auditing and the security log.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeTakeOwnershipPrivilege">
      <summary>
            Required to take ownership of an object without being granted discretionary access. This privilege allows the owner value to be
            set only to those values that the holder may legitimately assign as the owner of an object. User Right: Take ownership of files
            or other objects.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeLoadDriverPrivilege">
      <summary>Required to load or unload a device driver. User Right: Load and unload device drivers.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeSystemProfilePrivilege">
      <summary>Required to gather profiling information for the entire system. User Right: Profile system performance.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeSystemtimePrivilege">
      <summary>Required to modify the system time. User Right: Change the system time.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeProfileSingleProcessPrivilege">
      <summary>Required to gather profiling information for a single process. User Right: Profile single process.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeIncreaseBasePriorityPrivilege">
      <summary>Required to increase the base priority of a process. User Right: Increase scheduling priority.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeCreatePagefilePrivilege">
      <summary>Required to create a paging file. User Right: Create a pagefile.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeCreatePermanentPrivilege">
      <summary>Required to create a permanent object. User Right: Create permanent shared objects.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeBackupPrivilege">
      <summary>
            Required to perform backup operations. This privilege causes the system to grant all read access control to any file, regardless
            of the access control list (ACL) specified for the file. Any access request other than read is still evaluated with the ACL.
            This privilege is required by the RegSaveKey and RegSaveKeyExfunctions. The following access rights are granted if this
            privilege is held: READ_CONTROL, ACCESS_SYSTEM_SECURITY, FILE_GENERIC_READ, FILE_TRAVERSE. User Right: Back up files and directories.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeRestorePrivilege">
      <summary>
            Required to perform restore operations. This privilege causes the system to grant all write access control to any file,
            regardless of the ACL specified for the file. Any access request other than write is still evaluated with the ACL. Additionally,
            this privilege enables you to set any valid user or group security identifier (SID) as the owner of a file. This privilege is
            required by the RegLoadKey function. The following access rights are granted if this privilege is held: WRITE_DAC, WRITE_OWNER,
            ACCESS_SYSTEM_SECURITY, FILE_GENERIC_WRITE, FILE_ADD_FILE, FILE_ADD_SUBDIRECTORY, DELETE. User Right: Restore files and directories.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeShutdownPrivilege">
      <summary>Required to shut down a local system. User Right: Shut down the system.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeDebugPrivilege">
      <summary>Required to debug and adjust the memory of a process owned by another account. User Right: Debug programs.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeAuditPrivilege">
      <summary>Required to generate audit-log entries. Give this privilege to secure servers. User Right: Generate security audits.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeSystemEnvironmentPrivilege">
      <summary>
            Required to modify the nonvolatile RAM of systems that use this type of memory to store configuration information. User Right:
            Modify firmware environment values.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeChangeNotifyPrivilege">
      <summary>
            Required to receive notifications of changes to files or directories. This privilege also causes the system to skip all
            traversal access checks. It is enabled by default for all users. User Right: Bypass traverse checking.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeRemoteShutdownPrivilege">
      <summary>Required to shut down a system by using a network request. User Right: Force shutdown from a remote system.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeUndockPrivilege">
      <summary>Required to undock a laptop. User Right: Remove computer from docking station.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeSyncAgentPrivilege">
      <summary>
            Required for a domain controller to use the LDAP directory synchronization services. This privilege allows the holder to read
            all objects and properties in the directory, regardless of the protection on the objects and properties. By default, it is
            assigned to the Administrator and LocalSystem accounts on domain controllers. User Right: Synchronize directory service data.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeEnableDelegationPrivilege">
      <summary>
            Required to mark user and computer accounts as trusted for delegation. User Right: Enable computer and user accounts to be
            trusted for delegation.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeManageVolumePrivilege">
      <summary>Required to enable volume management privileges. User Right: Manage the files on a volume.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeImpersonatePrivilege">
      <summary>
            Required to impersonate. User Right: Impersonate a client after authentication. Windows XP/2000: This privilege is not
            supported. Note that this value is supported starting with Windows Server 2003, Windows XP with SP2, and Windows 2000 with SP4.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeCreateGlobalPrivilege">
      <summary>
            Required to create named file mapping objects in the global namespace during Terminal Services sessions. This privilege is
            enabled by default for administrators, services, and the local system account. User Right: Create global objects. Windows
            XP/2000: This privilege is not supported. Note that this value is supported starting with Windows Server 2003, Windows XP with
            SP2, and Windows 2000 with SP4.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeTrustedCredManAccessPrivilege">
      <summary>Required to access Credential Manager as a trusted caller. User Right: Access Credential Manager as a trusted caller.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeRelabelPrivilege">
      <summary>Required to modify the mandatory integrity level of an object. User Right: Modify an object label.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeIncreaseWorkingSetPrivilege">
      <summary>
            Required to allocate more memory for applications that run in the context of users. User Right: Increase a process working set.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeTimeZonePrivilege">
      <summary>Required to adjust the time zone associated with the computer's internal clock. User Right: Change the time zone.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege.SeCreateSymbolicLinkPrivilege">
      <summary>Required to create a symbolic link. User Right: Create symbolic links.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges">
      <summary>
            List of security credentials for a principal under version 1.3 of the Task Scheduler. These security credentials define the security
            context for the tasks that are associated with the principal.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges.Add(Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege)">
      <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges.Contains(Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges.CopyTo(Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege[],System.Int32)">
      <summary>Copies to.</summary>
      <param name="array">The array.</param>
      <param name="arrayIndex">Index of the array.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges.IndexOf(Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <returns>The index of <paramref name="item" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:System.Collections.Generic.IList`1" /> is read-only.
            </exception>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges.TaskPrincipalPrivilegesEnumerator">
      <summary>Enumerates the privileges set for a principal under version 1.3 of the Task Scheduler.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges.TaskPrincipalPrivilegesEnumerator.Current">
      <summary>Gets the element in the collection at the current position of the enumerator.</summary>
      <returns>The element in the collection at the current position of the enumerator.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges.TaskPrincipalPrivilegesEnumerator.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges.TaskPrincipalPrivilegesEnumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the collection.</summary>
      <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges.TaskPrincipalPrivilegesEnumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskProcessTokenSidType">
      <summary>
            Defines the types of process security identifier (SID) that can be used by tasks. These changes are used to specify the type of
            process SID in the IPrincipal2 interface.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskProcessTokenSidType.None">
      <summary>No changes will be made to the process token groups list.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskProcessTokenSidType.Unrestricted">
      <summary>
            A task SID that is derived from the task name will be added to the process token groups list, and the token default
            discretionary access control list (DACL) will be modified to allow only the task SID and local system full control and the
            account SID read control.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskProcessTokenSidType.Default">
      <summary>A Task Scheduler will apply default settings to the task process.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo">
      <summary>
            Provides the administrative information that can be used to describe the task. This information includes details such as a
            description of the task, the author of the task, the date the task is registered, and the security descriptor of the task.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo.Author">
      <summary>Gets or sets the author of the task.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo.Date">
      <summary>Gets or sets the date and time when the task is registered.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo.Description">
      <summary>Gets or sets the description of the task.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo.Documentation">
      <summary>Gets or sets any additional documentation for the task.</summary>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo.SecurityDescriptor">
      <summary>Gets or sets the security descriptor of the task.</summary>
      <value>The security descriptor.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo.SecurityDescriptorSddlForm">
      <summary>Gets or sets the security descriptor of the task.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo.Source">
      <summary>
            Gets or sets where the task originated from. For example, a task may originate from a component, service, application, or user.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo.URI">
      <summary>Gets or sets the URI of the task.</summary>
      <remarks>
        <c>Note:</c> Breaking change in version 2.0. This property was previously of type <see cref="T:System.Uri" />. It was found that in
            Windows 8, many of the native tasks use this property in a string format rather than in a URI format.
            </remarks>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo.Version">
      <summary>Gets or sets the version number of the task.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskRegistrationInfo.XmlText">
      <summary>Gets or sets an XML-formatted version of the registration information for the task.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskRights">
      <summary>
            Specifies the access control rights that can be applied to Task Scheduler tasks.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.FullControl">
      <summary>Specifies the right to exert full control over a task folder or task, and to modify access control and audit rules. This value represents the right to do anything with a task and is the combination of all rights in this enumeration.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.Write">
      <summary>Specifies the right to create tasks and folders, and to add or remove data from tasks. This right includes the following rights: .</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.Read">
      <summary>Specifies the right to open and copy folders or tasks as read-only. This right includes the following rights: .</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.Execute">
      <summary>Specifies the right run tasks. This right includes the following rights: .</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.Synchronize">
      <summary>The right to wait on a task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.TakeOwnership">
      <summary>The right to change the owner of a task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.ChangePermissions">
      <summary>Specifies the right to change the security and audit rules associated with a task or folder.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.ReadPermissions">
      <summary>The right to open and copy the access rules and audit rules for a task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.Delete">
      <summary>The right to delete a folder or task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.WriteAttributes">
      <summary>Specifies the right to open and write file system attributes to a folder or file. This does not include the ability to write data, extended attributes, or access and audit rules.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.ReadAttributes">
      <summary>Specifies the right to open and copy file system attributes from a folder or task. For example, this value specifies the right to view the file creation or modified date. This does not include the right to read data, extended file system attributes, or access and audit rules.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.DeleteChild">
      <summary>Specifies the right to delete a folder and any tasks contained within that folder.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.ExecuteFile">
      <summary>Specifies the right to run a task.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.WriteExtendedAttributes">
      <summary>Specifies the right to open and write extended file system attributes to a folder or file. This does not include the ability to write data, attributes, or access and audit rules.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.ReadExtendedAttributes">
      <summary>Specifies the right to open and copy extended system attributes from a folder or task. For example, this value specifies the right to view author and content information. This does not include the right to read data, system attributes, or access and audit rules.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.AppendData">
      <summary>Specifies the right to append data to the end of a file.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.WriteData">
      <summary>Specifies the right to open and write to a file or folder. This does not include the right to open and write file system attributes, extended file system attributes, or access and audit rules.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRights.ReadData">
      <summary>Specifies the right to open and copy a task or folder. This does not include the right to read file system attributes, extended file system attributes, or access and audit rules.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskRunFlags">
      <summary>Defines how a task is run.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRunFlags.NoFlags">
      <summary>The task is run with all flags ignored.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRunFlags.AsSelf">
      <summary>The task is run as the user who is calling the Run method.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRunFlags.IgnoreConstraints">
      <summary>The task is run regardless of constraints such as "do not run on batteries" or "run only if idle".</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRunFlags.UseSessionId">
      <summary>The task is run using a terminal server session identifier.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRunFlags.UserSID">
      <summary>The task is run using a security identifier.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskRunLevel">
      <summary>Defines LUA elevation flags that specify with what privilege level the task will be run.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRunLevel.LUA">
      <summary>Tasks will be run with the least privileges.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskRunLevel.Highest">
      <summary>Tasks will be run with the highest privileges.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot">
      <summary>
            Represents all the information about the tasks and folders from a <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> instance that can be used to reconstitute tasks and folders
            on the same or different systems. <note>This class and related classes are only available under the .NET 4.5.2 build and later .NET versions due to
            dependencies on threading and compressed (zip) files.</note></summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot.#ctor(System.String)">
      <summary>Creates a new instance of <see cref="T:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot" /> from an existing snapshot.</summary>
      <param name="path">The zip file snapshot created by the <see cref="M:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot.Create(Microsoft.Win32.TaskScheduler.TaskService,System.String)" /> method.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot.Create(Microsoft.Win32.TaskScheduler.TaskService,System.String)">
      <summary>
            Creates a compressed zip file that contains all the information accessible to the user from the <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> instance necessary to
            reconstitute its tasks and folders. <note>This method can take many seconds to execute. It is recommended to call the asynchronous
            version.</note><note type="warning">This method will execute without error even if the user does not have permissions to see all tasks and folders.
            It is imperative that the developer ensures that the user has Administrator or equivalent rights before calling this method.</note></summary>
      <param name="ts">The <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> from which to pull the tasks and folders.</param>
      <param name="path">The output zip file in which to place the snapshot information.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot" /> instance with the contents of the specified Task Scheduler connection.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot.Create(Microsoft.Win32.TaskScheduler.TaskService.ConnectionToken,System.String,System.Threading.CancellationToken,System.IProgress{System.Tuple{System.Int32,System.String}})">
      <summary>
            Creates a compressed zip file that contains all the information accessible to the user from the <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> instance necessary to
            reconstitute its tasks and folders. <note type="warning">This method will execute without error even if the user does not have permissions to see all
            tasks and folders. It is imperative that the developer ensures that the user has Administrator or equivalent rights before calling this method.</note></summary>
      <param name="tsToken">The <see cref="T:Microsoft.Win32.TaskScheduler.TaskService.ConnectionToken" /> from which to pull the tasks and folders.</param>
      <param name="path">The output zip file in which to place the snapshot information.</param>
      <param name="cancelToken">A cancellation token to use to cancel this asynchronous operation.</param>
      <param name="progress">An optional <see cref="T:System.IProgress`1" /> instance to use to report progress of the asynchronous operation.</param>
      <returns>An asynchronous <see cref="T:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot" /> instance with the contents of the specified Task Scheduler connection.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot.Items">
      <summary>
            Gets a list of <see cref="T:Microsoft.Win32.TaskScheduler.TaskSnapshot" /> and <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolderSnapshot" /> instances the represent the tasks and folders from a Task Scheduler instance.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot.Open(System.String)">
      <summary>Opens an existing snapshot and returns a new instance of <see cref="T:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot" />.</summary>
      <param name="path">The zip file snapshot created by the <see cref="M:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot.Create(Microsoft.Win32.TaskScheduler.TaskService,System.String)" /> method.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot" /> instance with the contents of the specified snapshot file.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot.Path">
      <summary>Gets the path of the file based snapshot.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot.Restore(Microsoft.Win32.TaskScheduler.TaskService,System.Collections.Generic.ICollection{Microsoft.Win32.TaskScheduler.SnapshotItem},System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Register a list of snapshot items (tasks and folders) into the specified Task Scheduler.</summary>
      <param name="ts">The <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> into which the tasks and folders are registered.</param>
      <param name="items">
            The list of <see cref="T:Microsoft.Win32.TaskScheduler.SnapshotItem" /> instances representing the tasks and folders from this snapshot that should be registered on the
            <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> instance.
            </param>
      <param name="applyAccessRights">
            If <c>true</c>, takes the access rights from the snapshot item and applies it to both new and existing tasks and folders.
            </param>
      <param name="overwriteExisting">
            If <c>true</c>, overwrite any existing tasks and folders found in the target Task Scheduler that match the path of the snapshot item.
            </param>
      <param name="passwords">
            Lookup table for password. Provide pairs of the user/group account name and the associated passwords for any task that requires a password.
            </param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot.Restore(Microsoft.Win32.TaskScheduler.TaskService.ConnectionToken,System.Collections.Generic.ICollection{Microsoft.Win32.TaskScheduler.SnapshotItem},System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken,System.IProgress{System.Tuple{System.Int32,System.String}})">
      <summary>Register a list of snapshot items (tasks and folders) into the specified Task Scheduler.</summary>
      <param name="tsToken">The <see cref="T:Microsoft.Win32.TaskScheduler.TaskService.ConnectionToken" /> into which the tasks and folders are registered.</param>
      <param name="items">
            The list of <see cref="T:Microsoft.Win32.TaskScheduler.SnapshotItem" /> instances representing the tasks and folders from this snapshot that should be registered on the
            <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> instance.
            </param>
      <param name="applyAccessRights">
            If <c>true</c>, takes the access rights from the snapshot item and applies it to both new and existing tasks and folders.
            </param>
      <param name="overwriteExisting">
            If <c>true</c>, overwrite any existing tasks and folders found in the target Task Scheduler that match the path of the snapshot item.
            </param>
      <param name="passwords">
            Lookup table for password. Provide pairs of the user/group account name and the associated passwords for any task that requires a password.
            </param>
      <param name="cancelToken">A cancellation token to use to cancel this asynchronous operation.</param>
      <param name="progress">An optional <see cref="T:System.IProgress`1" /> instance to use to report progress of the asynchronous operation.</param>
      <returns>An asynchronous <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot.Restore(Microsoft.Win32.TaskScheduler.TaskService.ConnectionToken,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken,System.IProgress{System.Tuple{System.Int32,System.String}})">
      <summary>Register a list of snapshot items (tasks and folders) into the specified Task Scheduler.</summary>
      <param name="tsToken">The <see cref="T:Microsoft.Win32.TaskScheduler.TaskService.ConnectionToken" /> into which the tasks and folders are registered.</param>
      <param name="itemPaths">
            The list of paths representing the tasks and folders from this snapshot that should be registered on the <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> instance.
            </param>
      <param name="applyAccessRights">
            If <c>true</c>, takes the access rights from the snapshot item and applies it to both new and existing tasks and folders.
            </param>
      <param name="overwriteExisting">
            If <c>true</c>, overwrite any existing tasks and folders found in the target Task Scheduler that match the path of the snapshot item.
            </param>
      <param name="passwords">
            Lookup table for password. Provide pairs of the user/group account name and the associated passwords for any task that requires a password.
            </param>
      <param name="cancelToken">A cancellation token to use to cancel this asynchronous operation.</param>
      <param name="progress">An optional <see cref="T:System.IProgress`1" /> instance to use to report progress of the asynchronous operation.</param>
      <returns>An asynchronous <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instance.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot.TargetServer">
      <summary>Gets the machine name of the server from which the snapshot was taken.</summary>
      <value>The target server name.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSchedulerSnapshot.TimeStamp">
      <summary>Gets the UTC time stamp for when the snapshot was taken.</summary>
      <value>The time stamp.</value>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskSecurity">
      <summary>
            Represents the Windows access control security for a Task Scheduler task. This class cannot be inherited.
            </summary>
      <remarks>
        <para>A TaskSecurity object specifies access rights for a Task Scheduler task, and also specifies how access attempts are audited. Access rights to the task are expressed as rules, with each access rule represented by a <see cref="T:Microsoft.Win32.TaskScheduler.TaskAccessRule" /> object. Each auditing rule is represented by a <see cref="T:Microsoft.Win32.TaskScheduler.TaskAuditRule" /> object.</para>
        <para>This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited. The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups. A <see cref="T:Microsoft.Win32.TaskScheduler.TaskAccessRule" /> or <see cref="T:Microsoft.Win32.TaskScheduler.TaskAuditRule" /> object might represent more than one ACE.</para>
        <para>Note</para>
        <para>A <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> object can represent a local task or a Task Scheduler task. Windows access control security is meaningful only for Task Scheduler tasks.</para>
        <para>The TaskSecurity, <see cref="T:Microsoft.Win32.TaskScheduler.TaskAccessRule" />, and <see cref="T:Microsoft.Win32.TaskScheduler.TaskAuditRule" /> classes hide the implementation details of ACLs and ACEs. They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights. These objects are also designed to prevent the following common access control errors:</para>
        <list type="bullet">
          <item>
            <description>Creating a security descriptor with a null DACL. A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack. A new TaskSecurity object always starts with an empty DACL, which denies all access for all users.</description>
          </item>
          <item>
            <description>Violating the canonical ordering of ACEs. If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object. For example, denied access rights must always appear before allowed access rights. TaskSecurity objects maintain the correct order internally. </description>
          </item>
          <item>
            <description>Manipulating security descriptor flags, which should be under resource manager control only.</description>
          </item>
          <item>
            <description>Creating invalid combinations of ACE flags.</description>
          </item>
          <item>
            <description>Manipulating inherited ACEs. Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</description>
          </item>
          <item>
            <description>Inserting meaningless ACEs into ACLs.</description>
          </item>
        </list>
        <para>The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</para>
        <list type="bullet">
          <item>
            <description>Low-level tasks that are normally performed by the resource manager.</description>
          </item>
          <item>
            <description>Adding or removing access control entries in ways that do not maintain the canonical ordering.</description>
          </item>
        </list>
        <para>To modify Windows access control security for a task, use the <see cref="M:Microsoft.Win32.TaskScheduler.Task.GetAccessControl" /> method to get the TaskSecurity object. Modify the security object by adding and removing rules, and then use the <see cref="M:Microsoft.Win32.TaskScheduler.Task.SetAccessControl(Microsoft.Win32.TaskScheduler.TaskSecurity)" /> method to reattach it. </para>
        <para>Important: Changes you make to a TaskSecurity object do not affect the access levels of the task until you call the <see cref="M:Microsoft.Win32.TaskScheduler.Task.SetAccessControl(Microsoft.Win32.TaskScheduler.TaskSecurity)" /> method to assign the altered security object to the task.</para>
        <para>To copy access control security from one task to another, use the <see cref="M:Microsoft.Win32.TaskScheduler.Task.GetAccessControl" /> method to get a TaskSecurity object representing the access and audit rules for the first task, then use the <see cref="M:Microsoft.Win32.TaskScheduler.Task.SetAccessControl(Microsoft.Win32.TaskScheduler.TaskSecurity)" /> method, or a constructor that accepts a TaskSecurity object, to assign those rules to the second task.</para>
        <para>Users with an investment in the security descriptor definition language (SDDL) can use the <see cref="M:Microsoft.Win32.TaskScheduler.Task.SetSecurityDescriptorSddlForm(System.String,Microsoft.Win32.TaskScheduler.TaskSetSecurityOptions)" /> method to set access rules for a task, and the <see cref="M:Microsoft.Win32.TaskScheduler.Task.GetSecurityDescriptorSddlForm(System.Security.AccessControl.SecurityInfos)" /> method to obtain a string that represents the access rules in SDDL format. This is not recommended for new development.</para>
      </remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> class with default values.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.#ctor(Microsoft.Win32.TaskScheduler.Task,System.Security.AccessControl.AccessControlSections)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> class with the specified sections of the access control security rules from the specified task.
            </summary>
      <param name="task">The task.</param>
      <param name="sections">The sections of the ACL to retrieve.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.#ctor(Microsoft.Win32.TaskScheduler.TaskFolder,System.Security.AccessControl.AccessControlSections)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> class with the specified sections of the access control security rules from the specified task.
            </summary>
      <param name="folder">The folder.</param>
      <param name="sections">The sections of the ACL to retrieve.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSecurity.AccessRightType">
      <summary>
            Gets the enumeration that the <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> class uses to represent access rights.
            </summary>
      <returns>A <see cref="T:System.Type" /> object representing the <see cref="T:Microsoft.Win32.TaskScheduler.TaskRights" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>
            Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.
            </summary>
      <param name="identityReference">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</param>
      <param name="accessMask">A bitwise combination of <see cref="T:Microsoft.Win32.TaskScheduler.TaskRights" /> values specifying the access rights to allow or deny, cast to an integer.</param>
      <param name="isInherited">Meaningless for tasks, because they have no hierarchy.</param>
      <param name="inheritanceFlags">Meaningless for tasks, because they have no hierarchy.</param>
      <param name="propagationFlags">Meaningless for tasks, because they have no hierarchy.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
      <returns>
            The <see cref="T:System.Security.AccessControl.AccessRule" /> object that this method creates.
            </returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSecurity.AccessRuleType">
      <summary>
            Gets the type that the TaskSecurity class uses to represent access rules.
            </summary>
      <returns>A <see cref="T:System.Type" /> object representing the <see cref="T:Microsoft.Win32.TaskScheduler.TaskAccessRule" /> class.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.AddAccessRule(Microsoft.Win32.TaskScheduler.TaskAccessRule)">
      <summary>
            Searches for a matching rule with which the new rule can be merged. If none are found, adds the new rule.
            </summary>
      <param name="rule">The access control rule to add.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.AddAuditRule(Microsoft.Win32.TaskScheduler.TaskAuditRule)">
      <summary>
            Searches for an audit rule with which the new rule can be merged. If none are found, adds the new rule.
            </summary>
      <param name="rule">The audit rule to add. The user specified by this rule determines the search.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>
            Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.
            </summary>
      <param name="identityReference">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</param>
      <param name="accessMask">A bitwise combination of <see cref="T:Microsoft.Win32.TaskScheduler.TaskRights" /> values specifying the access rights to audit, cast to an integer.</param>
      <param name="isInherited">Meaningless for tasks, because they have no hierarchy.</param>
      <param name="inheritanceFlags">Meaningless for tasks, because they have no hierarchy.</param>
      <param name="propagationFlags">Meaningless for tasks, because they have no hierarchy.</param>
      <param name="flags">One of the <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit successful access, failed access, or both.</param>
      <returns>
            A <see cref="T:Microsoft.Win32.TaskScheduler.TaskAuditRule" /> object representing the specified audit rule for the specified user. The return type of the method is the base class, <see cref="T:System.Security.AccessControl.AuditRule" />, but the return value can be cast safely to the derived class.
            </returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSecurity.AuditRuleType">
      <summary>
            Gets the type that the TaskSecurity class uses to represent audit rules.
            </summary>
      <returns>A <see cref="T:System.Type" /> object representing the <see cref="T:Microsoft.Win32.TaskScheduler.TaskAuditRule" /> class.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSecurity.DefaultTaskSecurity">
      <summary>
            Gets a <see cref="T:Microsoft.Win32.TaskScheduler.TaskSecurity" /> object that represent the default access rights.
            </summary>
      <value>The default task security.</value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary>
            Saves the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object to permanent storage. We recommend that the values of the <paramref name="includeSections" /> parameters passed to the constructor and persist methods be identical. For more information, see Remarks.
            </summary>
      <param name="name">The name used to retrieve the persisted information.</param>
      <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.RemoveAccessRule(Microsoft.Win32.TaskScheduler.TaskAccessRule)">
      <summary>
            Searches for an access control rule with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.
            </summary>
      <param name="rule">A <see cref="T:Microsoft.Win32.TaskScheduler.TaskAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.</param>
      <returns>
        <c>true</c> if a compatible rule is found; otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.RemoveAccessRuleAll(Microsoft.Win32.TaskScheduler.TaskAccessRule)">
      <summary>
            Searches for all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule and, if found, removes them.
            </summary>
      <param name="rule">A <see cref="T:Microsoft.Win32.TaskScheduler.TaskAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Any rights specified by this rule are ignored.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.RemoveAccessRuleSpecific(Microsoft.Win32.TaskScheduler.TaskAccessRule)">
      <summary>
            Searches for an access control rule that exactly matches the specified rule and, if found, removes it.
            </summary>
      <param name="rule">The <see cref="T:Microsoft.Win32.TaskScheduler.TaskAccessRule" /> to remove.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.RemoveAuditRule(Microsoft.Win32.TaskScheduler.TaskAuditRule)">
      <summary>
            Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.
            </summary>
      <param name="rule">A <see cref="T:Microsoft.Win32.TaskScheduler.TaskAuditRule" /> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.</param>
      <returns>
        <c>true</c> if a compatible rule is found; otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.RemoveAuditRuleAll(Microsoft.Win32.TaskScheduler.TaskAuditRule)">
      <summary>
            Searches for all audit rules with the same user as the specified rule and, if found, removes them.
            </summary>
      <param name="rule">A <see cref="T:Microsoft.Win32.TaskScheduler.TaskAuditRule" /> that specifies the user to search for. Any rights specified by this rule are ignored.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.RemoveAuditRuleSpecific(Microsoft.Win32.TaskScheduler.TaskAuditRule)">
      <summary>
            Searches for an audit rule that exactly matches the specified rule and, if found, removes it.
            </summary>
      <param name="rule">The <see cref="T:Microsoft.Win32.TaskScheduler.TaskAuditRule" /> to remove.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.ResetAccessRule(Microsoft.Win32.TaskScheduler.TaskAccessRule)">
      <summary>
            Removes all access control rules with the same user as the specified rule, regardless of <see cref="T:System.Security.AccessControl.AccessControlType" />, and then adds the specified rule.
            </summary>
      <param name="rule">The <see cref="T:Microsoft.Win32.TaskScheduler.TaskAccessRule" /> to add. The user specified by this rule determines the rules to remove before this rule is added.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.SetAccessRule(Microsoft.Win32.TaskScheduler.TaskAccessRule)">
      <summary>
            Removes all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and then adds the specified rule.
            </summary>
      <param name="rule">The <see cref="T:Microsoft.Win32.TaskScheduler.TaskAccessRule" /> to add. The user and <see cref="T:System.Security.AccessControl.AccessControlType" /> of this rule determine the rules to remove before this rule is added.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.SetAuditRule(Microsoft.Win32.TaskScheduler.TaskAuditRule)">
      <summary>
            Removes all audit rules with the same user as the specified rule, regardless of the <see cref="T:System.Security.AccessControl.AuditFlags" /> value, and then adds the specified rule.
            </summary>
      <param name="rule">The <see cref="T:Microsoft.Win32.TaskScheduler.TaskAuditRule" /> to add. The user specified by this rule determines the rules to remove before this rule is added.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSecurity.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskService">
      <summary>Provides access to the Task Scheduler service for managing registered tasks.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.#ctor">
      <summary>Creates a new instance of a TaskService connecting to the local machine as the current user.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> class.</summary>
      <param name="targetServer">
            The name of the computer that you want to connect to. If the this parameter is empty, then this will connect to the local computer.
            </param>
      <param name="userName">
            The user name that is used during the connection to the computer. If the user is not specified, then the current token is used.
            </param>
      <param name="accountDomain">The domain of the user specified in the <paramref name="userName" /> parameter.</param>
      <param name="userSecurePassword">
            The password that is used to connect to the computer as a SecureString. If the user name and securePassword are not specified, then the current token is used.
            </param>
      <param name="forceV1">If set to <c>true</c> force Task Scheduler 1.0 compatibility.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> class.</summary>
      <param name="targetServer">
            The name of the computer that you want to connect to. If the this parameter is empty, then this will connect to the local computer.
            </param>
      <param name="userName">
            The user name that is used during the connection to the computer. If the user is not specified, then the current token is used.
            </param>
      <param name="accountDomain">The domain of the user specified in the <paramref name="userName" /> parameter.</param>
      <param name="password">
            The password that is used to connect to the computer. If the user name and password are not specified, then the current token is used.
            </param>
      <param name="forceV1">If set to <c>true</c> force Task Scheduler 1.0 compatibility.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.AddAutomaticMaintenanceTask(System.String,System.TimeSpan,System.TimeSpan,System.String,System.String,System.String)">
      <summary>Adds or updates an Automatic Maintenance Task on the connected machine.</summary>
      <param name="taskPathAndName">Name of the task with full path.</param>
      <param name="period">The amount of time the task needs once executed during regular Automatic maintenance.</param>
      <param name="deadline">
            The amount of time after which the Task Scheduler attempts to run the task during emergency Automatic maintenance, if the task
            failed to complete during regular Automatic Maintenance.
            </param>
      <param name="executablePath">The path to an executable file.</param>
      <param name="arguments">The arguments associated with the command-line operation.</param>
      <param name="workingDirectory">
            The directory that contains either the executable file or the files that are used by the executable file.
            </param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instance of the Automatic Maintenance Task.</returns>
      <exception cref="T:System.InvalidOperationException">
            Automatic Maintenance tasks are only supported on Windows 8/Server 2012 and later.
            </exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.AddTask(System.String,Microsoft.Win32.TaskScheduler.QuickTriggerType,System.String,System.String,System.String,System.String,Microsoft.Win32.TaskScheduler.TaskLogonType,System.String)">
      <summary>Creates a new task, registers the task, and returns the instance.</summary>
      <param name="path">
            The task name. If this value is NULL, the task will be registered in the root task folder and the task name will be a GUID value
            that is created by the Task Scheduler service. A task name cannot begin or end with a space character. The '.' character cannot
            be used to specify the current task folder and the '..' characters cannot be used to specify the parent task folder in the path.
            </param>
      <param name="trigger">The <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> to determine when to run the task.</param>
      <param name="exePath">The executable path.</param>
      <param name="arguments">The arguments (optional). Value can be NULL.</param>
      <param name="userId">The user credentials used to register the task.</param>
      <param name="password">The password for the userId used to register the task.</param>
      <param name="logonType">
            A <see cref="T:Microsoft.Win32.TaskScheduler.TaskLogonType" /> value that defines what logon technique is used to run the registered task.
            </param>
      <param name="description">The task description.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instance of the registered task.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.AddTask(System.String,Microsoft.Win32.TaskScheduler.Trigger,Microsoft.Win32.TaskScheduler.Action,System.String,System.String,Microsoft.Win32.TaskScheduler.TaskLogonType,System.String)">
      <summary>Creates a new task, registers the task, and returns the instance.</summary>
      <param name="path">
            The task name. If this value is NULL, the task will be registered in the root task folder and the task name will be a GUID value
            that is created by the Task Scheduler service. A task name cannot begin or end with a space character. The '.' character cannot
            be used to specify the current task folder and the '..' characters cannot be used to specify the parent task folder in the path.
            </param>
      <param name="trigger">The <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> to determine when to run the task.</param>
      <param name="action">The <see cref="T:Microsoft.Win32.TaskScheduler.Action" /> to determine what happens when the task is triggered.</param>
      <param name="userId">The user credentials used to register the task.</param>
      <param name="password">The password for the userId used to register the task.</param>
      <param name="logonType">
            A <see cref="T:Microsoft.Win32.TaskScheduler.TaskLogonType" /> value that defines what logon technique is used to run the registered task.
            </param>
      <param name="description">The task description.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instance of the registered task.</returns>
      <remarks>
            This method is shorthand for creating a new TaskDescription, adding a trigger and action, and then registering it in the root folder.
            </remarks>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskService.AllowReadOnlyTasks">
      <summary>
            Gets or sets a value indicating whether to allow tasks from later OS versions with new properties to be retrieved as read only tasks.
            </summary>
      <value>
        <c>true</c> if allow read only tasks; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskService.AllTasks">
      <summary>Gets a <see cref="T:System.Collections.Generic.IEnumerator`1" /> which enumerates all the tasks in all folders.</summary>
      <value>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> for all <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instances.</value>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.BeginInit">
      <summary>Signals the object that initialization is starting.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskService.CanRaiseEvents">
      <summary>Gets a value indicating whether the component can raise an event.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskService.Connected">
      <summary>Gets a Boolean value that indicates if you are connected to the Task Scheduler service.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskService.ConnectedDomain">
      <summary>Gets the name of the domain to which the <see cref="P:Microsoft.Win32.TaskScheduler.TaskService.TargetServer" /> computer is connected.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskService.ConnectedUser">
      <summary>Gets the name of the user that is connected to the Task Scheduler service.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.CreateFromToken(Microsoft.Win32.TaskScheduler.TaskService.ConnectionToken)">
      <summary>
            Creates a new <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> instance from a token. Given that a TaskService instance is thread specific, this is the
            preferred method for multi-thread creation or asynchronous method parameters.
            </summary>
      <param name="token">The token.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> instance valid for the thread calling this method.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component" /> and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.EndInit">
      <summary>Signals the object that initialization is complete.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.Execute(System.String)">
      <summary>Initial call for a Fluent model of creating a task.</summary>
      <param name="path">The path of the program to run.</param>
      <returns>An <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.FindAllTasks(System.Predicate{Microsoft.Win32.TaskScheduler.Task},System.Boolean)">
      <summary>Finds all tasks matching a name or standard wildcards.</summary>
      <param name="filter">The filter used to determine tasks to select.</param>
      <param name="searchAllFolders">if set to <c>true</c> search all sub folders.</param>
      <returns>An array of <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> containing all tasks matching <paramref name="filter" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.FindAllTasks(System.Text.RegularExpressions.Regex,System.Boolean)">
      <summary>Finds all tasks matching a name or standard wildcards.</summary>
      <param name="name">Name of the task in regular expression form.</param>
      <param name="searchAllFolders">if set to <c>true</c> search all sub folders.</param>
      <returns>An array of <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> containing all tasks matching <paramref name="name" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.FindTask(System.String,System.Boolean)">
      <summary>Finds a task given a name and standard wildcards.</summary>
      <param name="name">The task name. This can include the wildcards * or ?.</param>
      <param name="searchAllFolders">if set to <c>true</c> search all sub folders.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> if one matches <paramref name="name" />, otherwise NULL.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.GetDllResourceString(System.String,System.Int32)">
      <summary>Gets a formatted string that tells the Task Scheduler to retrieve a string from a resource .dll file.</summary>
      <param name="dllPath">The path to the .dll file that contains the resource.</param>
      <param name="resourceId">The identifier for the resource text (typically a negative number).</param>
      <returns>A string in the format of $(@ [dllPath], [resourceId]).</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.GetEventLog(System.String)">
      <summary>Gets the event log for this <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> instance.</summary>
      <param name="taskPath">(Optional) The task path if only the events for a single task are desired.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.TaskEventLog" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.GetFolder(System.String)">
      <summary>Gets the path to a folder of registered tasks.</summary>
      <param name="folderName">
            The path to the folder to retrieve. Do not use a backslash following the last folder name in the path. The root task folder is
            specified with a backslash (\). An example of a task folder path, under the root task folder, is \MyTaskFolder. The '.' character
            cannot be used to specify the current task folder and the '..' characters cannot be used to specify the parent task folder in the path.
            </param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.TaskFolder" /> instance for the requested folder or <c>null</c> if <paramref name="folderName" /> was unrecognized.</returns>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">
            Folder other than the root (\) was requested on a system not supporting Task Scheduler 2.0.
            </exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.GetRunningTasks(System.Boolean)">
      <summary>Gets a collection of running tasks.</summary>
      <param name="includeHidden">True to include hidden tasks.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.RunningTaskCollection" /> instance with the list of running tasks.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.GetTask(System.String)">
      <summary>Gets the task with the specified path.</summary>
      <param name="taskPath">The task path.</param>
      <returns>
            The <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instance matching the <paramref name="taskPath" />, if found. If not found, this method returns <c>null</c>.
            </returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskService.HighestSupportedVersion">
      <summary>Gets the highest version of Task Scheduler that a computer supports.</summary>
      <remarks>
            The following table list the various versions and their host operating system:
            <list type="table"><listheader><term>Version</term><term>Operating System</term></listheader><item><term>1.1</term><term>Task Scheduler 1.0 (Windows Server™ 2003, Windows® XP, or Windows® 2000).</term></item><item><term>1.2</term><term>Task Scheduler 2.0 (Windows Vista™, Windows Server™ 2008).</term></item><item><term>1.3</term><term>Task Scheduler 2.1 (Windows® 7, Windows Server™ 2008 R2).</term></item><item><term>1.4</term><term>Task Scheduler 2.2 (Windows® 8.x, Windows Server™ 2012).</term></item><item><term>1.5</term><term>Task Scheduler 2.3 (Windows® 10, Windows Server™ 2016).</term></item><item><term>1.6</term><term>Task Scheduler 2.4 (Windows® 10 Version 1703, Windows Server™ 2016 Version 1703).</term></item></list></remarks>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskService.Instance">
      <summary>Gets a local instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> using the current user's credentials.</summary>
      <value>Local user <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> instance.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskService.LibraryVersion">
      <summary>
            Gets the library version. This is the highest version supported by the local library. Tasks cannot be created using any
            compatibility level higher than this version.
            </summary>
      <value>The library version.</value>
      <remarks>
            The following table list the various versions and their host operating system:
            <list type="table"><listheader><term>Version</term><term>Operating System</term></listheader><item><term>1.1</term><term>Task Scheduler 1.0 (Windows Server™ 2003, Windows® XP, or Windows® 2000).</term></item><item><term>1.2</term><term>Task Scheduler 2.0 (Windows Vista™, Windows Server™ 2008).</term></item><item><term>1.3</term><term>Task Scheduler 2.1 (Windows® 7, Windows Server™ 2008 R2).</term></item><item><term>1.4</term><term>Task Scheduler 2.2 (Windows® 8.x, Windows Server™ 2012).</term></item><item><term>1.5</term><term>Task Scheduler 2.3 (Windows® 10, Windows Server™ 2016).</term></item><item><term>1.6</term><term>Task Scheduler 2.4 (Windows® 10 Version 1703, Windows Server™ 2016 Version 1703).</term></item></list></remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.NewTask">
      <summary>
            Returns an empty task definition object to be filled in with settings and properties and then registered using the
            <see cref="M:Microsoft.Win32.TaskScheduler.TaskFolder.RegisterTaskDefinition(System.String,Microsoft.Win32.TaskScheduler.TaskDefinition)" /> method.
            </summary>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" /> instance for setting properties.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.NewTaskFromFile(System.String)">
      <summary>Returns a <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" /> populated with the properties defined in an XML file.</summary>
      <param name="xmlFile">The XML file to use as input.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" /> instance.</returns>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Importing from an XML file is only supported under Task Scheduler 2.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskService.RootFolder">
      <summary>Gets the root ("\") folder. For Task Scheduler 1.0, this is the only folder.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.RunComHandlerAction(System.Guid,System.String,System.Int32,Microsoft.Win32.TaskScheduler.TaskService.ComHandlerUpdate)">
      <summary>
            Runs an action that is defined via a COM handler. COM CLSID must be registered to an object that implements the
            <see cref="T:Microsoft.Win32.TaskScheduler.ITaskHandler" /> interface.
            </summary>
      <param name="clsid">The CLSID of the COM object.</param>
      <param name="data">An optional string passed to the COM object at startup.</param>
      <param name="millisecondsTimeout">The number of milliseconds to wait or -1 for indefinitely.</param>
      <param name="onUpdate">
            An optional <see cref="T:Microsoft.Win32.TaskScheduler.TaskService.ComHandlerUpdate" /> delegate that is called when the COM object calls the
            <see cref="M:Microsoft.Win32.TaskScheduler.ITaskHandlerStatus.UpdateStatus(System.Int16,System.String)" /> method.
            </param>
      <returns>The value set by the COM object via a call to the <see cref="M:Microsoft.Win32.TaskScheduler.ITaskHandlerStatus.TaskCompleted(System.Int32)" /> method.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.RunComHandlerActionAsync(System.Guid,System.Action{System.Int32},System.String,System.Int32,Microsoft.Win32.TaskScheduler.TaskService.ComHandlerUpdate)">
      <summary>
            Runs an action that is defined via a COM handler. COM CLSID must be registered to an object that implements the
            <see cref="T:Microsoft.Win32.TaskScheduler.ITaskHandler" /> interface.
            </summary>
      <param name="clsid">The CLSID of the COM object.</param>
      <param name="onComplete">The action to run on thread completion.</param>
      <param name="data">An optional string passed to the COM object at startup.</param>
      <param name="millisecondsTimeout">The number of milliseconds to wait or -1 for indefinitely.</param>
      <param name="onUpdate">
            An optional <see cref="T:Microsoft.Win32.TaskScheduler.TaskService.ComHandlerUpdate" /> delegate that is called when the COM object calls the
            <see cref="M:Microsoft.Win32.TaskScheduler.ITaskHandlerStatus.UpdateStatus(System.Int16,System.String)" /> method.
            </param>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.TaskService.ServiceConnected">
      <summary>Occurs when the Task Scheduler is connected to the local or remote target.</summary>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.TaskService.ServiceDisconnected">
      <summary>Occurs when the Task Scheduler is disconnected from the local or remote target.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.SetUserSecurePassword(System.Security.SecureString)">
      <summary>Sets the user password as a secure string to be used when connecting to the <see cref="P:Microsoft.Win32.TaskScheduler.TaskService.TargetServer" />.</summary>
      <param name="value">A secure string containing the user password to set.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskService.StartSystemTaskSchedulerManager">
      <summary>Starts the Task Scheduler UI for the OS hosting the assembly if the session is running in interactive mode.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskService.TargetServer">
      <summary>Gets or sets the name of the computer that is running the Task Scheduler service that the user is connected to.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskService.Token">
      <summary>
            Gets the connection token for this <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> instance. This token is thread safe and can be used to create new
            <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> instances on other threads using the <see cref="M:Microsoft.Win32.TaskScheduler.TaskService.CreateFromToken(Microsoft.Win32.TaskScheduler.TaskService.ConnectionToken)" /> static method.
            </summary>
      <value>The connection token.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskService.UserAccountDomain">
      <summary>Gets or sets the user account domain to be used when connecting to the <see cref="P:Microsoft.Win32.TaskScheduler.TaskService.TargetServer" />.</summary>
      <value>The user account domain.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskService.UserName">
      <summary>Gets or sets the user name to be used when connecting to the <see cref="P:Microsoft.Win32.TaskScheduler.TaskService.TargetServer" />.</summary>
      <value>The user name.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskService.UserPassword">
      <summary>Gets or sets the user password to be used when connecting to the <see cref="P:Microsoft.Win32.TaskScheduler.TaskService.TargetServer" />.</summary>
      <value>The user password.</value>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskService.ComHandlerUpdate">
      <summary>Delegate for methods that support update calls during COM handler execution.</summary>
      <param name="percentage">The percentage of completion (0 to 100).</param>
      <param name="message">An optional message.</param>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskService.ConnectionToken">
      <summary>
            Represents a valid, connected session to a Task Scheduler instance. This token is thread-safe and should be the means of passing
            information about a <see cref="T:Microsoft.Win32.TaskScheduler.TaskService" /> between threads.
            </summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskServiceVersion">
      <summary>
            Known versions of the native Task Scheduler library. This can be used as a decoder for the
            <see cref="P:Microsoft.Win32.TaskScheduler.TaskService.HighestSupportedVersion" /> and <see cref="P:Microsoft.Win32.TaskScheduler.TaskService.LibraryVersion" /> values.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskServiceVersion.V1_1">
      <summary>Task Scheduler 1.0 (Windows Server™ 2003, Windows® XP, or Windows® 2000).</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskServiceVersion.V1_2">
      <summary>Task Scheduler 2.0 (Windows Vista™, Windows Server™ 2008).</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskServiceVersion.V1_3">
      <summary>Task Scheduler 2.1 (Windows® 7, Windows Server™ 2008 R2).</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskServiceVersion.V1_4">
      <summary>Task Scheduler 2.2 (Windows® 8.x, Windows Server™ 2012).</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskServiceVersion.V1_5">
      <summary>Task Scheduler 2.3 (Windows® 10, Windows Server™ 2016).</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskServiceVersion.V1_6">
      <summary>Task Scheduler 2.3 (Windows® 10, Windows Server™ 2016 post build 1703).</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType">
      <summary>
            Defines what kind of Terminal Server session state change you can use to trigger a task to start. These changes are used to specify
            the type of state change in the SessionStateChangeTrigger.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType.ConsoleConnect">
      <summary>
            Terminal Server console connection state change. For example, when you connect to a user session on the local computer by
            switching users on the computer.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType.ConsoleDisconnect">
      <summary>
            Terminal Server console disconnection state change. For example, when you disconnect to a user session on the local computer by
            switching users on the computer.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType.RemoteConnect">
      <summary>
            Terminal Server remote connection state change. For example, when a user connects to a user session by using the Remote Desktop
            Connection program from a remote computer.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType.RemoteDisconnect">
      <summary>
            Terminal Server remote disconnection state change. For example, when a user disconnects from a user session while using the
            Remote Desktop Connection program from a remote computer.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType.SessionLock">
      <summary>
            Terminal Server session locked state change. For example, this state change causes the task to run when the computer is locked.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType.SessionUnlock">
      <summary>
            Terminal Server session unlocked state change. For example, this state change causes the task to run when the computer is unlocked.
            </summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskSetSecurityOptions">
      <summary>Options for use when calling the SetSecurityDescriptorSddlForm methods.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskSetSecurityOptions.None">
      <summary>No special handling.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskSetSecurityOptions.DontAddPrincipalAce">
      <summary>The Task Scheduler service is prevented from adding the allow access-control entry (ACE) for the context principal.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskSettings">
      <summary>Provides the settings that the Task Scheduler service uses to perform the task.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.AllowDemandStart">
      <summary>
            Gets or sets a Boolean value that indicates that the task can be started by using either the Run command or the Context menu.
            </summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.AllowHardTerminate">
      <summary>Gets or sets a Boolean value that indicates that the task may be terminated by using TerminateProcess.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.Compatibility">
      <summary>Gets or sets an integer value that indicates which version of Task Scheduler a task is compatible with.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.DeleteExpiredTaskAfter">
      <summary>
            Gets or sets the amount of time that the Task Scheduler will wait before deleting the task after it expires. If no value is
            specified for this property, then the Task Scheduler service will not delete the task.
            </summary>
      <value>
            Gets and sets the amount of time that the Task Scheduler will wait before deleting the task after it expires. A TimeSpan value
            of 1 second indicates the task is set to delete when done. A value of TimeSpan.Zero indicates that the task should not be deleted.
            </value>
      <remarks>
            A task expires after the end boundary has been exceeded for all triggers associated with the task. The end boundary for a
            trigger is specified by the <c>EndBoundary</c> property of all trigger types.
            </remarks>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.DisallowStartIfOnBatteries">
      <summary>
            Gets or sets a Boolean value that indicates that the task will not be started if the computer is running on battery power.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.DisallowStartOnRemoteAppSession">
      <summary>
            Gets or sets a Boolean value that indicates that the task will not be started if the task is triggered to run in a Remote
            Applications Integrated Locally (RAIL) session.
            </summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotSupportedPriorToException">Property set for a task on a Task Scheduler version prior to 2.1.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSettings.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.Enabled">
      <summary>
            Gets or sets a Boolean value that indicates that the task is enabled. The task can be performed only when this setting is TRUE.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.ExecutionTimeLimit">
      <summary>
            Gets or sets the amount of time that is allowed to complete the task. By default, a task will be stopped 72 hours after it
            starts to run.
            </summary>
      <value>
            The amount of time that is allowed to complete the task. When this parameter is set to <see cref="F:System.TimeSpan.Zero" />, the
            execution time limit is infinite.
            </value>
      <remarks>
            If a task is started on demand, the ExecutionTimeLimit setting is bypassed. Therefore, a task that is started on demand will not
            be terminated if it exceeds the ExecutionTimeLimit.
            </remarks>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.Hidden">
      <summary>Gets or sets a Boolean value that indicates that the task will not be visible in the UI by default.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.IdleSettings">
      <summary>
            Gets or sets the information that specifies how the Task Scheduler performs tasks when the computer is in an idle state.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.MaintenanceSettings">
      <summary>Gets or sets the information that the Task Scheduler uses during Automatic maintenance.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.MultipleInstances">
      <summary>Gets or sets the policy that defines how the Task Scheduler handles multiple instances of the task.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.NetworkSettings">
      <summary>
            Gets or sets the network settings object that contains a network profile identifier and name. If the RunOnlyIfNetworkAvailable
            property of ITaskSettings is true and a network profile is specified in the NetworkSettings property, then the task will run
            only if the specified network profile is available.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.Priority">
      <summary>Gets or sets the priority level of the task.</summary>
      <value>The priority.</value>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Value set to AboveNormal or BelowNormal on Task Scheduler 1.0.</exception>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.TaskSettings.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.RestartCount">
      <summary>Gets or sets the number of times that the Task Scheduler will attempt to restart the task.</summary>
      <value>
            The number of times that the Task Scheduler will attempt to restart the task. If this property is set, the <see cref="P:Microsoft.Win32.TaskScheduler.TaskSettings.RestartInterval" /> property must also be set.
            </value>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.RestartInterval">
      <summary>Gets or sets a value that specifies how long the Task Scheduler will attempt to restart the task.</summary>
      <value>
            A value that specifies how long the Task Scheduler will attempt to restart the task. If this property is set, the <see cref="P:Microsoft.Win32.TaskScheduler.TaskSettings.RestartCount" /> property must also be set. The maximum time allowed is 31 days, and the minimum time allowed is 1 minute.
            </value>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.RunOnlyIfIdle">
      <summary>
            Gets or sets a Boolean value that indicates that the Task Scheduler will run the task only if the computer is in an idle condition.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.RunOnlyIfLoggedOn">
      <summary>
            Gets or sets a Boolean value that indicates that the Task Scheduler will run the task only if the user is logged on (v1.0 only)
            </summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV2SupportedException">Property set for a task on a Task Scheduler version other than 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.RunOnlyIfNetworkAvailable">
      <summary>Gets or sets a Boolean value that indicates that the Task Scheduler will run the task only when a network is available.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.StartWhenAvailable">
      <summary>
            Gets or sets a Boolean value that indicates that the Task Scheduler can start the task at any time after its scheduled time has passed.
            </summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.StopIfGoingOnBatteries">
      <summary>Gets or sets a Boolean value that indicates that the task will be stopped if the computer switches to battery power.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TaskSettings.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.UseUnifiedSchedulingEngine">
      <summary>Gets or sets a Boolean value that indicates that the Unified Scheduling Engine will be utilized to run this task.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotSupportedPriorToException">Property set for a task on a Task Scheduler version prior to 2.1.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.Volatile">
      <summary>Gets or sets a boolean value that indicates whether the task is automatically disabled every time Windows starts.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotSupportedPriorToException">Property set for a task on a Task Scheduler version prior to 2.2.</exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.WakeToRun">
      <summary>
            Gets or sets a Boolean value that indicates that the Task Scheduler will wake the computer when it is time to run the task.
            </summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSettings.XmlText">
      <summary>Gets or sets an XML-formatted definition of the task settings.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskSnapshot">
      <summary>Represents a <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instance and captures its details.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSnapshot.Enabled">
      <summary>Gets a value indicating whether th <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> is enabled.</summary>
      <value>
        <c>true</c> if enabled; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TaskSnapshot.TaskDefinitionXml">
      <summary>Gets the <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" /> XML.</summary>
      <value>The <see cref="T:Microsoft.Win32.TaskScheduler.TaskDefinition" /> XML.</value>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskState">
      <summary>Defines the different states that a registered task can be in.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskState.Unknown">
      <summary>The state of the task is unknown.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskState.Disabled">
      <summary>
            The task is registered but is disabled and no instances of the task are queued or running. The task cannot be run until it is enabled.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskState.Queued">
      <summary>Instances of the task are queued.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskState.Ready">
      <summary>The task is ready to be executed, but no instances are queued or running.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskState.Running">
      <summary>One or more instances of the task is running.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TaskTriggerType">
      <summary>Defines the type of triggers that can be used by tasks.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskTriggerType.Event">
      <summary>Triggers the task when a specific event occurs. Version 1.2 only.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskTriggerType.Time">
      <summary>Triggers the task at a specific time of day.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskTriggerType.Daily">
      <summary>Triggers the task on a daily schedule.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskTriggerType.Weekly">
      <summary>Triggers the task on a weekly schedule.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskTriggerType.Monthly">
      <summary>Triggers the task on a monthly schedule.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskTriggerType.MonthlyDOW">
      <summary>Triggers the task on a monthly day-of-week schedule.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskTriggerType.Idle">
      <summary>Triggers the task when the computer goes into an idle state.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskTriggerType.Registration">
      <summary>Triggers the task when the task is registered. Version 1.2 only.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskTriggerType.Boot">
      <summary>Triggers the task when the computer boots.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskTriggerType.Logon">
      <summary>Triggers the task when a specific user logs on.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskTriggerType.SessionStateChange">
      <summary>Triggers the task when a specific user session state changes. Version 1.2 only.</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TaskTriggerType.Custom">
      <summary>Triggers the custom trigger. Version 1.3 only.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TimeTrigger">
      <summary>Represents a trigger that starts a task at a specific date and time.</summary>
      <remarks>A TimeTrigger runs at a specified date and time.</remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TimeTrigger.#ctor">
      <summary>Creates an unbound instance of a <see cref="T:Microsoft.Win32.TaskScheduler.TimeTrigger" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TimeTrigger.#ctor(System.DateTime)">
      <summary>Creates an unbound instance of a <see cref="T:Microsoft.Win32.TaskScheduler.TimeTrigger" /> and assigns the execution time.</summary>
      <param name="startBoundary">Date and time for the trigger to fire.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TimeTrigger.RandomDelay">
      <summary>Gets or sets a delay time that is randomly added to the start time of the trigger.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TimeTrigger.V2GetTriggerString">
      <summary>Gets the non-localized trigger string for V2 triggers.</summary>
      <returns>String describing the trigger.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.Trigger">
      <summary>
            Abstract base class which provides the common properties that are inherited by all trigger classes. A trigger can be created using
            the <see cref="M:Microsoft.Win32.TaskScheduler.TriggerCollection.Add``1(``0)" /> or the <see cref="M:Microsoft.Win32.TaskScheduler.TriggerCollection.AddNew(Microsoft.Win32.TaskScheduler.TaskTriggerType)" /> method.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.CheckBindValue(System.String,System.Object@)">
      <summary>Checks the bind value for any conversion.</summary>
      <param name="key">The key (property) name.</param>
      <param name="o">The value.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.Clone">
      <summary>Creates a new <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> that is an unbound copy of this instance.</summary>
      <returns>A new <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> that is an unbound copy of this instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.CompareTo(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current
            instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
      <param name="other">An object to compare with this instance.</param>
      <returns>A value that indicates the relative order of the objects being compared.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.CopyProperties(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>
            Copies the properties from another <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> the current instance. This will not copy any properties associated with
            any derived triggers except those supporting the <see cref="T:Microsoft.Win32.TaskScheduler.ITriggerDelay" /> interface.
            </summary>
      <param name="sourceTrigger">The source <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" />.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.CreateTrigger(Microsoft.Win32.TaskScheduler.TaskTriggerType)">
      <summary>Creates the specified trigger.</summary>
      <param name="triggerType">Type of the trigger to instantiate.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> of specified type.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Trigger.Enabled">
      <summary>Gets or sets a Boolean value that indicates whether the trigger is enabled.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Trigger.EndBoundary">
      <summary>
            Gets or sets the date and time when the trigger is deactivated. The trigger cannot start the task after it is deactivated.
            <note>While the maximum value for this property is <see cref="F:System.DateTime.MaxValue" />, the Windows Task Scheduler management
            application that is part of the OS will fail if this value is greater than December 31, 9998.</note></summary>
      <remarks>
        <para>
            Version 1 (1.1 on all systems prior to Vista) of the native library only allows for the Day, Month and Year values of the <see cref="T:System.DateTime" /> structure.
            </para>
        <para>
            Version 2 (1.2 or higher) of the native library only allows for both date and time and all <see cref="P:System.DateTime.Kind" /> values.
            However, the user interface and <see cref="M:Microsoft.Win32.TaskScheduler.Trigger.ToString" /> methods will always show the time translated to local time. The
            library makes every attempt to maintain the Kind value. When using the UI elements provided in the TaskSchedulerEditor library,
            the "Synchronize across time zones" checkbox will be checked if the Kind is Local or Utc. If the Kind is Unspecified and the
            user selects the checkbox, the Kind will be changed to Utc and the time adjusted from the value displayed as the local time.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.Equals(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Trigger.ExecutionTimeLimit">
      <summary>
            Gets or sets the maximum amount of time that the task launched by this trigger is allowed to run. Not available with Task
            Scheduler 1.0.
            </summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.FromCronFormat(System.String)">
      <summary>Creates a trigger using a cron string.</summary>
      <param name="cronString">String using cron defined syntax for specifying a time interval. See remarks for syntax.</param>
      <returns>Array of <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> representing the specified cron string.</returns>
      <remarks>
        <note type="note"> This method does not support all combinations of cron strings. Please test extensively before use. Please post an issue with any
            syntax that should work, but doesn't.</note>
        <para>The following combinations are known <c>not</c> to work:</para>
        <list type="bullet">
          <item>
            <description>Intervals on months (e.g. "* * * */5 *")</description>
          </item>
          <item>
            <description>Intervals on DOW (e.g. "* * * * MON/3")</description>
          </item>
        </list>
        <para>
            This section borrows liberally from the site http://www.nncron.ru/help/EN/working/cron-format.htm. The cron format consists of five fields separated
            by white spaces:
            </para>
        <code>
              &lt;Minute&gt; &lt;Hour&gt; &lt;Day_of_the_Month&gt; &lt;Month_of_the_Year&gt; &lt;Day_of_the_Week&gt;
            </code>
        <para>Each item has bounds as defined by the following:</para>
        <code>
              * * * * *
              | | | | |
              | | | | +---- Day of the Week   (range: 1-7, 1 standing for Monday)
              | | | +------ Month of the Year (range: 1-12)
              | | +-------- Day of the Month  (range: 1-31)
              | +---------- Hour              (range: 0-23)
              +------------ Minute            (range: 0-59)
            </code>
        <para>Any of these 5 fields may be an asterisk (*). This would mean the entire range of possible values, i.e. each minute, each hour, etc.</para>
        <para>
            Any of the first 4 fields can be a question mark ("?"). It stands for the current time, i.e. when a field is processed, the current time will be
            substituted for the question mark: minutes for Minute field, hour for Hour field, day of the month for Day of month field and month for Month field.
            </para>
        <para>Any field may contain a list of values separated by commas, (e.g. 1,3,7) or a range of values (two integers separated by a hyphen, e.g. 1-5).</para>
        <para>
            After an asterisk (*) or a range of values, you can use character / to specify that values are repeated over and over with a certain interval between
            them. For example, you can write "0-23/2" in Hour field to specify that some action should be performed every two hours (it will have the same effect
            as "0,2,4,6,8,10,12,14,16,18,20,22"); value "*/4" in Minute field means that the action should be performed every 4 minutes, "1-30/3" means the same
            as "1,4,7,10,13,16,19,22,25,28".
            </para>
      </remarks>
      <exception cref="T:System.NotImplementedException">Unsupported cron string.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.GetUnboundValueOrDefault``1(System.String,``0)">
      <summary>Gets the unbound value or a default.</summary>
      <param name="prop">The property name.</param>
      <param name="def">The default value if not found in unbound value list.</param>
      <typeparam name="T">Return type.</typeparam>
      <returns>The unbound value, if set, or the default value.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Trigger.Id">
      <summary>Gets or sets the identifier for the trigger. Cannot set with Task Scheduler 1.0.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.OnNotifyPropertyChanged(System.String)">
      <summary>Called when a property has changed to notify any attached elements.</summary>
      <param name="propertyName">Name of the property.</param>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.Trigger.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Trigger.Repetition">
      <summary>
            Gets a <see cref="T:Microsoft.Win32.TaskScheduler.RepetitionPattern" /> instance that indicates how often the task is run and how long the repetition pattern is
            repeated after the task is started.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.SetRepetition(System.TimeSpan,System.TimeSpan,System.Boolean)">
      <summary>Sets the repetition.</summary>
      <param name="interval">
            The amount of time between each restart of the task. The maximum time allowed is 31 days, and the minimum time allowed is 1 minute.
            </param>
      <param name="duration">
            The duration of how long the pattern is repeated. The minimum time allowed is one minute. If <c>TimeSpan.Zero</c> is specified,
            the pattern is repeated indefinitely.
            </param>
      <param name="stopAtDurationEnd">
            if set to <c>true</c> the running instance of the task is stopped at the end of repetition pattern duration.
            </param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Trigger.StartBoundary">
      <summary>Gets or sets the date and time when the trigger is activated.</summary>
      <remarks>
        <para>
            Version 1 (1.1 on all systems prior to Vista) of the native library only allows for <see cref="T:System.DateTime" /> values where the <see cref="P:System.DateTime.Kind" /> is unspecified. If the DateTime value Kind is <see cref="F:System.DateTimeKind.Local" /> then it will be used as
            is. If the DateTime value Kind is <see cref="F:System.DateTimeKind.Utc" /> then it will be converted to the local time and then used.
            </para>
        <para>
            Version 2 (1.2 or higher) of the native library only allows for all <see cref="P:System.DateTime.Kind" /> values. However, the user
            interface and <see cref="M:Microsoft.Win32.TaskScheduler.Trigger.ToString" /> methods will always show the time translated to local time. The library makes
            every attempt to maintain the Kind value. When using the UI elements provided in the TaskSchedulerEditor library, the
            "Synchronize across time zones" checkbox will be checked if the Kind is Local or Utc. If the Kind is Unspecified and the user
            selects the checkbox, the Kind will be changed to Utc and the time adjusted from the value displayed as the local time.
            </para>
        <para>
            Under Version 2, when converting the string used in the native library for this value (ITrigger.Startboundary) this library will
            behave as follows:
            <list type="bullet"><item><description>YYYY-MM-DDTHH:MM:SS format uses DateTimeKind.Unspecified and the time specified.</description></item><item><description>YYYY-MM-DDTHH:MM:SSZ format uses DateTimeKind.Utc and the time specified as the GMT time.</description></item><item><description>YYYY-MM-DDTHH:MM:SS±HH:MM format uses DateTimeKind.Local and the time specified in that time zone.</description></item></list></para>
      </remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.ToString">
      <summary>Returns a string representing this trigger.</summary>
      <returns>String value of trigger.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.ToString(System.Globalization.CultureInfo)">
      <summary>Returns a <see cref="T:System.String" /> that represents this trigger in a specific language.</summary>
      <param name="culture">The language of the resulting string.</param>
      <returns>String value of trigger.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Trigger.TriggerType">
      <summary>Gets the type of the trigger.</summary>
      <value>The <see cref="T:Microsoft.Win32.TaskScheduler.TaskTriggerType" /> of the trigger.</value>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.Trigger.unboundValues">
      <summary>In testing and may change. Do not use until officially introduced into library.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Trigger.V2GetTriggerString">
      <summary>Gets the non-localized trigger string for V2 triggers.</summary>
      <returns>String describing the trigger.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TriggerCollection">
      <summary>Provides the methods that are used to add to, remove from, and get the triggers of a task.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.Add``1(``0)">
      <summary>Add an unbound <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> to the task.</summary>
      <param name="unboundTrigger">
        <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> derivative to add to the task.</param>
      <typeparam name="TTrigger">A type derived from <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" />.</typeparam>
      <returns>Bound trigger.</returns>
      <exception cref="T:System.ArgumentNullException">
        <c>unboundTrigger</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.AddNew(Microsoft.Win32.TaskScheduler.TaskTriggerType)">
      <summary>Add a new trigger to the collections of triggers for the task.</summary>
      <param name="taskTriggerType">The type of trigger to create.</param>
      <returns>A <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> instance of the specified type.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.AddRange(System.Collections.Generic.IEnumerable{Microsoft.Win32.TaskScheduler.Trigger})">
      <summary>Adds a collection of unbound triggers to the end of the <see cref="T:Microsoft.Win32.TaskScheduler.TriggerCollection" />.</summary>
      <param name="triggers">
            The triggers to be added to the end of the <see cref="T:Microsoft.Win32.TaskScheduler.TriggerCollection" />. The collection itself cannot be <c>null</c> and
            cannot contain <c>null</c> elements.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="triggers" /> is <c>null</c>.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.Clear">
      <summary>Clears all triggers from the task.</summary>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.TriggerCollection.CollectionChanged">
      <summary>Occurs when a collection changes.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.Contains(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.ContainsType(System.Type)">
      <summary>Determines whether the specified trigger type is contained in this collection.</summary>
      <param name="triggerType">Type of the trigger.</param>
      <returns>
        <c>true</c> if the specified trigger type is contained in this collection; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.CopyTo(Microsoft.Win32.TaskScheduler.Trigger[],System.Int32)">
      <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
      <param name="array">
            The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The
            <see cref="T:System.Array" /> must have zero-based indexing.
            </param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.CopyTo(System.Int32,Microsoft.Win32.TaskScheduler.Trigger[],System.Int32,System.Int32)">
      <summary>
            Copies the elements of the <see cref="T:Microsoft.Win32.TaskScheduler.TriggerCollection" /> to a <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> array, starting at a particular <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> array index.
            </summary>
      <param name="index">The zero-based index in the source at which copying begins.</param>
      <param name="array">
            The <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> array that is the destination of the elements copied from <see cref="T:Microsoft.Win32.TaskScheduler.TriggerCollection" />. The <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> array must have zero-based indexing.
            </param>
      <param name="arrayIndex">The zero-based index in <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> array at which copying begins.</param>
      <param name="count">The number of elements to copy.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:Microsoft.Win32.TaskScheduler.TriggerCollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.
            </exception>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TriggerCollection.Count">
      <summary>Gets the number of triggers in the collection.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.Dispose">
      <summary>Releases all resources used by this class.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.Find(System.Predicate{Microsoft.Win32.TaskScheduler.Trigger})">
      <summary>
            Searches for an <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> that matches the conditions defined by the specified predicate, and returns the first
            occurrence within the entire collection.
            </summary>
      <param name="match">
            The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> to search for.
            </param>
      <returns>
            The first <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> that matches the conditions defined by the specified predicate, if found; otherwise, <c>null</c>.
            </returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.FindIndexOf(System.Int32,System.Int32,System.Predicate{Microsoft.Win32.TaskScheduler.Trigger})">
      <summary>
            Searches for an <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> that matches the conditions defined by the specified predicate, and returns the zero-based
            index of the first occurrence within the collection that starts at the specified index and contains the specified number of elements.
            </summary>
      <param name="startIndex">The zero-based starting index of the search.</param>
      <param name="count">The number of elements in the collection to search.</param>
      <param name="match">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</param>
      <returns>
            The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.
            </returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.FindIndexOf(System.Predicate{Microsoft.Win32.TaskScheduler.Trigger})">
      <summary>
            Searches for an <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> that matches the conditions defined by the specified predicate, and returns the zero-based
            index of the first occurrence within the collection.
            </summary>
      <param name="match">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</param>
      <returns>
            The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.
            </returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.GetEnumerator">
      <summary>Gets the collection enumerator for this collection.</summary>
      <returns>The <see cref="T:System.Collections.Generic.IEnumerator`1" /> for this collection.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.IndexOf(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <returns>The index of <paramref name="item" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.IndexOf(System.String)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.</summary>
      <param name="triggerId">The id ( <see cref="P:Microsoft.Win32.TaskScheduler.Trigger.Id" />) of the trigger to be retrieved.</param>
      <returns>The index of <paramref name="triggerId" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.Insert(System.Int32,Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>Inserts an trigger at the specified index.</summary>
      <param name="index">The zero-based index at which trigger should be inserted.</param>
      <param name="trigger">The trigger to insert into the list.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TriggerCollection.Item(System.Int32)">
      <summary>Gets a specified trigger from the collection.</summary>
      <param name="index">The index of the trigger to be retrieved.</param>
      <returns>Specialized <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> instance.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TriggerCollection.Item(System.String)">
      <summary>Gets or sets a specified trigger from the collection.</summary>
      <param name="triggerId">The id ( <see cref="P:Microsoft.Win32.TaskScheduler.Trigger.Id" />) of the trigger to be retrieved.</param>
      <returns>Specialized <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> instance.</returns>
      <value>The <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" />.</value>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.ArgumentOutOfRangeException"></exception>
      <exception cref="T:System.NullReferenceException"></exception>
      <exception cref="T:System.InvalidOperationException">Mismatching Id for trigger and lookup.</exception>
    </member>
    <member name="E:Microsoft.Win32.TaskScheduler.TriggerCollection.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.Remove(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method
            also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.RemoveAt(System.Int32)">
      <summary>Removes the trigger at a specified index.</summary>
      <param name="index">Index of trigger to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Index out of range.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.ToArray">
      <summary>Copies the elements of the <see cref="T:Microsoft.Win32.TaskScheduler.TriggerCollection" /> to a new array.</summary>
      <returns>An array containing copies of the elements of the <see cref="T:Microsoft.Win32.TaskScheduler.TriggerCollection" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TriggerCollection.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the triggers in this collection.</summary>
      <returns>A <see cref="T:System.String" /> that represents the triggers in this collection.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.TSNotSupportedException">
      <summary>
            Abstract class for throwing a method specific exception.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TSNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Win32.TaskScheduler.TSNotSupportedException" /> class.
            </summary>
      <param name="serializationInfo">The serialization information.</param>
      <param name="streamingContext">The streaming context.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.TSNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TSNotSupportedException.Message">
      <summary>
            Gets a message that describes the current exception.
            </summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.TSNotSupportedException.min">
      <summary>Defines the minimum supported version for the action not allowed by this exception.</summary>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.TSNotSupportedException.MinimumSupportedVersion">
      <summary>
            Gets the minimum supported TaskScheduler version required for this method or property.
            </summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.WeeklyTrigger">
      <summary>
             Represents a trigger that starts a task based on a weekly schedule. For example, the task starts at 8:00 A.M. on a specific day of
             the week every week or every other week.
             </summary>
      <remarks>A WeeklyTrigger runs at a specified time on specified days of the week every week or interval of weeks.</remarks>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.WeeklyTrigger.#ctor(Microsoft.Win32.TaskScheduler.DaysOfTheWeek,System.Int16)">
      <summary>Creates an unbound instance of a <see cref="T:Microsoft.Win32.TaskScheduler.WeeklyTrigger" />.</summary>
      <param name="daysOfWeek">The days of the week.</param>
      <param name="weeksInterval">The interval between the weeks in the schedule.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.WeeklyTrigger.CopyProperties(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>
            Copies the properties from another <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" /> the current instance. This will not copy any properties associated with
            any derived triggers except those supporting the <see cref="T:Microsoft.Win32.TaskScheduler.ITriggerDelay" /> interface.
            </summary>
      <param name="sourceTrigger">The source <see cref="T:Microsoft.Win32.TaskScheduler.Trigger" />.</param>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.WeeklyTrigger.DaysOfWeek">
      <summary>Gets or sets the days of the week on which the task runs.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.WeeklyTrigger.Equals(Microsoft.Win32.TaskScheduler.Trigger)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.WeeklyTrigger.RandomDelay">
      <summary>Gets or sets a delay time that is randomly added to the start time of the trigger.</summary>
      <exception cref="T:Microsoft.Win32.TaskScheduler.NotV1SupportedException">Not supported under Task Scheduler 1.0.</exception>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.WeeklyTrigger.V2GetTriggerString">
      <summary>Gets the non-localized trigger string for V2 triggers.</summary>
      <returns>String describing the trigger.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.WeeklyTrigger.WeeksInterval">
      <summary>Gets or sets the interval between the weeks in the schedule.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.WhichWeek">
      <summary>Values for week of month (first, second, ..., last)</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.WhichWeek.FirstWeek">
      <summary>First week of the month</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.WhichWeek.SecondWeek">
      <summary>Second week of the month</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.WhichWeek.ThirdWeek">
      <summary>Third week of the month</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.WhichWeek.FourthWeek">
      <summary>Fourth week of the month</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.WhichWeek.LastWeek">
      <summary>Last week of the month</summary>
    </member>
    <member name="F:Microsoft.Win32.TaskScheduler.WhichWeek.AllWeeks">
      <summary>Every week of the month</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.Wildcard">
      <summary>
            Represents a wildcard running on the
            <see cref="N:System.Text.RegularExpressions" /> engine.
            </summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Wildcard.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>
            Initializes a wildcard with the given search pattern and options.
            </summary>
      <param name="pattern">The wildcard pattern to match.</param>
      <param name="options">A combination of one or more <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</param>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Wildcard.WildcardToRegex(System.String)">
      <summary>
            Converts a wildcard to a regular expression.
            </summary>
      <param name="pattern">The wildcard pattern to convert.</param>
      <returns>A regular expression equivalent of the given wildcard.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder">
      <summary>Fluent helper class. Not intended for use.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder.AtLogon">
      <summary>Adds a trigger that executes at logon of all users.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder.AtLogonOf(System.String)">
      <summary>Adds a trigger that executes at logon of a specific user.</summary>
      <param name="userId">The user id.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder.AtTaskRegistration">
      <summary>Adds a trigger that executes at task registration.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder.Every(System.Int16)">
      <summary>Adds a trigger that executes every day or week.</summary>
      <param name="num">The interval of days or weeks.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.IntervalTriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder.InTheMonthOf(Microsoft.Win32.TaskScheduler.MonthsOfTheYear)">
      <summary>Adds a trigger that executes monthly on specific days.</summary>
      <param name="moy">The months of the year in which to run.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.MonthlyTriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder.InWorkingDirectory(System.String)">
      <summary>Adds a working directory to the <see cref="T:Microsoft.Win32.TaskScheduler.ExecAction" />.</summary>
      <param name="dir">The directory.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder.OnAll(Microsoft.Win32.TaskScheduler.DaysOfTheWeek)">
      <summary>Adds a trigger that executes monthly on certain days of the week.</summary>
      <param name="dow">The days of the week on which to run.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.MonthlyDOWTriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder.OnBoot">
      <summary>Adds a trigger that executes at system startup.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder.Once">
      <summary>Adds a trigger that executes once at a specific time.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder.OnIdle">
      <summary>Adds a trigger that executes when system is idle.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder.OnStateChange(Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType)">
      <summary>Adds a trigger that executes once at specified state change.</summary>
      <param name="changeType">Type of the change.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder.WithArguments(System.String)">
      <summary>Adds arguments to the <see cref="T:Microsoft.Win32.TaskScheduler.ExecAction" />.</summary>
      <param name="args">The arguments.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.ActionBuilder" /> instance.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.Fluent.BaseBuilder">
      <summary>Fluent helper class. Not intended for use.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.BaseBuilder.AsTask(System.String)">
      <summary>Assigns the name of the task and registers it.</summary>
      <param name="name">The name.</param>
      <returns>A registered <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.BaseBuilder.AsTask(System.String,Microsoft.Win32.TaskScheduler.TaskCreation,System.String,System.String,Microsoft.Win32.TaskScheduler.TaskLogonType)">
      <summary>Assigns the name of the task and registers it.</summary>
      <param name="name">The name.</param>
      <param name="createType">A union of <see cref="T:Microsoft.Win32.TaskScheduler.TaskCreation" /> flags.</param>
      <param name="userId">The user credentials used to register the task.</param>
      <param name="password">The password for the userId used to register the task.</param>
      <param name="logonType">A <see cref="T:Microsoft.Win32.TaskScheduler.TaskLogonType" /> value that defines what logon technique is used to run the registered task.</param>
      <returns>A registered <see cref="T:Microsoft.Win32.TaskScheduler.Task" /> instance.</returns>
    </member>
    <member name="P:Microsoft.Win32.TaskScheduler.Fluent.BaseBuilder.When">
      <summary>Transitions to settings syntax.</summary>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.Fluent.IntervalTriggerBuilder">
      <summary>Fluent helper class. Not intended for use.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.IntervalTriggerBuilder.Days">
      <summary>Specifies that an Every target uses days as the interval.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.IntervalTriggerBuilder.Weeks">
      <summary>Specifies that an Every target uses weeks as the interval.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.WeeklyTriggerBuilder" /> instance.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.Fluent.MonthlyDOWTriggerBuilder">
      <summary>Fluent helper class. Not intended for use.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.MonthlyDOWTriggerBuilder.In(Microsoft.Win32.TaskScheduler.WhichWeek)">
      <summary>Updates a monthly trigger to specify in which weeks of the month it will run.</summary>
      <param name="ww">The week.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.MonthlyDOWTriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.MonthlyDOWTriggerBuilder.Of(Microsoft.Win32.TaskScheduler.MonthsOfTheYear)">
      <summary>Updates a monthly trigger to specify the months of the year in which it will run.</summary>
      <param name="moy">The month of the year.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.Fluent.MonthlyTriggerBuilder">
      <summary>Fluent helper class. Not intended for use.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.MonthlyTriggerBuilder.OnTheDays(System.Int32[])">
      <summary>Updates a monthly trigger to specify the days of the month on which it will run.</summary>
      <param name="days">The days.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder">
      <summary>Fluent helper class. Not intended for use.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.AllowingStartIfOnBatteries">
      <summary>Indicates that the task will be started even if the computer is running on battery power.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.AllowingStartOnRemoteAppSession">
      <summary>
            Indicates that the task will be started even if the task is triggered to run in a Remote Applications Integrated Locally
            (RAIL) session.
            </summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.DataIs(System.String)">
      <summary>Sets the task data to a string.</summary>
      <param name="data">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.DataIs(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.DeletingTaskAfter(System.TimeSpan)">
      <summary>Sets the amount of time that the Task Scheduler will wait before deleting the task after it expires.</summary>
      <param name="duration">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>duration</parameter>
            <parameter>M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.DeletingTaskAfter(System.TimeSpan)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.DisallowingDemandStart">
      <summary>Indicates that the task cannot be started with the Run command or the Context menu.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.DisallowingHardTerminate">
      <summary>Indicates that the task may not be terminated by using TerminateProcess.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.ExecutingAtMost(System.TimeSpan)">
      <summary>Sets the amount of time that is allowed to complete the task.</summary>
      <param name="duration">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>duration</parameter>
            <parameter>M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.ExecutingAtMost(System.TimeSpan)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.InstancesAre(Microsoft.Win32.TaskScheduler.TaskInstancesPolicy)">
      <summary>Sets the policy that defines how the Task Scheduler handles multiple instances of the task.</summary>
      <param name="policy">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>policy</parameter>
            <parameter>M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.InstancesAre(Microsoft.Win32.TaskScheduler.TaskInstancesPolicy)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.NotStoppingIfGoingOnBatteries">
      <summary>Indicates that the task will not be stopped if the computer switches to battery power.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.OnlyIfIdle">
      <summary>Indicates that the Task Scheduler will run the task only if the computer is in an idle condition.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.OnlyIfNetworkAvailable">
      <summary>Indicates that the Task Scheduler will run the task only when a network is available.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.PriorityIs(System.Diagnostics.ProcessPriorityClass)">
      <summary>Sets the priority level of the task.</summary>
      <param name="priority">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>priority</parameter>
            <parameter>M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.PriorityIs(System.Diagnostics.ProcessPriorityClass)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.RestartingEvery(System.TimeSpan)">
      <summary>Sets a value that specifies how long the Task Scheduler will attempt to restart the task.</summary>
      <param name="interval">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>interval</parameter>
            <parameter>M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.RestartingEvery(System.TimeSpan)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.StartingWhenAvailable">
      <summary>Indicates that the Task Scheduler can start the task at any time after its scheduled time has passed.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder.WakingToRun">
      <summary>Indicates that the Task Scheduler will wake the computer when it is time to run the task.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.SettingsBuilder" /> instance.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder">
      <summary>Fluent helper class. Not intended for use.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder.Ending(System.DateTime)">
      <summary>Specifies a date and time on which a trigger will no longer run.</summary>
      <param name="dt">The DateTime value.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder.Ending(System.Int32,System.Int32,System.Int32)">
      <summary>Specifies a date on which a trigger will no longer run.</summary>
      <param name="year">The year.</param>
      <param name="month">The month.</param>
      <param name="day">The day.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder.Ending(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Specifies a date and time on which a trigger will no longer run.</summary>
      <param name="year">The year.</param>
      <param name="month">The month.</param>
      <param name="day">The day.</param>
      <param name="hour">The hour.</param>
      <param name="min">The min.</param>
      <param name="sec">The sec.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder.Ending(System.String)">
      <summary>Specifies a date and time on which a trigger will no longer run.</summary>
      <param name="dt">A string representing a DateTime and parsable via <see cref="M:System.DateTime.Parse(System.String)" />.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder.IsDisabled">
      <summary>Determines whether this trigger is disabled.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder.RepeatingEvery(System.String)">
      <summary>Specifies a repetition interval for the trigger.</summary>
      <param name="span">The interval span string. Must be parsable by <see cref="M:System.TimeSpan.Parse(System.String)" />.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder.RepeatingEvery(System.TimeSpan)">
      <summary>Specifies a repetition interval for the trigger.</summary>
      <param name="span">The interval span.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder.RunningAtMostFor(System.String)">
      <summary>Specifies the maximum amount of time to repeat the execution of a trigger.</summary>
      <param name="span">The duration span string. Must be parsable by <see cref="M:System.TimeSpan.Parse(System.String)" />.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder.RunningAtMostFor(System.TimeSpan)">
      <summary>Specifies the maximum amount of time to repeat the execution of a trigger.</summary>
      <param name="span">The duration span.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder.Starting(System.DateTime)">
      <summary>Specifies a date and time on which a trigger will start.</summary>
      <param name="dt">The DateTime value.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder.Starting(System.Int32,System.Int32,System.Int32)">
      <summary>Specifies a date on which a trigger will start.</summary>
      <param name="year">The year.</param>
      <param name="month">The month.</param>
      <param name="day">The day.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder.Starting(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Specifies a date and time on which a trigger will start.</summary>
      <param name="year">The year.</param>
      <param name="month">The month.</param>
      <param name="day">The day.</param>
      <param name="hour">The hour.</param>
      <param name="min">The min.</param>
      <param name="sec">The sec.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder.Starting(System.String)">
      <summary>Specifies a date and time on which a trigger will start.</summary>
      <param name="dt">A string representing a DateTime and parsable via <see cref="M:System.DateTime.Parse(System.String)" />.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
    <member name="T:Microsoft.Win32.TaskScheduler.Fluent.WeeklyTriggerBuilder">
      <summary>Fluent helper class. Not intended for use.</summary>
    </member>
    <member name="M:Microsoft.Win32.TaskScheduler.Fluent.WeeklyTriggerBuilder.On(Microsoft.Win32.TaskScheduler.DaysOfTheWeek)">
      <summary>Updates a weekly trigger to specify the days of the week on which it will run.</summary>
      <param name="dow">The days of the week.</param>
      <returns>
        <see cref="T:Microsoft.Win32.TaskScheduler.Fluent.TriggerBuilder" /> instance.</returns>
    </member>
  </members>
</doc>